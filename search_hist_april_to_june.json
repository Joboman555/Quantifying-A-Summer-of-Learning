{
  "event": [
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498856998721787"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498856989716466"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498856988952679"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498854025773090"
          }
        ],
        "query_text": "spotify ubuntu app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498848800690532"
          }
        ],
        "query_text": "move everything in folder into a subdirectory except that directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498844169381705"
          }
        ],
        "query_text": "viewport width vs %"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498844163452237"
          }
        ],
        "query_text": "vw vs %"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498844145804892"
          }
        ],
        "query_text": "get width of window without scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498843598543011"
          }
        ],
        "query_text": "slack screen sharing not enabled on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498843590530400"
          }
        ],
        "query_text": "screen sharing not enabled on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498843494869406"
          }
        ],
        "query_text": "how to screen share in slack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498842642862402"
          }
        ],
        "query_text": "mdn scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498842628269577"
          }
        ],
        "query_text": "flexbox custom scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498842309799561"
          }
        ],
        "query_text": "flexbox set scrollbar style"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498842287108997"
          },
          {
            "timestamp_usec": "1498842293894800"
          }
        ],
        "query_text": "flexbox set scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498842132479228"
          }
        ],
        "query_text": "git push override merges"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498841745476611"
          }
        ],
        "query_text": "what is inline-flex"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498840625209044"
          }
        ],
        "query_text": "nonmoving header align with items flexbox"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498840621753591"
          }
        ],
        "query_text": "nonmoving header align with items"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498840459514606"
          }
        ],
        "query_text": "flexbox header offset due to scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498840207780485"
          }
        ],
        "query_text": "vw versus percentage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498836806755589"
          }
        ],
        "query_text": "color highlighter st3 assigning scss variables to other variables"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498836721676976"
          }
        ],
        "query_text": "st3 color highlighter not working for global imports"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498835661993661"
          }
        ],
        "query_text": "st3 color highlighter settings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498835401378494"
          }
        ],
        "query_text": "scss linter sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498835382584522"
          }
        ],
        "query_text": "sublime text 3 color plugin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498834367939968"
          }
        ],
        "query_text": "Media query expression must begin with '(' module build failed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498834304573994"
          }
        ],
        "query_text": "sass import relative path"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498834063212041"
          }
        ],
        "query_text": "intro to sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498832955937175"
          }
        ],
        "query_text": "craigslist boston 4k monitor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498832942270707"
          }
        ],
        "query_text": "how to get a cheap used 4k monitor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498828139422311"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498797069039662"
          },
          {
            "timestamp_usec": "1498797072612026"
          }
        ],
        "query_text": "hollinndagain animal collective"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498797059786639"
          }
        ],
        "query_text": "holindigan"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498792852236903"
          }
        ],
        "query_text": "binding of isaac croissant"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498792681167866"
          }
        ],
        "query_text": "binding of isaac dude in floor with sign"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498792380846853"
          }
        ],
        "query_text": "binding of isaac door with swords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498792049841158"
          }
        ],
        "query_text": "centipede hz full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498787944194997"
          },
          {
            "timestamp_usec": "1498787948023729"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498787942005098"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498776741707305"
          }
        ],
        "query_text": "binding of isaac how to destroy a shopkeeper"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498775586381344"
          }
        ],
        "query_text": "binding of isaac doors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498774323144483"
          },
          {
            "timestamp_usec": "1498774368593203"
          }
        ],
        "query_text": "amc loews liberty tree mall 20"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498774281616148"
          }
        ],
        "query_text": "apple cinemas cambridge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498774275874651"
          }
        ],
        "query_text": "captain underpants playing somerville"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498774116020497"
          }
        ],
        "query_text": "movies playing in somerville"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498771148495309"
          }
        ],
        "query_text": "phab see diffs from old commits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498769287141992"
          }
        ],
        "query_text": "programming typing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498769165629215"
          }
        ],
        "query_text": "difference between lodash map and built in map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498767388461484"
          }
        ],
        "query_text": "disable selecting text css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498767297591140"
          }
        ],
        "query_text": "pointer type mdn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498767234303931"
          }
        ],
        "query_text": "mdn mouseover"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498765612866710"
          }
        ],
        "query_text": "js multiline string"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498765205564669"
          }
        ],
        "query_text": "jest toequal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498763363555113"
          }
        ],
        "query_text": "object get syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498762387672813"
          }
        ],
        "query_text": "check if key in dict js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498759169057995"
          }
        ],
        "query_text": "moment clone moment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498753086871366"
          }
        ],
        "query_text": "javascript private variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498751806071413"
          }
        ],
        "query_text": "programmer typing exercise"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498751506393103"
          }
        ],
        "query_text": "chai expect throw not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498751337068024"
          }
        ],
        "query_text": "chai expect to throw"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498750971174242"
          }
        ],
        "query_text": "moment docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498750963479308"
          }
        ],
        "query_text": "moment compare dates"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498749411785502"
          }
        ],
        "query_text": "when is mlk day 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498749340638486"
          }
        ],
        "query_text": "when is thanksgiving 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498748347573521"
          }
        ],
        "query_text": "moment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498748126875878"
          }
        ],
        "query_text": "sublime pasting doesn't paste on right line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498747962097672"
          }
        ],
        "query_text": "d'angelo and the vanguard full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498747613479725"
          }
        ],
        "query_text": "neural networks to generate buildings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498743035717082"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498743012132082"
          }
        ],
        "query_text": "hacker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498741269132267"
          }
        ],
        "query_text": "west coast swing boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498713711612578"
          }
        ],
        "query_text": "untitled dangelo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498712202014762"
          }
        ],
        "query_text": "d'angelo voodoo rhythm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498708524602224"
          },
          {
            "timestamp_usec": "1498708529048824"
          }
        ],
        "query_text": "what's the difference between east coast and west coast swing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498706899413036"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498706898294878"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498693150390127"
          }
        ],
        "query_text": "The Cambridge Masonic Hall, Cambridge Masonic Hall, 1950 Massachusetts Ave, Cambridge, MA 02140"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498691333285487"
          },
          {
            "timestamp_usec": "1498691341771108"
          },
          {
            "timestamp_usec": "1498691643633166"
          },
          {
            "timestamp_usec": "1498691645767926"
          }
        ],
        "query_text": "(Current Location) -> The Cambridge Masonic Hall, Cambridge Masonic Hall, 1950 Massachusetts Ave, Cambridge, MA 02140"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498691330544906"
          }
        ],
        "query_text": "Cambridge Masonic Hall 1950 Massachusetts Avenue Cambridge, MA 02138 "
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498687903389140"
          }
        ],
        "query_text": "binding of isaac rainbow poop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498687356859310"
          }
        ],
        "query_text": "the binding of isaac pick up bombs behind rocks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498684841788833"
          }
        ],
        "query_text": "create moment at a day of year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498683328305430"
          }
        ],
        "query_text": "moment startof"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498682759233981"
          }
        ],
        "query_text": "es6 inheritance"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498682733163251"
          }
        ],
        "query_text": "inheritance in js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498681818164634"
          }
        ],
        "query_text": "sass basics"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498677922688038"
          }
        ],
        "query_text": "underscore repeat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498677504570326"
          }
        ],
        "query_text": "array.fill"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498669246795860"
          }
        ],
        "query_text": "js is empty list falsy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498669050862478"
          }
        ],
        "query_text": "lodash find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498664927787876"
          }
        ],
        "query_text": "fuzzy finder why does ctrl + p look different than control t atom -vim"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498664924088997"
          }
        ],
        "query_text": "fuzzy finder why does ctrl + p look different than control t at -vim"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498664890924754"
          }
        ],
        "query_text": "fuzzy finder why does ctrl + p look different than control t"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663790018100"
          }
        ],
        "query_text": "ubuntu gnome hdmi makes screen not work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663777418956"
          }
        ],
        "query_text": "ubuntu gnome hdmi split screen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663468572930"
          }
        ],
        "query_text": "atom ctrl p only look in current project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663454424620"
          }
        ],
        "query_text": "atom ctrl shift p only look in current project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663239324246"
          }
        ],
        "query_text": "atom only search in current project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498663113338815"
          }
        ],
        "query_text": "Meteor.settings.public"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498662079745006"
          }
        ],
        "query_text": "localhost:8088_admin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498659999677505"
          }
        ],
        "query_text": "phab how to make a comment on a revision"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498621928925975"
          },
          {
            "timestamp_usec": "1498621937098479"
          }
        ],
        "query_text": "jihadi john"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498620406171981"
          }
        ],
        "query_text": "amber rose"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498620040129499"
          }
        ],
        "query_text": "what is the net worth of machine gun kelly"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498619930602904"
          }
        ],
        "query_text": "machine gun kelly"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498616316964023"
          }
        ],
        "query_text": "who is bill burr"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498615574060129"
          }
        ],
        "query_text": "what is hot ones"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498615404595685"
          }
        ],
        "query_text": "sean evans"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498614838566295"
          }
        ],
        "query_text": "how much is doug stanhope worth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498613555729659"
          }
        ],
        "query_text": "isaac red fire"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498613252501659"
          }
        ],
        "query_text": "binding of isaac gemini"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498612885638593"
          }
        ],
        "query_text": "binding of isaac devil door"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498612561598625"
          }
        ],
        "query_text": "binding of isaac rusty paperclip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498612168372095"
          }
        ],
        "query_text": "binding of isaac how to use matchstick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498612162710904"
          }
        ],
        "query_text": "how to use matchstick fragrance stick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611967094172"
          }
        ],
        "query_text": "binding of isaac change active item"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611905422943"
          }
        ],
        "query_text": "the butter bean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611495596950"
          }
        ],
        "query_text": "how to activate the hourglass isaac"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611417414691"
          }
        ],
        "query_text": "the hourglass isaac"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611411991133"
          }
        ],
        "query_text": "the hourglass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498611292768482"
          }
        ],
        "query_text": "the binding of isaac obsidian blocks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498610613972538"
          }
        ],
        "query_text": "binding of isaac how to activate items"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498610565691262"
          }
        ],
        "query_text": "how to use monstro's tooth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498610533690880"
          }
        ],
        "query_text": "binding of isaac monstro's tooth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498610428127699"
          }
        ],
        "query_text": "binding of isaac what does light in a room mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498610251740510"
          }
        ],
        "query_text": "how to pick up bombs binding of isaac"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498609866210095"
          }
        ],
        "query_text": "binding of isaac how to throw bombs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607810460814"
          }
        ],
        "query_text": "mtg cat tribal standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607803458477"
          }
        ],
        "query_text": "metallic mimic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607151759617"
          }
        ],
        "query_text": "hours of devastation spoiler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607112503153"
          }
        ],
        "query_text": "unearth mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607109122944"
          }
        ],
        "query_text": "unearth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498607027694178"
          }
        ],
        "query_text": "cards with unearth in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498606736835709"
          }
        ],
        "query_text": "gate to the afterlife"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498606541354626"
          }
        ],
        "query_text": "steam summer sale"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498597501698179"
          }
        ],
        "query_text": "atom datatips too small"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498597497027569"
          }
        ],
        "query_text": "datatips too small"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498597018009527"
          }
        ],
        "query_text": "how to import class and type from a file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498596345563523"
          }
        ],
        "query_text": "flow exporting types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498596340894667"
          }
        ],
        "query_text": "flow export type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498596011856991"
          }
        ],
        "query_text": "flow automatically interpret proptypes validators"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498595950666771"
          }
        ],
        "query_text": "props validation for functional components"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498594837024772"
          }
        ],
        "query_text": "atom unsplit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498594160321783"
          }
        ],
        "query_text": "nuclide set flow config path"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498594039880585"
          }
        ],
        "query_text": "linux find location of file in directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593930281117"
          }
        ],
        "query_text": "flow showing errors with scss"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593856157712"
          }
        ],
        "query_text": "difference between importing a class and importing a type flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593851534378"
          }
        ],
        "query_text": "difference between importing a class and importing a type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593710917355"
          }
        ],
        "query_text": "nuclide flow tooltips"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593694665303"
          }
        ],
        "query_text": "nuclide flow popups"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593600295867"
          }
        ],
        "query_text": "reformat nuclide flow type annotations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593380121423"
          }
        ],
        "query_text": "adding flow types to react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593357911432"
          }
        ],
        "query_text": "flow typing destructured props"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498593120902391"
          }
        ],
        "query_text": "reveal in file tree"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592828293957"
          }
        ],
        "query_text": "atom inspector"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592774702830"
          }
        ],
        "query_text": "editing the atom editor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592656767034"
          }
        ],
        "query_text": "editing an atom scheme"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592643590726"
          }
        ],
        "query_text": "how to customize atom theme"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592578752978"
          }
        ],
        "query_text": "atom change gutter margin to text"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592563383711"
          }
        ],
        "query_text": "atom change gutter width to text"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592386853368"
          }
        ],
        "query_text": "favorite atom packages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592348144396"
          }
        ],
        "query_text": "atom pretty icons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498592072680302"
          }
        ],
        "query_text": "nuclide-diagnostics is not compatible with the linter package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498591770608427"
          }
        ],
        "query_text": "atom what is the default font"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498591588446053"
          }
        ],
        "query_text": "linux install watchman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498591442245921"
          }
        ],
        "query_text": "ubuntu 14.04 install watchman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498591416873642"
          }
        ],
        "query_text": "linux install watchman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498591200062795"
          }
        ],
        "query_text": "how to use nuclide and linting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498590916422198"
          }
        ],
        "query_text": "atom babel syntax highlighting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498590787843095"
          }
        ],
        "query_text": "atom set up syntax highlighting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498589712810037"
          }
        ],
        "query_text": "setting up atom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498589657769093"
          }
        ],
        "query_text": "atom set up syntax highlighting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498589002251474"
          }
        ],
        "query_text": "getting started with nuclide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498586173776641"
          }
        ],
        "query_text": "download ubuntu image 16.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498586061638929"
          }
        ],
        "query_text": "install rufus for ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498585960688956"
          }
        ],
        "query_text": "install ubuntu on a usb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498585901636899"
          }
        ],
        "query_text": "install ubuntu on a flash drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498585873366819"
          }
        ],
        "query_text": "how to put gnome on a flash drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498585081671817"
          },
          {
            "timestamp_usec": "1498585089324603"
          }
        ],
        "query_text": "all about redux actions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498583029052193"
          }
        ],
        "query_text": "30 gb to mb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582913085519"
          },
          {
            "timestamp_usec": "1498582916038975"
          }
        ],
        "query_text": "getting started using redux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582910211714"
          }
        ],
        "query_text": "getting started using redu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582639938615"
          }
        ],
        "query_text": "how to remove local synced google drive files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582582110824"
          }
        ],
        "query_text": "remove google drive sync windows"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582387064815"
          }
        ],
        "query_text": "see where unmovable windows files are on partition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498582163328091"
          }
        ],
        "query_text": "defragment windows"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498581235536068"
          }
        ],
        "query_text": "windows disk management shows no space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498581102808062"
          }
        ],
        "query_text": "unix shrink partition size tool"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580903205115"
          }
        ],
        "query_text": "cannot delete pagefile .sys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580679386840"
          }
        ],
        "query_text": "windows explorer show system files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580625273585"
          }
        ],
        "query_text": "'iobitunlocker' command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580614428606"
          }
        ],
        "query_text": "'iounlocker' command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580608158051"
          }
        ],
        "query_text": "'unlocker' command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580597201844"
          }
        ],
        "query_text": "unlocker command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580541457504"
          }
        ],
        "query_text": "windows unlocker download"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580398100040"
          }
        ],
        "query_text": "how to go to a domain that chrome blocks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580371257711"
          }
        ],
        "query_text": "how to go to a domain that chrome doesn't like"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580306035588"
          }
        ],
        "query_text": "chrome whitelist domain"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580298587418"
          }
        ],
        "query_text": "google whitelist domain"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580263095601"
          }
        ],
        "query_text": "is emptyloop safe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580226390492"
          }
        ],
        "query_text": "command line unlocker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580196296267"
          }
        ],
        "query_text": "iunlocker use from command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498580082304968"
          }
        ],
        "query_text": "unlocker windows"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579987466965"
          }
        ],
        "query_text": "cannot delete pagefile because it is being used by another process"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579887395001"
          }
        ],
        "query_text": "can't remove pagefile.sys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579762000037"
          },
          {
            "timestamp_usec": "1498579785317833"
          },
          {
            "timestamp_usec": "1498579788685118"
          }
        ],
        "query_text": "windows disable page files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579729666264"
          }
        ],
        "query_text": "cannot remove item C:\\pagefile not enough permission"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579193172111"
          }
        ],
        "query_text": "powershell delete file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498579183694783"
          }
        ],
        "query_text": "remove on powershell"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498578914199405"
          }
        ],
        "query_text": "cannot remove item C:\\pagefile not enough permission"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498578906580944"
          }
        ],
        "query_text": "cannot remove item C:\\pagefile"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498578367094256"
          }
        ],
        "query_text": "windows hangs on configuring updates at 100%"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498577610543181"
          }
        ],
        "query_text": "you do not have permission to enable or disable the hibernate feature"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498576705098947"
          }
        ],
        "query_text": "when will windows stop defragmentation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498576695030176"
          }
        ],
        "query_text": "when will windows stop allocating"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498576618358997"
          },
          {
            "timestamp_usec": "1498576624117333"
          }
        ],
        "query_text": "how to use atom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574980093273"
          },
          {
            "timestamp_usec": "1498574985098202"
          }
        ],
        "query_text": "higher order components with recompose"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574760053440"
          }
        ],
        "query_text": "react higher order components recompose"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574741083932"
          },
          {
            "timestamp_usec": "1498574743391249"
          },
          {
            "timestamp_usec": "1498574752336434"
          }
        ],
        "query_text": "react higher order components"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574486878066"
          }
        ],
        "query_text": "windows how to safely defrag windows 7"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574472613069"
          }
        ],
        "query_text": "windows how to safely defrag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574270137550"
          }
        ],
        "query_text": "windows shows lots of free space but no shrink space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498574030624792"
          }
        ],
        "query_text": "how to split from windows partition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498573822293283"
          }
        ],
        "query_text": "windows allocate disk space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498573439038924"
          }
        ],
        "query_text": "\"Cannot find module '../pkg/nuclide-node-transpiler/lib/env'\""
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498573355360537"
          }
        ],
        "query_text": "atom package install location"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498573279720590"
          }
        ],
        "query_text": "nuclide \"cannot find module\" \"nuclide-node-transpiler\""
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572989698413"
          },
          {
            "timestamp_usec": "1498573264923735"
          }
        ],
        "query_text": "what does nuclide use node for"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572951793461"
          }
        ],
        "query_text": "nuclide set node path"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572870166262"
          }
        ],
        "query_text": "Cannot find module '../pkg/nuclide-node-transpiler/lib/env'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572761471262"
          }
        ],
        "query_text": "setting up nuclide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572483313725"
          }
        ],
        "query_text": "atom how to install nuclide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572334886943"
          }
        ],
        "query_text": "ubuntu install atom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498572311009454"
          }
        ],
        "query_text": "setting up atom for sublime users"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498533349002570"
          }
        ],
        "query_text": "why is react so popular"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498524368063874"
          }
        ],
        "query_text": "python fixed size array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498515714998776"
          }
        ],
        "query_text": "flow could not decide which case to select"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498512434105169"
          }
        ],
        "query_text": "panda bear meets the grim reaper full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498510097231767"
          }
        ],
        "query_text": "mdn margin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498509358962555"
          }
        ],
        "query_text": "get os independent width of scrollbar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498509203549125"
          }
        ],
        "query_text": "flexbox without default width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498509028991407"
          }
        ],
        "query_text": "css tricks flexbox"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498507275813901"
          }
        ],
        "query_text": "what does box-sizing border-box do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498506370647738"
          }
        ],
        "query_text": "js switch statement"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498505949489541"
          }
        ],
        "query_text": "what is box shadow inset"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498505764467775"
          }
        ],
        "query_text": "div glow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498504281496842"
          }
        ],
        "query_text": "using sass functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498504124108149"
          }
        ],
        "query_text": "hsv 212° 24° 80°"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498504120891480"
          }
        ],
        "query_text": "212° 24° 80°"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498504098621637"
          }
        ],
        "query_text": "#738498 to hsv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498503110552326"
          }
        ],
        "query_text": "sass lighten color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498503059679594"
          }
        ],
        "query_text": "js color library"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498503048164614"
          }
        ],
        "query_text": "color.lighten"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498501138168968"
          }
        ],
        "query_text": "problems making a flex container also a child"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498500655088475"
          }
        ],
        "query_text": "css tricks flexbox"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498499046657933"
          }
        ],
        "query_text": "lodash chunk"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498499032298609"
          }
        ],
        "query_text": "javascript split array into chunks lodash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498499005627985"
          }
        ],
        "query_text": "javascript split array into chunks underscore"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498497622390861"
          }
        ],
        "query_text": "moment day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492755494162"
          }
        ],
        "query_text": "import variable from sass to js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492667195391"
          }
        ],
        "query_text": "sass attribute selector"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492641709134"
          }
        ],
        "query_text": "sass use other attributes in calculation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492472104575"
          }
        ],
        "query_text": "sass use js value to compute variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492307037128"
          }
        ],
        "query_text": "sass import statement"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492247379745"
          }
        ],
        "query_text": "import variable from sass to js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498492240925833"
          }
        ],
        "query_text": "import variable from sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498491328292831"
          }
        ],
        "query_text": "#738498"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489793744137"
          }
        ],
        "query_text": "new Date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489540437743"
          }
        ],
        "query_text": "what color is #ccc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489230517172"
          }
        ],
        "query_text": "snapshot serializers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489148825131"
          }
        ],
        "query_text": "jest configure snapshot displays"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489081037262"
          }
        ],
        "query_text": "snapshot testing big objects hard to view"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489043086222"
          }
        ],
        "query_text": "change way we view snapshot tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498489021914409"
          }
        ],
        "query_text": "how to make jest snapshot tests render better for large objects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498488030573086"
          }
        ],
        "query_text": "du sort"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487933606856"
          }
        ],
        "query_text": "what unit is du in"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487926242386"
          }
        ],
        "query_text": "370556 bytes to mb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487922273022"
          }
        ],
        "query_text": "370556 bytes to gb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487914300426"
          }
        ],
        "query_text": "370556 megabytes to gb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487724548559"
          }
        ],
        "query_text": "unix command line see how large each folder is"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498487680145977"
          }
        ],
        "query_text": "ubuntu see where disk space is being used"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498440991609672"
          }
        ],
        "query_text": "high level math pick up lines"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498440976083712"
          },
          {
            "timestamp_usec": "1498440984885416"
          }
        ],
        "query_text": "high level math puns"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498439899163741"
          }
        ],
        "query_text": "optimum nutrition cookies and cream amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498439207292812"
          }
        ],
        "query_text": "david cross drug use"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498435967556977"
          }
        ],
        "query_text": "on cookies and cream amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498435948947631"
          }
        ],
        "query_text": "on cookies and cream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498435884601366"
          }
        ],
        "query_text": "optimum nutrition whey protein 15 servings amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498435873597376"
          }
        ],
        "query_text": "optimum nutrition whey protein 15 servings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498431446961997"
          },
          {
            "timestamp_usec": "1498431473713844"
          }
        ],
        "query_text": "professional spike ball"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498430762410130"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498429683168717"
          }
        ],
        "query_text": "natan linder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498423447413386"
          }
        ],
        "query_text": "tracy morgan"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498423423007757"
          }
        ],
        "query_text": "who is ricky gervais"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498419436796596"
          }
        ],
        "query_text": "july boston hackathon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498419321587217"
          }
        ],
        "query_text": "hackathons in boston this summer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498417187971016"
          }
        ],
        "query_text": "project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498417147425357"
          }
        ],
        "query_text": "letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498417124839144"
          }
        ],
        "query_text": "silicon valley season 4 episodes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498417116842388"
          }
        ],
        "query_text": "silicon valley season 4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498415554921018"
          }
        ],
        "query_text": "Kolmogorov complexity"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498405803116654"
          }
        ],
        "query_text": "Stephanie Hurlburt binomial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498405640473352"
          }
        ],
        "query_text": "Stephanie Hurlburt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498367368017150"
          }
        ],
        "query_text": "charlie and the chocolate factory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498366133808252"
          }
        ],
        "query_text": "netflix login"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498363469195035"
          }
        ],
        "query_text": "what is a roofie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498351588515139"
          },
          {
            "timestamp_usec": "1498351593820713"
          },
          {
            "timestamp_usec": "1498351600515629"
          },
          {
            "timestamp_usec": "1498351603237976"
          },
          {
            "timestamp_usec": "1498351612324487"
          },
          {
            "timestamp_usec": "1498352681169312"
          }
        ],
        "query_text": "(Current Location) -> 92 Hammond St, Roxbury Crossing, MA 02120"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498351586064690"
          }
        ],
        "query_text": "92 Hammond St, Roxbury Crossing, MA 02120-2249, United States"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498324769580458"
          }
        ],
        "query_text": "arcade near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498257788280503"
          }
        ],
        "query_text": "olin college -> Cape Cod, Massachusetts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498257779347009"
          }
        ],
        "query_text": "cape cod"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498257770301504"
          }
        ],
        "query_text": "Franklin W. Olin College of Engineering, 1000 Olin Way, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498257760972509"
          }
        ],
        "query_text": "(Current Location) -> Cape Cod, Massachusetts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498257756782423"
          },
          {
            "timestamp_usec": "1498257759435242"
          }
        ],
        "query_text": "cape cod"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498255776226377"
          }
        ],
        "query_text": "mit iot hackathon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498255556927546"
          }
        ],
        "query_text": "hackathon boston mit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498255528703512"
          }
        ],
        "query_text": "hackathon boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498248752097692"
          }
        ],
        "query_text": "sass ampersand"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498248473656935"
          },
          {
            "timestamp_usec": "1498248500976704"
          }
        ],
        "query_text": "sass specify children"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498246933654195"
          }
        ],
        "query_text": "only pop certain files git stash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498246190742017"
          }
        ],
        "query_text": "sass insert variable without quotes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498246118557018"
          }
        ],
        "query_text": "scss define variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498245894164919"
          }
        ],
        "query_text": "border-top mdn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498245410437346"
          }
        ],
        "query_text": "git undo working changes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498243410788302"
          }
        ],
        "query_text": "disableautomock not working for scss files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498240339929493"
          }
        ],
        "query_text": "jest run modes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498240320729823"
          }
        ],
        "query_text": "jest args -o"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498240311199643"
          }
        ],
        "query_text": "jest -o"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498240083439386"
          }
        ],
        "query_text": "jest run in pick mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498237722764317"
          }
        ],
        "query_text": "jest cli options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236840320173"
          },
          {
            "timestamp_usec": "1498236842545659"
          }
        ],
        "query_text": "git unstage added files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236764273763"
          }
        ],
        "query_text": "how to git stash pop only certain files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236575377513"
          }
        ],
        "query_text": "git stash a specific file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236524457138"
          }
        ],
        "query_text": "how to undo changes to files in git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236505663680"
          }
        ],
        "query_text": "git commit file -p"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498236256956053"
          }
        ],
        "query_text": "atlassian git checkout file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498231845414697"
          }
        ],
        "query_text": "scss define variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498231361633450"
          }
        ],
        "query_text": "Missed semicolon You tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498231112316339"
          }
        ],
        "query_text": "how to go make to last commit and make a change"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498230655924823"
          },
          {
            "timestamp_usec": "1498230655960481"
          }
        ],
        "query_text": "git checkout previous commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498230608381391"
          }
        ],
        "query_text": "git checkout last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498230414550565"
          }
        ],
        "query_text": "nucleotide atom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498230411298794"
          }
        ],
        "query_text": "nucleotide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498230397295703"
          }
        ],
        "query_text": "better flow integration with sublime"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498229860760170"
          }
        ],
        "query_text": "google extensions bring up multiple pages in one click"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498227828575683"
          },
          {
            "timestamp_usec": "1498227832025185"
          }
        ],
        "query_text": "panda bear Boys Latin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498224050690301"
          }
        ],
        "query_text": "f"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498193700790567"
          },
          {
            "timestamp_usec": "1498193703188097"
          },
          {
            "timestamp_usec": "1498193706679046"
          }
        ],
        "query_text": "boys latin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498185266186722"
          }
        ],
        "query_text": "low calorie ice cream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498185204692126"
          }
        ],
        "query_text": "myprotein chocolate smooth recipe changed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498185198245844"
          }
        ],
        "query_text": "chocolate smoothie recipe changed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498185066245278"
          }
        ],
        "query_text": "how to request a refund on amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498184961583412"
          }
        ],
        "query_text": "reddit fitness low calorie milkshake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498180719395238"
          }
        ],
        "query_text": "hack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498173597693861"
          },
          {
            "timestamp_usec": "1498173637647745"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498173595499072"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498165676776096"
          }
        ],
        "query_text": "nickerson state park reservations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498164758017612"
          }
        ],
        "query_text": "what is chrome-type-renderer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498163499502596"
          }
        ],
        "query_text": "how to import variables from scss files to js file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498163489801372"
          }
        ],
        "query_text": "how to import variables from scss files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498163060236903"
          }
        ],
        "query_text": "what is the difference between styles and class name js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498163056179649"
          }
        ],
        "query_text": "what is the difference between styles and class name"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498160222225291"
          }
        ],
        "query_text": "sass lighten"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498160160562484"
          }
        ],
        "query_text": "bourbon lighten"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498159538163581"
          }
        ],
        "query_text": "sublime text 3 convert camel case to"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498159322501753"
          }
        ],
        "query_text": "scss arithmetic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498158953245977"
          }
        ],
        "query_text": "scss define variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498158928819371"
          }
        ],
        "query_text": "scss calc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498158612407266"
          }
        ],
        "query_text": "css make text inside div bold"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498158446251236"
          }
        ],
        "query_text": "mdn border"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498158287509458"
          }
        ],
        "query_text": "google calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498147890371092"
          }
        ],
        "query_text": "moment to date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498147133378034"
          }
        ],
        "query_text": "proptypes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498147100899477"
          }
        ],
        "query_text": "PropTypes.arrayOf type referenced from value position"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498145757924784"
          }
        ],
        "query_text": "is the empty list falsy javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498145753056876"
          }
        ],
        "query_text": "is the empty list falsy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498145510455949"
          }
        ],
        "query_text": "flow export type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498144997969455"
          }
        ],
        "query_text": "moment proptypes error"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498144889995453"
          }
        ],
        "query_text": "how to find where you're getting Accessing PropTypes via the main React package is deprecated. Use the prop-types package from npm instead from"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498144503300540"
          }
        ],
        "query_text": "add staged changes to previous commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498144305875132"
          }
        ],
        "query_text": "(0 , (_chaiExt || _load_chaiExt(...)).expect)(...).toMatchSnapshot is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498144003604354"
          }
        ],
        "query_text": "A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498143799353253"
          },
          {
            "timestamp_usec": "1498143810362054"
          }
        ],
        "query_text": "jest unmock all files in folder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498143714082480"
          }
        ],
        "query_text": "jest turn off mocking"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498143527402360"
          }
        ],
        "query_text": "jest unmock everything in a folder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498143393830306"
          }
        ],
        "query_text": "jest unmock dependency tree"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498143302223313"
          }
        ],
        "query_text": "Warning: React.createElement: type is invalid -- expected a string (for bu ilt-in components) or a class/function (for composite components) but got: objec t."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498142814374003"
          }
        ],
        "query_text": "jest unmock all dependencies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498142806558693"
          }
        ],
        "query_text": "jest unmock all dependencies of a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498141400622412"
          }
        ],
        "query_text": "souvlaki full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498141388394498"
          }
        ],
        "query_text": "shiva souvlaki"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498138711190301"
          }
        ],
        "query_text": "the stud mit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498098697604431"
          }
        ],
        "query_text": "the stud mit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498098686933781"
          }
        ],
        "query_text": "the stud"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498098680851170"
          }
        ],
        "query_text": "bike shops near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498097210948547"
          }
        ],
        "query_text": "(Current Location) -> 77 Massachusetts Ave, Cambridge, MA 02139"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498097209569735"
          }
        ],
        "query_text": "77 Massachusetts Ave, Cambridge, MA 02139"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498086532692500"
          },
          {
            "timestamp_usec": "1498086538841211"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498086531595192"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084839068030"
          },
          {
            "timestamp_usec": "1498084839418838"
          },
          {
            "timestamp_usec": "1498084842256341"
          }
        ],
        "query_text": "(Current Location) -> 496 Tremont St, Boston, MA 02116"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084769708550"
          }
        ],
        "query_text": "Community Bike Supply Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084682703327"
          }
        ],
        "query_text": "Fortified Bicycle Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084649118849"
          },
          {
            "timestamp_usec": "1498084679769778"
          }
        ],
        "query_text": "bike shops near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084473134166"
          }
        ],
        "query_text": "Tremont St. at West St. Hubway Station Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084421209635"
          }
        ],
        "query_text": "hubway at boston commons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084140460885"
          }
        ],
        "query_text": "(Current Location) -> 150 Tremont St, Boston, MA 02111"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084044352928"
          },
          {
            "timestamp_usec": "1498084137032050"
          }
        ],
        "query_text": "Tremont St. at West St. Hubway Station Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498084028518765"
          }
        ],
        "query_text": "nearest hubway"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498081818012002"
          },
          {
            "timestamp_usec": "1498081824472527"
          },
          {
            "timestamp_usec": "1498081869324999"
          },
          {
            "timestamp_usec": "1498082541559317"
          }
        ],
        "query_text": "(Current Location) -> Park Street, Tremont St & Park Street & Winter Street, Boston, MA 02108"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498081815787651"
          }
        ],
        "query_text": "Park Street, Tremont St & Park Street & Winter Street, Boston, MA 02108"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498081240280360"
          }
        ],
        "query_text": "when is labor day 2018"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498079850185041"
          }
        ],
        "query_text": "bike shops near park street station boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498079837398620"
          }
        ],
        "query_text": "bike shops near park st t stop boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498079827373921"
          }
        ],
        "query_text": "bike shops near park st boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498077948540267"
          }
        ],
        "query_text": "what dais the rule for memorial day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498077006551492"
          }
        ],
        "query_text": "math.abs javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076747907489"
          }
        ],
        "query_text": "moment startof"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076710667936"
          }
        ],
        "query_text": "moment find last day of week in month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076371991012"
          }
        ],
        "query_text": "when is memorial day 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076349326873"
          }
        ],
        "query_text": "how to iterate backwards through a js array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076259188954"
          }
        ],
        "query_text": "moment api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498076071936644"
          }
        ],
        "query_text": "what day of the year is memorial day 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075742180929"
          }
        ],
        "query_text": "when is columbus day celebrated"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075734127028"
          }
        ],
        "query_text": "when is columbus day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075622225498"
          }
        ],
        "query_text": "when is labor day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075572053887"
          }
        ],
        "query_text": "when is Independence Day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075503494865"
          },
          {
            "timestamp_usec": "1498075510221108"
          }
        ],
        "query_text": "when is memorial day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075449891923"
          }
        ],
        "query_text": "when is presidents day 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075338935741"
          },
          {
            "timestamp_usec": "1498075346756564"
          }
        ],
        "query_text": "when is presidents day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498075078494379"
          }
        ],
        "query_text": "how to add flow syntax highlighting to babel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498074993507868"
          }
        ],
        "query_text": "flow interface vs type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498072379950103"
          }
        ],
        "query_text": "lodash filter object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498067134039483"
          }
        ],
        "query_text": "what is the date of thanksgiving this year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498066876636593"
          }
        ],
        "query_text": "why do people minify js files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498066861412889"
          }
        ],
        "query_text": "what does uglify js do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498065027350813"
          }
        ],
        "query_text": "lodash find one"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498064997742187"
          }
        ],
        "query_text": "lodash find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498064469041406"
          }
        ],
        "query_text": "sublime erase to end in line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498063082608375"
          }
        ],
        "query_text": "get date from moment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060984287223"
          }
        ],
        "query_text": "javascript date object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060946325823"
          }
        ],
        "query_text": "when is thanksgiving 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060934307416"
          },
          {
            "timestamp_usec": "1498060939386659"
          }
        ],
        "query_text": "rules for memorial day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060923506308"
          }
        ],
        "query_text": "when is thanksgiving 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060876562962"
          }
        ],
        "query_text": "rules for memorial day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060503726418"
          }
        ],
        "query_text": "array.last javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060409201000"
          }
        ],
        "query_text": "lodash findone"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060400682545"
          }
        ],
        "query_text": "get first non null element in array 'javascript'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060385008180"
          }
        ],
        "query_text": "get first non null element in array javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060377312061"
          }
        ],
        "query_text": "get first non null element in list javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498060360931952"
          }
        ],
        "query_text": "get first non null element in list js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498059952590449"
          }
        ],
        "query_text": "subl search in current opened folder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498059927119216"
          }
        ],
        "query_text": "javascript date to string"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498059919693170"
          }
        ],
        "query_text": "date to string"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498057853260879"
          }
        ],
        "query_text": "spotify web player"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498057077948542"
          }
        ],
        "query_text": "proptypes specify object structure"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498056725197315"
          }
        ],
        "query_text": "the fire starts to burn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498056311469989"
          }
        ],
        "query_text": "how to diff committed files in git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498054981511242"
          }
        ],
        "query_text": "how to use logitech mouse on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498054892358326"
          }
        ],
        "query_text": "how to connect logitech darkfield performance mx mouse"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498054887828770"
          }
        ],
        "query_text": "how to connect logitech darkfield performance mxmouse"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498054853048573"
          }
        ],
        "query_text": "how to connect logitech darkfield mouse"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498016708906007"
          }
        ],
        "query_text": "oh eileen bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498016704648387"
          }
        ],
        "query_text": "eileen bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498013895707640"
          }
        ],
        "query_text": "oh eileen bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498013881955785"
          }
        ],
        "query_text": "oh eileen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1498010209960676"
          },
          {
            "timestamp_usec": "1498010215298224"
          },
          {
            "timestamp_usec": "1498010216849656"
          },
          {
            "timestamp_usec": "1498010219777087"
          }
        ],
        "query_text": "park street bike shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497995974550873"
          },
          {
            "timestamp_usec": "1497995980723346"
          }
        ],
        "query_text": "(Current Location) -> Davis Square, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497995896886441"
          }
        ],
        "query_text": "can you ride a bike on a flat tire"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497994928024048"
          },
          {
            "timestamp_usec": "1497994933292790"
          }
        ],
        "query_text": "(Current Location) -> Davis Square, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497994925876305"
          }
        ],
        "query_text": "davis square"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497991949045939"
          }
        ],
        "query_text": "array append javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497991605101939"
          }
        ],
        "query_text": "proptypes of type instance of"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497991594736054"
          }
        ],
        "query_text": "prototypes of type instance of"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497991589436303"
          }
        ],
        "query_text": "prototypes of type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497990164037304"
          }
        ],
        "query_text": "what is the absolute date of the year of thanksgiving"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497990075159099"
          }
        ],
        "query_text": "what day of year did thanksgiving occur on in 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497989947922503"
          }
        ],
        "query_text": "when does thanksgiving occur"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497989514230630"
          }
        ],
        "query_text": "mlk day rule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497987521551142"
          }
        ],
        "query_text": "moment js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497986265673048"
          }
        ],
        "query_text": "does fill initialize each element with same reference javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497986171379769"
          },
          {
            "timestamp_usec": "1497986251788260"
          }
        ],
        "query_text": "does fill initialize each element with same reference"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497983385447680"
          }
        ],
        "query_text": "moment day of week"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497983116460880"
          }
        ],
        "query_text": "moment find first day of week in month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497982447204553"
          }
        ],
        "query_text": "js append to array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497982036764074"
          }
        ],
        "query_text": "moment get day in year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497982029694225"
          }
        ],
        "query_text": "moment get days in month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497981813995970"
          }
        ],
        "query_text": "moment js add a week"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497981809486220"
          }
        ],
        "query_text": "moment js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497981144827892"
          }
        ],
        "query_text": "test if an array is empty javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980375461104"
          }
        ],
        "query_text": "js arrays"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980297024913"
          }
        ],
        "query_text": "how many days in a leap year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980285860120"
          }
        ],
        "query_text": "moment get number of days in year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980272713227"
          }
        ],
        "query_text": "moment daysIn year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980253546787"
          }
        ],
        "query_text": "moment is leap year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980178036637"
          }
        ],
        "query_text": "array constructor with default item javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980171763427"
          }
        ],
        "query_text": "array constructor with default item"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980159299244"
          }
        ],
        "query_text": "create an n length array in javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980087763158"
          }
        ],
        "query_text": "moment pass in just year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980085380623"
          }
        ],
        "query_text": "moment pass in just yeah"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497980065881281"
          }
        ],
        "query_text": "moment constructor api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497979152674341"
          }
        ],
        "query_text": "sublime better sidebar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497976008266861"
          }
        ],
        "query_text": "button mdn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497975474177500"
          }
        ],
        "query_text": "react functional components"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497973798226292"
          }
        ],
        "query_text": "how to rebase on master"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497969589325844"
          }
        ],
        "query_text": "git remove old branches"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497964970493175"
          }
        ],
        "query_text": "what is access time of a javascript array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497964958206657"
          }
        ],
        "query_text": "what is access time of a java array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497964918816333"
          }
        ],
        "query_text": "arrays in javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497956304952743"
          }
        ],
        "query_text": "google drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497956217176095"
          }
        ],
        "query_text": "how to save your sublime settings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497917856626301"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497917856173689"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497908831796052"
          }
        ],
        "query_text": "flow how to export an interface type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497908730666654"
          }
        ],
        "query_text": "importing types fow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497908679958508"
          },
          {
            "timestamp_usec": "1497908686958517"
          }
        ],
        "query_text": "flow cannot find type annotation imports"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497907131122184"
          },
          {
            "timestamp_usec": "1497907445744973"
          }
        ],
        "query_text": "moment constructor pass in weekday"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497904812396857"
          }
        ],
        "query_text": "how to merge changes from two branches"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903706878184"
          }
        ],
        "query_text": "moment iterate through months in year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903470386819"
          }
        ],
        "query_text": "to next month moment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903465203447"
          }
        ],
        "query_text": "to next month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903273983095"
          }
        ],
        "query_text": "moment get days in month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903245257197"
          }
        ],
        "query_text": "leap year rules"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497903035288751"
          }
        ],
        "query_text": "chai snapshot testing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497902968711213"
          }
        ],
        "query_text": "(_chaiExt || _load_chaiExt(...)).expect)(...).toMatchSnapshot is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497902886871534"
          }
        ],
        "query_text": "snapshot testing non react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497902879491136"
          }
        ],
        "query_text": "snapshot testing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497902521210079"
          }
        ],
        "query_text": "jest get started with snapshot testing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497902145609531"
          }
        ],
        "query_text": "lodash initial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497900416848527"
          }
        ],
        "query_text": "date proptypes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497898133087904"
          }
        ],
        "query_text": "weather this weekend on cape cod"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497898123816670"
          }
        ],
        "query_text": "weather this weekend"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497897311934596"
          }
        ],
        "query_text": "javascript declare a class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497891803231521"
          }
        ],
        "query_text": "overflowY behavior js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497891798984466"
          }
        ],
        "query_text": "overflow behavior"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497888235871808"
          }
        ],
        "query_text": "only love can break your heart"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497885823333309"
          }
        ],
        "query_text": "use arrow function without changing this"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497885692715512"
          }
        ],
        "query_text": "does changing to function to unnamed function js change this behaviour"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497884739599264"
          }
        ],
        "query_text": "creating polls in slack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497884010486997"
          }
        ],
        "query_text": "stephen eckels"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497839206642422"
          }
        ],
        "query_text": "invisibilia tms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497839132068379"
          }
        ],
        "query_text": "rtms studies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497838649994163"
          }
        ],
        "query_text": "brain stimulation curing aspergers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497838500976106"
          }
        ],
        "query_text": "are there any treatments for aspergers reddit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497838426608218"
          }
        ],
        "query_text": "are there any treatments for aspergers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497837134277216"
          }
        ],
        "query_text": "willrobotstakemyjob"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497835824472718"
          }
        ],
        "query_text": "whAT IS CHARCOAL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497834900814063"
          }
        ],
        "query_text": "flametongue kavu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497834710719950"
          }
        ],
        "query_text": "hours of devastation spoiler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497828145708807"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497828144540276"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497825484568936"
          },
          {
            "timestamp_usec": "1497825486226799"
          }
        ],
        "query_text": "(Current Location) -> 61 Park Dr, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497825482139787"
          }
        ],
        "query_text": "Boston, MA -> 61 Park Dr, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497825475573574"
          }
        ],
        "query_text": "61 Park Drive, Boston, MA -> Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497825457180435"
          },
          {
            "timestamp_usec": "1497825457198863"
          },
          {
            "timestamp_usec": "1497825459890107"
          }
        ],
        "query_text": "(Current Location) -> Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497820880395347"
          },
          {
            "timestamp_usec": "1497820924582038"
          }
        ],
        "query_text": "(Current Location) -> Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497815654295641"
          }
        ],
        "query_text": "(Current Location) -> Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497815653826962"
          }
        ],
        "query_text": "Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497808900572815"
          }
        ],
        "query_text": "(Current Location) -> Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497808897943885"
          }
        ],
        "query_text": "hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497800010505423"
          }
        ],
        "query_text": "(Current Location) -> 20 Joanne Ln, Weston, CT 06883"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497796312540032"
          }
        ],
        "query_text": "(Current Location) -> 20 Joanne Ln, Weston, CT 06883"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497796309801886"
          }
        ],
        "query_text": "20 joanne ln weston ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497729109004912"
          },
          {
            "timestamp_usec": "1497729117965582"
          }
        ],
        "query_text": "Hartford Station, Union Place, Hartford, CT -> Bushnell Park, 15 Trinity St, Hartford, CT 06106"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497729101401148"
          },
          {
            "timestamp_usec": "1497729103178460"
          }
        ],
        "query_text": "(Current Location) -> Bushnell Park, 15 Trinity St, Hartford, CT 06106"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497729096433646"
          }
        ],
        "query_text": "bushnell park"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497708370316705"
          }
        ],
        "query_text": "(Current Location) -> West Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497673997854242"
          }
        ],
        "query_text": "what is congress suing trump over"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497672631535866"
          }
        ],
        "query_text": "digital standup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497671136921328"
          }
        ],
        "query_text": "fleet foxes full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497668604863668"
          }
        ],
        "query_text": "what is Apache license 2.0"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497668460840344"
          }
        ],
        "query_text": "what is the license for google's tensorflow object detection api?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497666408630179"
          }
        ],
        "query_text": "project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497666379098991"
          }
        ],
        "query_text": "silicon valley s4 e8 watch online free"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497666355257829"
          }
        ],
        "query_text": "letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497666342924344"
          }
        ],
        "query_text": "silicon valley s4 episodes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497666321206582"
          }
        ],
        "query_text": "silicon valley"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497657003555047"
          }
        ],
        "query_text": "102 Chester Street, Allston, MA -> Southbury, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656994960558"
          }
        ],
        "query_text": "Southbury, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656986598499"
          }
        ],
        "query_text": "google maps"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656851688683"
          }
        ],
        "query_text": "ticketmaster"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656837165841"
          }
        ],
        "query_text": "ct concerts on saturday"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656741514174"
          }
        ],
        "query_text": "ct saturday jazz"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656712519582"
          }
        ],
        "query_text": "father's day jazz brunch ct saturday"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656683830334"
          }
        ],
        "query_text": "father's day jazz brunch ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656523938377"
          }
        ],
        "query_text": "blood sweat and tears show ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656517985619"
          }
        ],
        "query_text": "blood sweat and tears"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656330888655"
          }
        ],
        "query_text": "ct things to do for father's day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656317226760"
          }
        ],
        "query_text": "the henry ford museum"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656298098767"
          }
        ],
        "query_text": "the magical history tour: a beatles memorabilia exhibition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656258361948"
          }
        ],
        "query_text": "magical mystery tour ct museum"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497656150980373"
          }
        ],
        "query_text": "the pirate bay"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497653725346169"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497653725026090"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497652317165177"
          }
        ],
        "query_text": "blaze lifecycle methods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497652288414325"
          }
        ],
        "query_text": "blaze on rendered method"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497652279796476"
          }
        ],
        "query_text": "meteor on rendered methods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497652268416153"
          }
        ],
        "query_text": "meteor lifecycle methods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497651986423815"
          }
        ],
        "query_text": "meteor call a method on re-render"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497651357761690"
          }
        ],
        "query_text": "jquery sortable event order"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497651352502272"
          }
        ],
        "query_text": "jquery draggable event order"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497650339497883"
          }
        ],
        "query_text": "javascript wait"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497647813916620"
          }
        ],
        "query_text": "jquery draggable event listener"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497643794070770"
          }
        ],
        "query_text": "jquery meteor detach object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497643786165369"
          }
        ],
        "query_text": "jquery meteor detach reactive dependency"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497643768056046"
          }
        ],
        "query_text": "jquery meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497643736211307"
          }
        ],
        "query_text": "jquery meteor detaching object breaks reactive dependency"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497643717903720"
          }
        ],
        "query_text": "jquery meteor object breaks reactive dependency"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497642224053305"
          }
        ],
        "query_text": "javascript splice"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497641091125180"
          }
        ],
        "query_text": "compare to see if two jquery objects are the same"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497641049034673"
          }
        ],
        "query_text": "define a function in chrome console"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497640962762550"
          }
        ],
        "query_text": "see the difference between two jquery objects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497639551509019"
          }
        ],
        "query_text": "how to append to beginning of a jquery array like object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497639439605232"
          }
        ],
        "query_text": "js put something at head of list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497638637391829"
          }
        ],
        "query_text": "temporarily remove item from dom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497638278177627"
          }
        ],
        "query_text": "jquery search by class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497637951486232"
          }
        ],
        "query_text": "jquery sortable event order"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497637492672426"
          }
        ],
        "query_text": "jquery what is a prevObject"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497637388425532"
          },
          {
            "timestamp_usec": "1497637413623677"
          }
        ],
        "query_text": "get index of div in parent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497637350938809"
          }
        ],
        "query_text": "what is a jquery item's context"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497637203824984"
          }
        ],
        "query_text": "sortable get the final position of item at stop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497633847886274"
          }
        ],
        "query_text": "jquery get class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497632103395074"
          }
        ],
        "query_text": "jquery ui draggable to sortable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497632095758546"
          }
        ],
        "query_text": "jquery ui connect to sortable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497631813545817"
          }
        ],
        "query_text": "jquery sortable event order"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497631195129600"
          }
        ],
        "query_text": "jquery sortable delete item while it's being dragged"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497630602160625"
          }
        ],
        "query_text": "this.sortable(toarray) returns a list of empty strings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497629676000757"
          }
        ],
        "query_text": "the order of sortable events"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497629567628199"
          }
        ],
        "query_text": "sortable example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497629519439213"
          }
        ],
        "query_text": "sortable figuring update position of elements on drag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497629503517532"
          }
        ],
        "query_text": "sortable figuring out new position of item"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497629264009029"
          }
        ],
        "query_text": "sortable get original position of item"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497627900628537"
          }
        ],
        "query_text": "jquery get 0"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497626555685949"
          }
        ],
        "query_text": "jquery when is the placeholder removed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497626528843044"
          }
        ],
        "query_text": "ui sortable cant find placeholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497626234372639"
          }
        ],
        "query_text": "jquery object api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497626087795058"
          }
        ],
        "query_text": "what is the second argument to parseInt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497625651238282"
          }
        ],
        "query_text": "jquery what is the ui helper?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497625612638750"
          }
        ],
        "query_text": "sortable jquery api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497625480012183"
          }
        ],
        "query_text": "converting circular structure to json at json.stringify"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497625232397684"
          }
        ],
        "query_text": "what does a jquery selector return"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497625170298118"
          }
        ],
        "query_text": "What does a jquery selector on an object do?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497624911468305"
          }
        ],
        "query_text": "youtube brave bird full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497577321530587"
          }
        ],
        "query_text": "what happened to mac demarcos band"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497577250896711"
          }
        ],
        "query_text": "alex g guilty"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497576914007222"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497573949236863"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497573877745046"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497573866460562"
          }
        ],
        "query_text": "(Current Location) -> 14 Clarendon Ave, Somerville, MA 02144"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497565907790019"
          },
          {
            "timestamp_usec": "1497565912587663"
          },
          {
            "timestamp_usec": "1497565917731908"
          }
        ],
        "query_text": "(Current Location) -> 14 Clarendon Ave, Somerville, MA 02144"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497565904489435"
          }
        ],
        "query_text": "14 clarendon Ave, Somerville MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497565009470881"
          }
        ],
        "query_text": "sortable receive vs stop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497564818665643"
          }
        ],
        "query_text": "sortable jquery index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497564707543391"
          }
        ],
        "query_text": "jquery draggable index returning wrong value"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497564328816459"
          }
        ],
        "query_text": "js max"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497563181289209"
          }
        ],
        "query_text": "git checkout last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497562176082120"
          }
        ],
        "query_text": "git diff against last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497561886310592"
          }
        ],
        "query_text": "jquery draggable api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497561775392435"
          }
        ],
        "query_text": "jquery draggable revert property"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497561344611324"
          }
        ],
        "query_text": "jquery sortable placeholder looks weird"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497561214125912"
          }
        ],
        "query_text": "jquery sortable event when placeholder is rendered"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497561068077127"
          }
        ],
        "query_text": "jquery sortable drop vs recieve"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560944565697"
          }
        ],
        "query_text": "jquery sortable placeholde rrenders too many times"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560649200899"
          }
        ],
        "query_text": "animation-fill-mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560406407416"
          }
        ],
        "query_text": "$action css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560399257164"
          }
        ],
        "query_text": "$action"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560379569591"
          }
        ],
        "query_text": "$action jquery animation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560202756592"
          }
        ],
        "query_text": "jquery sortable api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497560150566498"
          }
        ],
        "query_text": "sortable placeholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497559898387403"
          }
        ],
        "query_text": "dragging on element causes drag of low-opacity"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497559878974195"
          }
        ],
        "query_text": "get rid of invisible low-opacity dragging"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497559817247179"
          }
        ],
        "query_text": "jquery draggable with sortable triggers multiple times"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497559791255442"
          }
        ],
        "query_text": "jquery draggable with sortable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497559369484016"
          }
        ],
        "query_text": "css transition property"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497556514566884"
          }
        ],
        "query_text": "alex g full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497554069744088"
          }
        ],
        "query_text": "chrome devtools render time"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497553302233803"
          }
        ],
        "query_text": "what does cursorAt do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497553007552566"
          }
        ],
        "query_text": "chrome inspector search for class name"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497552710806631"
          }
        ],
        "query_text": "how to use jquery draggable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497552649925496"
          }
        ],
        "query_text": "jquery draggable documentation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497551575158942"
          }
        ],
        "query_text": "how to tell where cursor is inheriting behavior from"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497551375879197"
          }
        ],
        "query_text": "change cursor hover behaviour"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497551280314324"
          }
        ],
        "query_text": "webkit-touch-callout"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497551249074646"
          }
        ],
        "query_text": "what is webkit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497551169506555"
          }
        ],
        "query_text": "make header not highlightable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497550662592499"
          }
        ],
        "query_text": "css padding"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497550422695977"
          }
        ],
        "query_text": "flex set size of div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497550253576444"
          }
        ],
        "query_text": "webkit justify content unknown property name"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497549320061029"
          }
        ],
        "query_text": "front end color picker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497549293929339"
          }
        ],
        "query_text": "div background color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497547020489696"
          }
        ],
        "query_text": "spotify web app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497546815752662"
          }
        ],
        "query_text": "apple podcasts turn off auto downloading"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497544549263441"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497544542789070"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497544542387177"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497531350363219"
          }
        ],
        "query_text": "windows print landscape mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497530997357681"
          }
        ],
        "query_text": "how to instal printer driver manually windows 7"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497530891296607"
          }
        ],
        "query_text": "HP designjet T520 36in driver download fails"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497530885699480"
          }
        ],
        "query_text": "HP designjet T520 36in driver fails"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497495737630705"
          }
        ],
        "query_text": "blonde full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497495169543182"
          }
        ],
        "query_text": "wikipedia frank ocean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497495133739188"
          },
          {
            "timestamp_usec": "1497495141277144"
          }
        ],
        "query_text": "youtube frank ocean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497494823957632"
          }
        ],
        "query_text": "frank ocean nikes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497493186919976"
          }
        ],
        "query_text": "sibelius double length of all notes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497487415307044"
          }
        ],
        "query_text": "Tulip, Somerville, MA -> Davis Square, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497487376018732"
          },
          {
            "timestamp_usec": "1497487402665876"
          }
        ],
        "query_text": "(Current Location) -> Davis Square, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497487374065291"
          }
        ],
        "query_text": "davis square"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497485525929017"
          }
        ],
        "query_text": "dystopian augmented reality woman gets cut"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497473453119489"
          }
        ],
        "query_text": "how to create a moment object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497473329288560"
          }
        ],
        "query_text": "moment constructors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497473247062523"
          }
        ],
        "query_text": "moment get day from date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497473092520798"
          }
        ],
        "query_text": "moment get month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497473007772931"
          },
          {
            "timestamp_usec": "1497473010495643"
          }
        ],
        "query_text": "moment get all thursdays in a month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497471213260993"
          }
        ],
        "query_text": "how to calculate when martin luther king day is"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497471204765879"
          }
        ],
        "query_text": "when is martin luther king day"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497470789939424"
          }
        ],
        "query_text": "calculating when thanksgiving falls"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497469837409732"
          }
        ],
        "query_text": "when is thanksgiving"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497463208934401"
          }
        ],
        "query_text": "moment constructors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497463171386150"
          }
        ],
        "query_text": "javascript create a date on a specific day of week"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497463153068825"
          }
        ],
        "query_text": "javascript date constructors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497462952475430"
          }
        ],
        "query_text": "flowtype import"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497462922291641"
          }
        ],
        "query_text": "how to import a flow type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497462192225770"
          }
        ],
        "query_text": "moment.day docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497458451136000"
          }
        ],
        "query_text": "moment.weekday"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497458384380389"
          }
        ],
        "query_text": "js moment is datetime at a day of week"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497458373659673"
          }
        ],
        "query_text": "js moment is datetime at a specific date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497458359489341"
          }
        ],
        "query_text": "moment api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497458028554386"
          }
        ],
        "query_text": "flowtype interface"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457967722224"
          }
        ],
        "query_text": "how to use flowtypes on classes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457964338749"
          }
        ],
        "query_text": "how to use flowtypes on objects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457723481146"
          }
        ],
        "query_text": "javascript date days of week numbers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457404930912"
          }
        ],
        "query_text": "moment libdef"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457394142101"
          }
        ],
        "query_text": "moment flow types spec"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457391150151"
          }
        ],
        "query_text": "moment flow types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497457368396152"
          }
        ],
        "query_text": "momentjs using flow types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497456732879686"
          }
        ],
        "query_text": "moment flow types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497456233915792"
          }
        ],
        "query_text": "js overloading methods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497455678626618"
          }
        ],
        "query_text": "chai contain list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497455377260918"
          }
        ],
        "query_text": "how to use origami st3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497455288814618"
          }
        ],
        "query_text": "st3 go to side by side mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497454969631607"
          }
        ],
        "query_text": "st3 snippet syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497454752360909"
          }
        ],
        "query_text": "mocha describe st3 snippet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497454726256373"
          }
        ],
        "query_text": "mocha describe snippet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497454260274727"
          }
        ],
        "query_text": "filter lodash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497453147896625"
          },
          {
            "timestamp_usec": "1497453157010195"
          },
          {
            "timestamp_usec": "1497453171772175"
          }
        ],
        "query_text": "usability stock images"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497453116443090"
          },
          {
            "timestamp_usec": "1497453119179149"
          }
        ],
        "query_text": "usability"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497453084639104"
          },
          {
            "timestamp_usec": "1497453088834663"
          }
        ],
        "query_text": "javascript wat image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497452675932606"
          }
        ],
        "query_text": "flow property not found in class -react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497452645885872"
          }
        ],
        "query_text": "flow property not found in class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497452091930646"
          }
        ],
        "query_text": "javascript class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497452087094116"
          }
        ],
        "query_text": "javascript calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497451469059347"
          },
          {
            "timestamp_usec": "1497451472576106"
          }
        ],
        "query_text": "ambient sounds"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497451312810834"
          }
        ],
        "query_text": "calendar data structure"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497450805189677"
          }
        ],
        "query_text": "ubuntu remove low disk space warning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497447717316605"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497447709143346"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497447708497245"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497442967791608"
          }
        ],
        "query_text": "Richard Stallman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497441996622221"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497408414138705"
          }
        ],
        "query_text": "beautiful parks in cape cod"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497408406384346"
          }
        ],
        "query_text": "good free camping spots in cape cod"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497408397386508"
          }
        ],
        "query_text": "what do red science packs do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497406865058421"
          }
        ],
        "query_text": "factorio on steam"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497406256090679"
          }
        ],
        "query_text": "reddit fitness"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402525391654"
          }
        ],
        "query_text": "impact whey protein chocolate smooth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402452813584"
          },
          {
            "timestamp_usec": "1497402478577700"
          },
          {
            "timestamp_usec": "1497402479759065"
          }
        ],
        "query_text": "MyProtein impact whey calorie info"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402363519716"
          }
        ],
        "query_text": "gold standard whey nutrition facts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402334920856"
          }
        ],
        "query_text": "Optimum Nutrition Gold Standard calorie info"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402294284075"
          }
        ],
        "query_text": "syntha 6 protein calories"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497402103697326"
          }
        ],
        "query_text": "bsn syntha-6 amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401978460630"
          }
        ],
        "query_text": "syntha 6 protein taste reddit reviews"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401971311528"
          }
        ],
        "query_text": "syntha 6 protein"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401956484260"
          }
        ],
        "query_text": "reddit best tasting protein powder brand results"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401746027299"
          }
        ],
        "query_text": "reddit best tasting protein powder results"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401699920030"
          }
        ],
        "query_text": "reddit best tasting protein powder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401612694328"
          }
        ],
        "query_text": "protein power rating list reddit fitness"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497401606227392"
          }
        ],
        "query_text": "protein power rating list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497398242614911"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497396783328383"
          },
          {
            "timestamp_usec": "1497397086002749"
          },
          {
            "timestamp_usec": "1497397086004683"
          },
          {
            "timestamp_usec": "1497397901949616"
          },
          {
            "timestamp_usec": "1497397901963803"
          },
          {
            "timestamp_usec": "1497397902397647"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497396777843652"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497396777658899"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497393907079835"
          }
        ],
        "query_text": "flow are types capitalized"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497393710557165"
          }
        ],
        "query_text": "flow timezone type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497393507102786"
          }
        ],
        "query_text": "flow date object type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497393102474049"
          }
        ],
        "query_text": "flow types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497392256188846"
          }
        ],
        "query_text": "types of holidays scheduling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497392122666321"
          }
        ],
        "query_text": "can i store objects with functions in a mongodb database"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497390090509567"
          }
        ],
        "query_text": "javascript get days since date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497388336558605"
          }
        ],
        "query_text": "javascript switch statement"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497388292179147"
          }
        ],
        "query_text": "can mongodb store objects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497388016169405"
          }
        ],
        "query_text": "experience using moment js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497388012680614"
          }
        ],
        "query_text": "experience using moment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497387815402197"
          }
        ],
        "query_text": "javascript date get time without days"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497387805837612"
          }
        ],
        "query_text": "javascript date get time"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497387729823059"
          }
        ],
        "query_text": "javascript date object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497380840332096"
          }
        ],
        "query_text": "google drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497361802519692"
          }
        ],
        "query_text": "find in sublime shortcuts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497358742905937"
          }
        ],
        "query_text": "es6 define a class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497357734184424"
          }
        ],
        "query_text": "what does gnu yes fo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497318242761696"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497318127282035"
          }
        ],
        "query_text": "blitzkriegsler factorio"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497318115943074"
          },
          {
            "timestamp_usec": "1497318121293738"
          }
        ],
        "query_text": "blitz factorio"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497314624829978"
          }
        ],
        "query_text": "mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497308647748497"
          }
        ],
        "query_text": "is susan fowler related to martin fowler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497299819752677"
          }
        ],
        "query_text": "javascript date compary"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497299744581933"
          }
        ],
        "query_text": "javascript switch statement"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497296567142076"
          },
          {
            "timestamp_usec": "1497296570074879"
          }
        ],
        "query_text": "google images"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497294923052441"
          }
        ],
        "query_text": "mongodb efficiently compare datetimes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497293084028944"
          }
        ],
        "query_text": "react calendar app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497290201611118"
          }
        ],
        "query_text": "javascript foreach"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497290112660509"
          }
        ],
        "query_text": "javascript data object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497287890209753"
          }
        ],
        "query_text": "holiday date logic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497287777661769"
          }
        ],
        "query_text": "datetime"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497287770425726"
          }
        ],
        "query_text": "current datetime"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497286644602853"
          }
        ],
        "query_text": "implementing ics calendar format mongodb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497286630313269"
          }
        ],
        "query_text": "implementing ics"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497286429508405"
          }
        ],
        "query_text": "ics calendar format"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497284896509676"
          }
        ],
        "query_text": "programming calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497284885388121"
          }
        ],
        "query_text": "creating a mongodb calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497284870243255"
          }
        ],
        "query_text": "best way to program a calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497283922307891"
          }
        ],
        "query_text": "when do I want to use event.stopPropagation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497283458442873"
          }
        ],
        "query_text": "create-react-class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497280641334175"
          }
        ],
        "query_text": "react controlled input cursor resets to right"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497280238459070"
          }
        ],
        "query_text": "react pass an element's property to a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497274772551953"
          }
        ],
        "query_text": "react managed inputs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497274356021021"
          }
        ],
        "query_text": "how to set a path variable in linux in bashrc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497270389459930"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497270386489871"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497240185510066"
          }
        ],
        "query_text": "Beach House Bloom full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497236209752909"
          }
        ],
        "query_text": "binary addition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497235872171142"
          }
        ],
        "query_text": "how to multiply binary numbers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497234654146449"
          }
        ],
        "query_text": "how to do bit manipulation problems"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497231194755112"
          }
        ],
        "query_text": "ancient grudge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497230173632298"
          }
        ],
        "query_text": "channel fireball mongoose delver temur"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497229814746896"
          }
        ],
        "query_text": "timestamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497229305303446"
          }
        ],
        "query_text": "mongodb enums"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497229261004020"
          }
        ],
        "query_text": "google docs see history"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497229260062133"
          }
        ],
        "query_text": "google see history"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497223293540022"
          }
        ],
        "query_text": "google docs see history"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497223287725746"
          }
        ],
        "query_text": "google see history"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497222858657473"
          }
        ],
        "query_text": "project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497222856515411"
          }
        ],
        "query_text": "project free t"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497222790463293"
          }
        ],
        "query_text": "watch silicon valley s4e7 free online stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497219691300447"
          }
        ],
        "query_text": "dentsply"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497219188574636"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497210802713726"
          }
        ],
        "query_text": "is doing CTCI in python a bad idea"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497210233093974"
          }
        ],
        "query_text": "python modulo with remainder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497208555617467"
          }
        ],
        "query_text": "does python pass objects by reference"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497201518267841"
          }
        ],
        "query_text": "python sets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497199823494094"
          }
        ],
        "query_text": "python create a simple class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497199618819667"
          }
        ],
        "query_text": "python is substring"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497198808172242"
          }
        ],
        "query_text": "python iterate with index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497196747732791"
          }
        ],
        "query_text": "python range"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497196466351859"
          }
        ],
        "query_text": "python round down"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497190674277136"
          }
        ],
        "query_text": "why are clock signals important"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497149195649775"
          }
        ],
        "query_text": "jad abumrad"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144823631293"
          },
          {
            "timestamp_usec": "1497145036349465"
          },
          {
            "timestamp_usec": "1497145058765716"
          },
          {
            "timestamp_usec": "1497145072981819"
          }
        ],
        "query_text": "watch silicon valley free online s4e 7  stream -hbo project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144812267963"
          }
        ],
        "query_text": "watch silicon valley free online s4e 7 project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144584652392"
          }
        ],
        "query_text": "stream Silicon Valley free online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144454510493"
          }
        ],
        "query_text": "yesmovies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144433692069"
          }
        ],
        "query_text": "watch silicon valley free online s4e 7 project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144402676140"
          },
          {
            "timestamp_usec": "1497144407278637"
          },
          {
            "timestamp_usec": "1497144420986397"
          }
        ],
        "query_text": "watch silicon valley free online season four episode 7 project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144392382918"
          }
        ],
        "query_text": "watch silicon valley free online season four episode 7 letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497144351937385"
          }
        ],
        "query_text": "letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139838136628"
          }
        ],
        "query_text": "project free tv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139741204876"
          }
        ],
        "query_text": "Watch silicon valley free online season four episode 7 letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139732145094"
          }
        ],
        "query_text": "Watch silicon valley free online season four episode 2 letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139697838015"
          }
        ],
        "query_text": "Watch silicon valley free online season four letmewatchthis"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139659196046"
          }
        ],
        "query_text": "Watch silicon valley free online season four"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139436725838"
          }
        ],
        "query_text": "watch silicon valley online season 4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139411244520"
          }
        ],
        "query_text": "silicon valley watch free online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139396714510"
          }
        ],
        "query_text": "silicon valley episodes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497139367250675"
          },
          {
            "timestamp_usec": "1497139395699932"
          }
        ],
        "query_text": "silicon valley"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497131346646221"
          }
        ],
        "query_text": "wikipedia unix"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497128114224287"
          }
        ],
        "query_text": "mishras factory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497127357502684"
          }
        ],
        "query_text": "mtg extirpate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497058129522427"
          }
        ],
        "query_text": "react managed inputs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497056896859874"
          }
        ],
        "query_text": "xmage saying sideboard has too many cards"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497056322424541"
          }
        ],
        "query_text": "how to make a deck in xmage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497056130305544"
          }
        ],
        "query_text": "temur ramp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497055508981480"
          }
        ],
        "query_text": "download xmage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497055336914509"
          }
        ],
        "query_text": "install xmage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497055318233250"
          }
        ],
        "query_text": "xmage for linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497055056749231"
          }
        ],
        "query_text": "python are arrays faster than lists"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497054406796495"
          }
        ],
        "query_text": "python string buffer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497054060756739"
          }
        ],
        "query_text": "python ternary"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497053991615456"
          }
        ],
        "query_text": "python length"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497053814279997"
          }
        ],
        "query_text": "list to string python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497053681351431"
          }
        ],
        "query_text": "string does not support item assignment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497053351259060"
          }
        ],
        "query_text": "python append string"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497048152709975"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497048139355809"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497048138939986"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497045061100775"
          }
        ],
        "query_text": "event.currenttarget.value"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497040496601537"
          }
        ],
        "query_text": "git rm all deleted files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497033857020751"
          }
        ],
        "query_text": "what is a focus js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497033853322059"
          }
        ],
        "query_text": "what is a focus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497033828229129"
          }
        ],
        "query_text": "javascript get source of a focus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497031220275392"
          }
        ],
        "query_text": "flow specify return type of closure"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497028026924717"
          }
        ],
        "query_text": "flow default arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497027858751469"
          }
        ],
        "query_text": "javascript flow types with optional arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497024975210574"
          }
        ],
        "query_text": "eslint throwing errors with flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497024895332505"
          }
        ],
        "query_text": "flow specify required fields of object stackoverflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497024886827619"
          }
        ],
        "query_text": "flow specify required fields of object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497024807984934"
          }
        ],
        "query_text": "eslint playing nice with flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497024078794388"
          }
        ],
        "query_text": "flow cant find .flowconfig file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497023989596814"
          }
        ],
        "query_text": "ubuntu findone"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497023917774017"
          }
        ],
        "query_text": "how to search a directory for a file in linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497023679813772"
          }
        ],
        "query_text": "install sublimelinter-flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497023079447900"
          }
        ],
        "query_text": "sublime syntax highlighting for .flow files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497022927047636"
          }
        ],
        "query_text": "sublime syntax highlighting for flow files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497022771822643"
          }
        ],
        "query_text": "how to start using flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497021253550004"
          }
        ],
        "query_text": "es6 optional argument pattern"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1497020733554202"
          }
        ],
        "query_text": "lodash map props"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496972654535128"
          }
        ],
        "query_text": "kozilek the great distortion"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496971687405466"
          }
        ],
        "query_text": "world breaker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496971676550234"
          }
        ],
        "query_text": "thing in the ice"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496971642026929"
          }
        ],
        "query_text": "wandering fumarole"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496967626846318"
          }
        ],
        "query_text": "twitch mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496966920133366"
          }
        ],
        "query_text": "kefnet the mindful"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496965008331963"
          }
        ],
        "query_text": "why is delver good"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496955509163431"
          }
        ],
        "query_text": "options object javascript with defaults"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496955459324602"
          }
        ],
        "query_text": "options object javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496945443900149"
          }
        ],
        "query_text": "chrome see javascript focus events"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496945384478008"
          }
        ],
        "query_text": "chrome see javascript events"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496945079868244"
          }
        ],
        "query_text": "can i see which javascript events are firing chrome debugger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496945066254922"
          }
        ],
        "query_text": "can i see when dom triggers are happening"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496943374383988"
          }
        ],
        "query_text": "sublime comment out whole line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496943349806094"
          }
        ],
        "query_text": "sublime comment multiple lines doesn't work correctly"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496943282116549"
          }
        ],
        "query_text": "javascript template syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496943273701132"
          }
        ],
        "query_text": "javascript template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496943182258855"
          }
        ],
        "query_text": "strings must use singlequote should use template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496942382996154"
          }
        ],
        "query_text": "passing template to child meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496942152050117"
          }
        ],
        "query_text": "Template.instance() meteor is undefined when passing to template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496942139822541"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496941274646583"
          }
        ],
        "query_text": "proptypes specify type of key of array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496941248963912"
          }
        ],
        "query_text": "quick link: chrome://flags/#enable-gpu-rasterization"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496941210013732"
          }
        ],
        "query_text": "ubuntu 14.04 why is chrome flashing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496940051586748"
          }
        ],
        "query_text": "using react in meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496940046249029"
          },
          {
            "timestamp_usec": "1496940048171227"
          }
        ],
        "query_text": "asdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496940029032021"
          }
        ],
        "query_text": "using react in meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496940021451295"
          }
        ],
        "query_text": "using react in meteory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939858411822"
          }
        ],
        "query_text": "proptypes specify type of key of array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939802727688"
          }
        ],
        "query_text": "PropTypes dictionary set types of keys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939747076966"
          }
        ],
        "query_text": "PropTypes.shape.isrequired"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939654108325"
          }
        ],
        "query_text": "js OBject.set"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939640075804"
          }
        ],
        "query_text": "js object set syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939454537226"
          }
        ],
        "query_text": "prop type object is forbidden"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496939305070603"
          }
        ],
        "query_text": "react proptypes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496938919317936"
          }
        ],
        "query_text": "javascript backtick vs single quote"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496936524530030"
          },
          {
            "timestamp_usec": "1496937287209439"
          }
        ],
        "query_text": "ubuntu 14.04 installed new graphics driver won't start"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496935662022086"
          }
        ],
        "query_text": "starting automatic crash report generation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496935637935193"
          }
        ],
        "query_text": "automatic crash report generation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496935301040271"
          }
        ],
        "query_text": "Error: couldn't find RGB GLX visual or fbconfig"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496935142649823"
          }
        ],
        "query_text": "how do I tell if I am using built in graphics card or nvidia ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496935120356037"
          }
        ],
        "query_text": "how do I tell if I am using built in graphics card or nvidia?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934943365514"
          }
        ],
        "query_text": "ubuntu proprietary drivers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934871597294"
          }
        ],
        "query_text": "olin wiki setting up ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934863458822"
          }
        ],
        "query_text": "olin wiki setting up linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934345100489"
          }
        ],
        "query_text": "best graphics drivers for ubuntu 14.04 nvidia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934337406148"
          }
        ],
        "query_text": "best graphics drivers for ubuntu nvidia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934176301082"
          }
        ],
        "query_text": "olin it install graphics driver"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496934170263517"
          }
        ],
        "query_text": "ubuntu gnome do I have the right graphics driver?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496933312417672"
          }
        ],
        "query_text": "how to put a ram card in your ram slot laptop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496933170518720"
          }
        ],
        "query_text": "how to put a ram card in your ram slot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496892120396242"
          }
        ],
        "query_text": "define: susurrus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496888857043217"
          }
        ],
        "query_text": "bomat courier"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496888248714456"
          }
        ],
        "query_text": "dispossess"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496886358324782"
          }
        ],
        "query_text": "hour of devastation spoilers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496886205373845"
          }
        ],
        "query_text": "lost legacy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496886172278615"
          }
        ],
        "query_text": "scrapheap scrounger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496886164312941"
          }
        ],
        "query_text": "eternal scourge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496886095862333"
          }
        ],
        "query_text": "wasteland strangler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496885309585840"
          }
        ],
        "query_text": "are there any signets in standard mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496885307466566"
          }
        ],
        "query_text": "are there any signets in standard mtmg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496885301011891"
          }
        ],
        "query_text": "are there any signets in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496885223272762"
          }
        ],
        "query_text": "mtg statuary"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496884610999832"
          }
        ],
        "query_text": "mtg oracle"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496881975429114"
          },
          {
            "timestamp_usec": "1496882037520780"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496881962005204"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496877564088591"
          }
        ],
        "query_text": "react render a child for each element in list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873298983528"
          },
          {
            "timestamp_usec": "1496873310473424"
          }
        ],
        "query_text": "customizing the sublimelinter tooltip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873292956918"
          }
        ],
        "query_text": "how to use sublimelinter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873275032907"
          }
        ],
        "query_text": "SublimeLinter download tooltip themes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873272172369"
          }
        ],
        "query_text": "SublimeLinter download tooltip theme"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873252495215"
          }
        ],
        "query_text": "SublimeLinter tooltips"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496873221058464"
          }
        ],
        "query_text": "SublimeLinter tooltip theme"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496872797914256"
          }
        ],
        "query_text": "sublimelinter options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496872436016084"
          }
        ],
        "query_text": "sublimelinter show error popups"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496870490744914"
          }
        ],
        "query_text": "zip with"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496870296033966"
          }
        ],
        "query_text": "js merging objects not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496869855466624"
          }
        ],
        "query_text": "merge an object with spread syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496869234011519"
          }
        ],
        "query_text": "js create subobject of object with only certain keys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496868400758612"
          }
        ],
        "query_text": "creating objects using spread operator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496867701461576"
          }
        ],
        "query_text": "lodash copy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496867691946536"
          }
        ],
        "query_text": "underscore clone"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496867530583597"
          }
        ],
        "query_text": "make a non read only copy of an object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496867447453332"
          }
        ],
        "query_text": "cannot assign to read only property"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496865637953286"
          }
        ],
        "query_text": "javascript check if something is array or object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496864184753044"
          }
        ],
        "query_text": "lodash map props"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496863036678527"
          }
        ],
        "query_text": "ubuntu debug slow computer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496861377651676"
          }
        ],
        "query_text": "lodash find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496861252234484"
          }
        ],
        "query_text": "cannot read property apply of undefined underscore"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496861014731611"
          }
        ],
        "query_text": "cannot read property apply of undefined map underscore"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496860997350087"
          }
        ],
        "query_text": "cannot read property apply of undefined map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496860542338118"
          }
        ],
        "query_text": "underscore intersection with objects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496860428836961"
          }
        ],
        "query_text": "underscore find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496858302878944"
          }
        ],
        "query_text": "assignment to property of function parameter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857881810997"
          }
        ],
        "query_text": "underscore intersection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857831701676"
          }
        ],
        "query_text": "js is empty array truthy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857811491314"
          }
        ],
        "query_text": "underscore check if an array contains any value from another array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857546549390"
          }
        ],
        "query_text": "javascript for each syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857512512692"
          }
        ],
        "query_text": "underscore zip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857472270277"
          }
        ],
        "query_text": "javascript zip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857453291813"
          }
        ],
        "query_text": "javascript for each syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857380139967"
          }
        ],
        "query_text": "javascript specify a parameter is an array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857334872113"
          }
        ],
        "query_text": "receive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857244114895"
          }
        ],
        "query_text": "javascript array length"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496857150420107"
          }
        ],
        "query_text": "what does lodash find do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496851845999586"
          }
        ],
        "query_text": "chai expect to be greater than"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496851432034727"
          }
        ],
        "query_text": "javascript only call named parameters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496851337549150"
          }
        ],
        "query_text": "javascript call only named parameters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496851279251209"
          }
        ],
        "query_text": "es6 named parameters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496849176385449"
          }
        ],
        "query_text": "why does having your hard drive full make your computer slower?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496848509209055"
          },
          {
            "timestamp_usec": "1496848548343793"
          },
          {
            "timestamp_usec": "1496848552645421"
          }
        ],
        "query_text": "gitgutter themes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496848329953499"
          }
        ],
        "query_text": "gitgutter and eslint look too similar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496848086241278"
          }
        ],
        "query_text": "102 chester boston ma"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496848067189704"
          }
        ],
        "query_text": "102 chester street zip code"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496847835055604"
          }
        ],
        "query_text": "sublime text 2 save open windows when i change branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496847827333703"
          }
        ],
        "query_text": "sublime save open windows when i change branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496808102969065"
          }
        ],
        "query_text": "torrential gearhulk"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496807227050665"
          },
          {
            "timestamp_usec": "1496807240013558"
          }
        ],
        "query_text": "aetherflux reservoir deck"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496806806226169"
          }
        ],
        "query_text": "paradox engine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496806749925943"
          }
        ],
        "query_text": "Paradoxical Outcome"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496805989310719"
          }
        ],
        "query_text": "authority of the consulate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496805232394768"
          }
        ],
        "query_text": "strictly better mtg aetherflux reservoir"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496794155499886"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496794154812892"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496789462716939"
          },
          {
            "timestamp_usec": "1496789678456114"
          }
        ],
        "query_text": "value must be omitted for boolean attributes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496788714875601"
          }
        ],
        "query_text": "where is handlebars importing a partial from"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496788548844084"
          }
        ],
        "query_text": "handlebars what does {{> mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496787894864702"
          }
        ],
        "query_text": "react do which components get the clicks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496787845976083"
          }
        ],
        "query_text": "react stateless component pattern"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496787832558271"
          }
        ],
        "query_text": "react pure and immutable component pattern"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496787185815872"
          }
        ],
        "query_text": "higher order components react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496786801573139"
          }
        ],
        "query_text": "react event handlers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496783035161249"
          }
        ],
        "query_text": "meteor Template.instance() is null"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496779131700320"
          }
        ],
        "query_text": "make div wrap child element exactly"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496779105646143"
          }
        ],
        "query_text": "make wrapping div invisible"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496778936041793"
          }
        ],
        "query_text": "wrapping react element in a div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496778898616858"
          }
        ],
        "query_text": "react adding div breaks css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496776524933978"
          }
        ],
        "query_text": "flex messes up formatting if i wrap element in div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775473011423"
          }
        ],
        "query_text": "css descendant selector"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775421068694"
          }
        ],
        "query_text": "css styling any child rather than direct child"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775417131346"
          }
        ],
        "query_text": "css styling any child rather than a"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775259321232"
          }
        ],
        "query_text": "translate webpage to english"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775254205768"
          }
        ],
        "query_text": "translate https://flore.nz/blog/scss-the-ampersand-you"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775222423039"
          },
          {
            "timestamp_usec": "1496775226537616"
          }
        ],
        "query_text": "scss beginner guide -sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775217858929"
          }
        ],
        "query_text": "scss beginner guide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775200326139"
          }
        ],
        "query_text": "scss what does ampersand do -sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775175130936"
          }
        ],
        "query_text": "scss what is ampersand -sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775171180570"
          }
        ],
        "query_text": "scss what is ampersand -scss"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775165347621"
          }
        ],
        "query_text": "'scss' what is ampersand -scss"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775159927177"
          }
        ],
        "query_text": "'scss' what is ampersand"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775152175369"
          }
        ],
        "query_text": "scss what is ampersand"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775092691608"
          }
        ],
        "query_text": "scss what does it mean to have classes inside other classes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496775037585992"
          }
        ],
        "query_text": "what is scss"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496774528839712"
          }
        ],
        "query_text": "node check if package is installed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496774494258001"
          }
        ],
        "query_text": "where is my global node bin?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496774472329907"
          }
        ],
        "query_text": "where is my global node bin ubuntu?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496774047206641"
          }
        ],
        "query_text": "why does putting my thing inside a div cause it to render incorrectly?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496773605567974"
          }
        ],
        "query_text": "'scss' style guide -sass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496773600990041"
          }
        ],
        "query_text": "'scss' style guide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496773591951390"
          }
        ],
        "query_text": "scss style guide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496772743929596"
          }
        ],
        "query_text": "why does putting my thing inside a div cause it to render incorrectly?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496772373831738"
          }
        ],
        "query_text": "spacebar comment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496771994303464"
          }
        ],
        "query_text": "js convert to number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496771750437570"
          }
        ],
        "query_text": "template.html:3 Uncaught Error: Module build failed: TypeError: Cannot read property 'length' of undefined"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496770841556618"
          }
        ],
        "query_text": "unexpected string concatenation prefer-template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496770734401909"
          }
        ],
        "query_text": "sublime text 3 how to not auto close brace"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496770708809078"
          }
        ],
        "query_text": "sublime text 3 create parenthesis without closing brace"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496770567952622"
          }
        ],
        "query_text": "proptypes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496770179714072"
          }
        ],
        "query_text": "react props validation in functional component"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496769949313754"
          }
        ],
        "query_text": "calling javascript code inside handlebars template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496769897584586"
          }
        ],
        "query_text": "handlebars using code inside template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496769668298040"
          }
        ],
        "query_text": "what does '{{>' mean in meteor templating"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496769662454801"
          }
        ],
        "query_text": "what does '{{>' mean in meteor?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496769651384504"
          }
        ],
        "query_text": "what does {{> mean in meteor?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496768084009071"
          }
        ],
        "query_text": "blaze if and syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496765646434897"
          }
        ],
        "query_text": "react in meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496765238009971"
          }
        ],
        "query_text": "react functional stateless components"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496763962690640"
          },
          {
            "timestamp_usec": "1496763967456985"
          }
        ],
        "query_text": "refactoring blaze to react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496763838476936"
          }
        ],
        "query_text": "react input syncing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496761896529904"
          }
        ],
        "query_text": "snap for 16.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496761890671918"
          }
        ],
        "query_text": "snaps for 16.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496760974671163"
          }
        ],
        "query_text": "MongoError: Btree::insert: key too large to index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496756617087945"
          }
        ],
        "query_text": "new york times"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496720747652328"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496719533519599"
          }
        ],
        "query_text": "mtg wastes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496719528060175"
          }
        ],
        "query_text": "mtg waste not"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496716375572472"
          }
        ],
        "query_text": "why is js testing wi slow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496715235648331"
          }
        ],
        "query_text": "any way to update to latest version of jest?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714743067353"
          }
        ],
        "query_text": "npm upgrade package and all dependencies to a specific version"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714601630248"
          }
        ],
        "query_text": "npm get version of a package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714460984274"
          }
        ],
        "query_text": "git remove a blocal ranch and all of its data"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714452208027"
          }
        ],
        "query_text": "git remove a branch and all of its data"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714086995667"
          }
        ],
        "query_text": "what does npm i do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714037896996"
          }
        ],
        "query_text": "npm update to latest version and dependencies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496714021169944"
          }
        ],
        "query_text": "how to get latest version of npm package?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713897980389"
          }
        ],
        "query_text": "jest 16"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713803550107"
          }
        ],
        "query_text": "jest 15"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713554967261"
          }
        ],
        "query_text": "npm upgrade to latest version of a package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713501418602"
          }
        ],
        "query_text": "how to update jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713337723598"
          }
        ],
        "query_text": "how to update jest without breaking stuff"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713328142022"
          }
        ],
        "query_text": "how to update jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496713319581833"
          }
        ],
        "query_text": "how to migrate to the latest jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496711736873814"
          },
          {
            "timestamp_usec": "1496711794023731"
          },
          {
            "timestamp_usec": "1496711795580478"
          }
        ],
        "query_text": "standard aetherflux reservoir combo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496711571421462"
          }
        ],
        "query_text": "standard aetherflux reservoir"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496711399757533"
          }
        ],
        "query_text": "batterskull"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496710654789732"
          }
        ],
        "query_text": "valakut the molten pinnacle price"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496710130963672"
          }
        ],
        "query_text": "mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496710112636792"
          }
        ],
        "query_text": "stubborn denial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496710066036410"
          }
        ],
        "query_text": "gurmag angler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496709837600839"
          }
        ],
        "query_text": "painful truths"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496706610383387"
          }
        ],
        "query_text": "chai equal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496706505692227"
          }
        ],
        "query_text": "javascript dictionary size"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496706383917711"
          }
        ],
        "query_text": "javascript array length"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496706347683871"
          },
          {
            "timestamp_usec": "1496706373341942"
          }
        ],
        "query_text": "chai check size of array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496705667135667"
          }
        ],
        "query_text": "git undo last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496705562439909"
          }
        ],
        "query_text": "arc diff how to add commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496705549471431"
          }
        ],
        "query_text": "ark how to add commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496705541828290"
          }
        ],
        "query_text": "arc add"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496702818447791"
          }
        ],
        "query_text": "meteor see number of items in a collection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496702034364260"
          }
        ],
        "query_text": "clear meteor collection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496699949430994"
          }
        ],
        "query_text": "chai describe test naming conventions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496689999944238"
          }
        ],
        "query_text": "uncaught typeerror: (0 , _redux2.default) is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496689978269455"
          }
        ],
        "query_text": "TypeError: (0 , (_shouldClearPastedVar || _load_shouldClearPastedVar(...)).default) is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496688871637044"
          }
        ],
        "query_text": "chai mutating return values of external functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496688851039470"
          }
        ],
        "query_text": "chai changing value of function mocking reset"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496684579631217"
          }
        ],
        "query_text": "expected an assignment or function call and instead saw an expression with expect"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496684429471878"
          }
        ],
        "query_text": "expected an assignment or function call and instead saw an expression"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496683056284979"
          }
        ],
        "query_text": "sublimetext3 cant find new snippet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496682989854734"
          }
        ],
        "query_text": "sublimetext3 new snippet doesn't show up"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496682836043601"
          }
        ],
        "query_text": "sublime text 3 new snippet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496679524508808"
          }
        ],
        "query_text": "how to print a javascript array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496674583195467"
          }
        ],
        "query_text": "copy and paste code snippet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496674182854266"
          }
        ],
        "query_text": "javascript try catch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496633914761570"
          }
        ],
        "query_text": "torrential gearhulk"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496633254544334"
          }
        ],
        "query_text": "longtusk cub"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496630825427975"
          }
        ],
        "query_text": "daze mtg price"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496628110775942"
          },
          {
            "timestamp_usec": "1496628151709634"
          }
        ],
        "query_text": "amazon fage 0% greek"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496622422803460"
          },
          {
            "timestamp_usec": "1496622423925883"
          },
          {
            "timestamp_usec": "1496623373864760"
          },
          {
            "timestamp_usec": "1496623373902697"
          }
        ],
        "query_text": "(Current Location) -> Boston University Fitness and Recreation Center, Commonwealth Avenue, Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496622421720854"
          }
        ],
        "query_text": "Boston University Fitness and Recreation Center, 915 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496622403677493"
          }
        ],
        "query_text": "gym"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496621554738546"
          }
        ],
        "query_text": "ask hn experience with microservices"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496621403625856"
          }
        ],
        "query_text": "microservices for polyglot development"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496621079292622"
          }
        ],
        "query_text": "ask hn experience with microservices"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496618957474631"
          }
        ],
        "query_text": "hackernews bad reasons to switch to  microservices?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496618898962840"
          }
        ],
        "query_text": "hackernews dont ever switch to microservices?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496616367477661"
          }
        ],
        "query_text": "when not to use microservices"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496615995369664"
          }
        ],
        "query_text": "ros microservices architecture"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496615815684513"
          }
        ],
        "query_text": "what os do most embedded devices run?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496615574485023"
          }
        ],
        "query_text": "microservices on an embedded device"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496614950807635"
          }
        ],
        "query_text": "what is grpc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496614287588255"
          }
        ],
        "query_text": "what os do most servers run"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496613630755566"
          }
        ],
        "query_text": "how to spawn off background processes only if they are all successful"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496613415925608"
          }
        ],
        "query_text": "how to kill jobs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496612566546620"
          }
        ],
        "query_text": "bash what does the ampersand sign mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496612561236372"
          }
        ],
        "query_text": "bash what does the & sign mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496610370507262"
          }
        ],
        "query_text": "ubuntu what permission should i have on my root"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496610362452471"
          }
        ],
        "query_text": "ubuntu what permission should i have"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496610235543556"
          }
        ],
        "query_text": "permission denied home ./local directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496610135399748"
          }
        ],
        "query_text": "python mkvirtualenv install"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496610035487828"
          }
        ],
        "query_text": "mkvirtualenv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496609526281242"
          }
        ],
        "query_text": "what is a URI"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496608644917578"
          }
        ],
        "query_text": "what is a greenlet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496608639313550"
          }
        ],
        "query_text": "what is a greenlee"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496608509588891"
          }
        ],
        "query_text": "zmq python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496608505151900"
          }
        ],
        "query_text": "zmq"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496607239503930"
          }
        ],
        "query_text": "protobuf python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496605822118970"
          },
          {
            "timestamp_usec": "1496605825992654"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496605785130478"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496603319597681"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496601562314362"
          },
          {
            "timestamp_usec": "1496602616999220"
          },
          {
            "timestamp_usec": "1496602621462319"
          }
        ],
        "query_text": "swagger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496601259069750"
          },
          {
            "timestamp_usec": "1496601263975063"
          }
        ],
        "query_text": "what's your experience with flatpak"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496599957643805"
          },
          {
            "timestamp_usec": "1496600623617277"
          },
          {
            "timestamp_usec": "1496600634134915"
          },
          {
            "timestamp_usec": "1496600635862712"
          }
        ],
        "query_text": "(Current Location) -> Lake St & Brock St, Boston, MA 02135"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496599955725585"
          }
        ],
        "query_text": "brock and washington "
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496599197038753"
          }
        ],
        "query_text": "closest d line stop to boston landing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496599134814160"
          },
          {
            "timestamp_usec": "1496599138655229"
          }
        ],
        "query_text": "boston t map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496598857688801"
          }
        ],
        "query_text": "good places to work in allston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496590936976839"
          }
        ],
        "query_text": "(Current Location) -> Sunset Cantina, Commonwealth Avenue, Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496587354776074"
          },
          {
            "timestamp_usec": "1496588465670118"
          },
          {
            "timestamp_usec": "1496589245070113"
          },
          {
            "timestamp_usec": "1496590918901020"
          }
        ],
        "query_text": "(Current Location) -> Franklin W. Olin College of Engineering, 1000 Olin Way, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496586468242769"
          }
        ],
        "query_text": "boston interactive t map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496586449434501"
          },
          {
            "timestamp_usec": "1496586452286893"
          }
        ],
        "query_text": "boston t map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496586420197658"
          },
          {
            "timestamp_usec": "1496586431048628"
          }
        ],
        "query_text": "(Current Location) -> Franklin W. Olin College of Engineering, 1000 Olin Way, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496586418310579"
          }
        ],
        "query_text": "Franklin W. Olin College of Engineering, 1000 Olin Way, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496548274657846"
          },
          {
            "timestamp_usec": "1496548282134224"
          }
        ],
        "query_text": "asynchronous vlsi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496541217460983"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496540385074893"
          }
        ],
        "query_text": "22 wadsworth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496538858260951"
          }
        ],
        "query_text": "lust for war"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496538726592740"
          }
        ],
        "query_text": "duroga treespeaker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496538364492380"
          }
        ],
        "query_text": "spider spawning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496538359544122"
          }
        ],
        "query_text": "spider spawn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537844492058"
          }
        ],
        "query_text": "jon sasso"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537796179617"
          }
        ],
        "query_text": "who owns channel fireball"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537621988636"
          }
        ],
        "query_text": "foil dark confidant"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537480444789"
          }
        ],
        "query_text": "ring of gix price"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537474132321"
          }
        ],
        "query_text": "ring of gix"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537384002414"
          }
        ],
        "query_text": "balduvian horde"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496537207194235"
          },
          {
            "timestamp_usec": "1496537207995338"
          }
        ],
        "query_text": "lotus cobra"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496530741867855"
          },
          {
            "timestamp_usec": "1496530745897560"
          }
        ],
        "query_text": "greenbelt rampager"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496530027869842"
          }
        ],
        "query_text": "what is temur mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496530014948204"
          }
        ],
        "query_text": "what is temur"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496528591699146"
          }
        ],
        "query_text": "sylvan advocate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496527700636672"
          }
        ],
        "query_text": "mtg twitch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496526922631470"
          }
        ],
        "query_text": "how much is ulamog worth the ceaseless hunger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496526913768291"
          }
        ],
        "query_text": "how much is ulamog worth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496525454603632"
          }
        ],
        "query_text": "flatpak vs snap"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496524581277887"
          }
        ],
        "query_text": "sun droplet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496523622153994"
          }
        ],
        "query_text": "what does grishoalbrand do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496522692997395"
          },
          {
            "timestamp_usec": "1496522696869324"
          },
          {
            "timestamp_usec": "1496522700534266"
          }
        ],
        "query_text": "seth mtggoldfish"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496522621285795"
          }
        ],
        "query_text": "free win red"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496522394083435"
          }
        ],
        "query_text": "woodweavers puzzleknot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496521393799512"
          }
        ],
        "query_text": "seth mtggoldfish"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496511651952985"
          }
        ],
        "query_text": "grim flayer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496510770278429"
          }
        ],
        "query_text": "metallic rebuke"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496510420759972"
          }
        ],
        "query_text": "mtg stream twitch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496468846840978"
          },
          {
            "timestamp_usec": "1496468850767870"
          },
          {
            "timestamp_usec": "1496468854209362"
          },
          {
            "timestamp_usec": "1496470199681867"
          },
          {
            "timestamp_usec": "1496470364965457"
          },
          {
            "timestamp_usec": "1496470777905618"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496468824089626"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496468815524071"
          }
        ],
        "query_text": "apartment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496453542498274"
          }
        ],
        "query_text": "(Current Location) -> 68 murdoch st"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496453393834786"
          },
          {
            "timestamp_usec": "1496453395501777"
          }
        ],
        "query_text": "(Current Location) -> Harvard Square, 18 Brattle St #352, Cambridge, MA 02138"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496453372323523"
          }
        ],
        "query_text": "(Current Location) -> harvard square"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496452317722128"
          },
          {
            "timestamp_usec": "1496452981338395"
          },
          {
            "timestamp_usec": "1496452981381419"
          },
          {
            "timestamp_usec": "1496452981503256"
          },
          {
            "timestamp_usec": "1496452982419707"
          },
          {
            "timestamp_usec": "1496452984467484"
          },
          {
            "timestamp_usec": "1496453363735210"
          }
        ],
        "query_text": "(Current Location) -> Massachusetts Institute of Technology, 77 Massachusetts Ave, Cambridge, MA 02139"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496452144536742"
          }
        ],
        "query_text": "(Current Location) -> mit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496452139285054"
          }
        ],
        "query_text": "(Current Location) -> massachussets insyitute "
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496452126365833"
          }
        ],
        "query_text": "(Current Location) -> 2116 Massachusetts Ave, Cambridge, MA 02140"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496450941444552"
          }
        ],
        "query_text": "(Current Location) -> Massachusetts Ave Boston MA 02116 United States"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496450935646676"
          },
          {
            "timestamp_usec": "1496450935729491"
          }
        ],
        "query_text": "(Current Location) -> 18 Brattle St #352, Cambridge, MA 02138"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496449665705777"
          }
        ],
        "query_text": "how do i connect to harvard guest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496449129907882"
          }
        ],
        "query_text": "amir mikhak"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496447541471549"
          },
          {
            "timestamp_usec": "1496447545230860"
          },
          {
            "timestamp_usec": "1496447546776404"
          },
          {
            "timestamp_usec": "1496447885983905"
          },
          {
            "timestamp_usec": "1496447885985616"
          },
          {
            "timestamp_usec": "1496447887161118"
          },
          {
            "timestamp_usec": "1496448449387975"
          },
          {
            "timestamp_usec": "1496449121642592"
          }
        ],
        "query_text": "(Current Location) -> 18 Brattle St #352, Cambridge, MA 02138"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496447374890799"
          },
          {
            "timestamp_usec": "1496447514184849"
          }
        ],
        "query_text": "harvard square"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496446533565915"
          }
        ],
        "query_text": "pandemonium"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496446514305264"
          }
        ],
        "query_text": "game store cambridge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496429538054027"
          }
        ],
        "query_text": "javascript get field of each object in a list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496429447582688"
          }
        ],
        "query_text": "lodash map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496427869938181"
          }
        ],
        "query_text": "named arrow function es6"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496427857213503"
          }
        ],
        "query_text": "javascript arrow syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496427828976150"
          }
        ],
        "query_text": "es6 closures"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496426854098257"
          }
        ],
        "query_text": "mongodb in"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496425648876743"
          }
        ],
        "query_text": "sublime dont autocomplete inside comments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496425263859466"
          }
        ],
        "query_text": "sublime text 3 duplicate line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496425257990276"
          }
        ],
        "query_text": "sublime duplicate line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496419136215245"
          }
        ],
        "query_text": "jest before each scope variables"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418624268020"
          }
        ],
        "query_text": "st3 semicolon plugin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418575408921"
          }
        ],
        "query_text": "writing a sublime macro get current cursor position st3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418568256778"
          }
        ],
        "query_text": "writing a sublime macro get current cursor position"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418496305931"
          }
        ],
        "query_text": "st3 shortcut to append to end of line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418386830505"
          }
        ],
        "query_text": "sublime text 3 place symbol at end of line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418378810969"
          }
        ],
        "query_text": "navigate to end of file then navigate back"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418345552919"
          }
        ],
        "query_text": "st3 how does jump back work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418247674784"
          }
        ],
        "query_text": "sublime jump to previous cursor doesn't work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496418211613567"
          }
        ],
        "query_text": "sublime last cursor position"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496417978918441"
          }
        ],
        "query_text": "how to make a sublime text macro"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496417817350905"
          }
        ],
        "query_text": "move cursor back to last position sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496417811753502"
          }
        ],
        "query_text": "move cursor back to last position"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496417641175965"
          }
        ],
        "query_text": "sublime navigate to end of line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496417269817401"
          }
        ],
        "query_text": "sublime go back to last scroll position"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496416253890314"
          }
        ],
        "query_text": "st3 navigate to a line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496416053880882"
          }
        ],
        "query_text": "how to use phabricator code review"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496415747711015"
          }
        ],
        "query_text": "sublime text 3 toggle sidebar shortcut not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496415406124303"
          }
        ],
        "query_text": "sublime text 3 user key bindings not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496415391274987"
          }
        ],
        "query_text": "sublime text 3 key bindings not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496415297425612"
          }
        ],
        "query_text": "ubuntu open terminal from file browser"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496415259200360"
          }
        ],
        "query_text": "how to overwrite default sublime keymap"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496414916515013"
          }
        ],
        "query_text": "sublime text 3 overwrite default key bindings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496414527445540"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496384408922776"
          }
        ],
        "query_text": "terminator dracula theme"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496384265412287"
          }
        ],
        "query_text": "gnome 14.04 transparent terminal slider doesn't do anything"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496384054408058"
          }
        ],
        "query_text": "gnome desktop visual effects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383958397728"
          }
        ],
        "query_text": "can't make ubuntu terminal transparent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383829000903"
          }
        ],
        "query_text": "execute command after bash opens"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383726564827"
          }
        ],
        "query_text": "how to stop a shell script from executing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383691671497"
          }
        ],
        "query_text": "ubuntu execute commands without terminal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383609543645"
          }
        ],
        "query_text": "kill all terminals ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383361050092"
          }
        ],
        "query_text": "kill terminals ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496383084500814"
          }
        ],
        "query_text": "run a script from a script"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496382970901350"
          }
        ],
        "query_text": "gnome terminal won't go see through"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381979110580"
          }
        ],
        "query_text": "how ps1 bashrc colors work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381889620645"
          }
        ],
        "query_text": "how to understand ps1 bashrc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381619484804"
          }
        ],
        "query_text": "what does sed do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381488135184"
          }
        ],
        "query_text": "git branch --no-color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381137173564"
          }
        ],
        "query_text": "bashrc show git branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496381026541082"
          }
        ],
        "query_text": "terminal set default profile"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496380785286022"
          }
        ],
        "query_text": "customize terminal color palette"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496380374690013"
          }
        ],
        "query_text": "screenfetch ppa"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496379858516710"
          }
        ],
        "query_text": "ubuntu customize terminal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496379747230224"
          }
        ],
        "query_text": "ubuntu terminal fonts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496379737231674"
          }
        ],
        "query_text": "ubuntu setting up terminal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496379675584277"
          }
        ],
        "query_text": "bracket highlighter set style of content highlight bar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496378850119686"
          }
        ],
        "query_text": "favorite programming font"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496378494423527"
          }
        ],
        "query_text": "bracket highlighter doesn't show symbols in gutter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496378467600055"
          }
        ],
        "query_text": "gitgutter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496378382258365"
          }
        ],
        "query_text": "bracket highlighter dont show marks on side"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496378318898084"
          }
        ],
        "query_text": "git gutter sublime setup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377880193226"
          }
        ],
        "query_text": "sublime text 3 pressing semicolon always adds it to end of line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377673364568"
          }
        ],
        "query_text": "what does indent to bracket do st3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377641226844"
          },
          {
            "timestamp_usec": "1496377645770882"
          }
        ],
        "query_text": "what does indent to bracket do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377472698409"
          }
        ],
        "query_text": "what does use tab stops do st3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377466015410"
          }
        ],
        "query_text": "what does use tab stops do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377458851635"
          }
        ],
        "query_text": "what does usetabstops do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377357592803"
          }
        ],
        "query_text": "sublime text 3 hot reloading refresh packages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377312040217"
          }
        ],
        "query_text": "sublime text 3 hot reloading"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377246360304"
          }
        ],
        "query_text": "ubuntu how to install a font"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377173661971"
          }
        ],
        "query_text": "monaco font"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496377045704856"
          }
        ],
        "query_text": "javascript sublime text 3 plugin set matching brackets to the same color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496376553144291"
          }
        ],
        "query_text": "brackethighlighter what is auto selection mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496376516131128"
          }
        ],
        "query_text": "brackethighlighter red question mark"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375946059897"
          }
        ],
        "query_text": "tern_for_sublime improve speed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375819896955"
          }
        ],
        "query_text": "tern_for_sublime specify file paths"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375809398677"
          }
        ],
        "query_text": "tern for sublime keeps failing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375433212301"
          }
        ],
        "query_text": "tern for js fix slowness"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375222825739"
          }
        ],
        "query_text": "installing tern_for_sublime"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496375020904602"
          }
        ],
        "query_text": "sublime text 3 javascript autocomplete plugin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374924512631"
          },
          {
            "timestamp_usec": "1496375015084597"
          }
        ],
        "query_text": "javascript autocomplete that doesn't suck sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374776136970"
          }
        ],
        "query_text": "javascript autocomplete that doesn't suck"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374539787445"
          }
        ],
        "query_text": "sublimecodeintel doesn't work for javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374499303142"
          }
        ],
        "query_text": "sublimeintel could not evaluate first part of"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374485959295"
          }
        ],
        "query_text": "codeComplice could not evaluate first part of"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496374091603508"
          }
        ],
        "query_text": "codeintel scan extra directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496373776123633"
          }
        ],
        "query_text": "where is .tmLanguage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496373744943455"
          }
        ],
        "query_text": "codeintel syntax map babel javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496373606779747"
          }
        ],
        "query_text": "evaluating could not resolve first part of codecomplice"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496373575493451"
          }
        ],
        "query_text": "evaluating 'textareaEl' at EditableTextFormattable.jest.jsx#217: could not resolve first part of 'textareaEl'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372681007344"
          }
        ],
        "query_text": "sublime text 3 where is menu json located"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372516466941"
          },
          {
            "timestamp_usec": "1496372530252502"
          }
        ],
        "query_text": "sublime text 3 edit right click popup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372472633646"
          }
        ],
        "query_text": "sublime text edit right click menu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372429570080"
          }
        ],
        "query_text": "sublimecodeintel not working with sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372366220625"
          }
        ],
        "query_text": "sublimecodeintel not working st3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372327401893"
          }
        ],
        "query_text": "sublimecodeintel showing two jump to symbol definition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372270053209"
          }
        ],
        "query_text": "how to open sublime console"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372204126383"
          }
        ],
        "query_text": "sublimecodeintel st3 jump to definition not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496372156078321"
          }
        ],
        "query_text": "sublimecodeintel jump to definition not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496371806075236"
          }
        ],
        "query_text": "how to setup sublimecodeintel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496371646548453"
          }
        ],
        "query_text": "sublime text 3 best git package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496371108554920"
          }
        ],
        "query_text": "sublime hotkey to open sidebar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496370741507931"
          }
        ],
        "query_text": "sublime text 3 append semicolon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496370674363668"
          }
        ],
        "query_text": "sublime text 3 append"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496370670065656"
          }
        ],
        "query_text": "sublime text 3 auto semicolon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496366832968284"
          }
        ],
        "query_text": "dark confidant mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496366233505250"
          }
        ],
        "query_text": "liliana of the vel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496366092667232"
          }
        ],
        "query_text": "urborg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496365877477317"
          }
        ],
        "query_text": "nykthos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496365588161460"
          }
        ],
        "query_text": "mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496365468465372"
          }
        ],
        "query_text": "best black planeswalkers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496363968952618"
          }
        ],
        "query_text": "thoughtseize"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496363963020778"
          }
        ],
        "query_text": "inquisition of kozilek"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355633119639"
          }
        ],
        "query_text": "git delete local branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355623655320"
          }
        ],
        "query_text": "git delete a branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355607200167"
          }
        ],
        "query_text": "git cherry picking merge conflict stop cherry picking"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355370333767"
          }
        ],
        "query_text": "git how to resolve cherry pick conflicts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355280711986"
          }
        ],
        "query_text": "git made commits in wrong branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355179826805"
          }
        ],
        "query_text": "git cherry pick multiple commits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355137352920"
          }
        ],
        "query_text": "how to merge multiple commits into one on git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496355018723372"
          }
        ],
        "query_text": "git made commits in wrong branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496354778016502"
          }
        ],
        "query_text": "git apply a commit to a new branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496352910325414"
          }
        ],
        "query_text": "git diff unstaged changes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496352902437300"
          }
        ],
        "query_text": "git diff uncheckout changes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496347778964671"
          }
        ],
        "query_text": "javascript es6 multiple outputs of a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346763637464"
          }
        ],
        "query_text": "javascript are variables copied es6"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346751094199"
          }
        ],
        "query_text": "javascript are variables copied"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346717393886"
          }
        ],
        "query_text": "es6 javascript copy variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346711015408"
          }
        ],
        "query_text": "esc copy variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346700004414"
          }
        ],
        "query_text": "esx shallow copy variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346190038810"
          }
        ],
        "query_text": "lodash find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496346086774972"
          }
        ],
        "query_text": "underscore find"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496345820490223"
          }
        ],
        "query_text": "clone a javascript variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496343953911540"
          }
        ],
        "query_text": "programming what does  landed mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496343945525669"
          }
        ],
        "query_text": "programming what is landed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496343006262662"
          }
        ],
        "query_text": "git undo last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496342883578923"
          }
        ],
        "query_text": "compare version of a file on two branches"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496340559177087"
          }
        ],
        "query_text": "eslint no unused vars on callback"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496340526086534"
          }
        ],
        "query_text": "javascript specify a parameter is unused"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496340283519494"
          }
        ],
        "query_text": "get error from meteor.call"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496335280785316"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496332884204115"
          }
        ],
        "query_text": "jest spyon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496332767280390"
          }
        ],
        "query_text": "jest mock a non default export"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496332759352656"
          }
        ],
        "query_text": "jest mock a non default function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496329524136165"
          }
        ],
        "query_text": "jest mocking a module in a test file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496329410730286"
          }
        ],
        "query_text": "jest.mock example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496329020827467"
          }
        ],
        "query_text": "jest how to mock a function of a used module"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496328013170252"
          }
        ],
        "query_text": "nirvana in bloom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496327636594657"
          }
        ],
        "query_text": "offset position for pasting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496327389841875"
          }
        ],
        "query_text": "chai test sublimetext3 snippets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496327374361794"
          }
        ],
        "query_text": "chai test snippets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496327351395453"
          }
        ],
        "query_text": "sublime text 3 javascript es6 snippets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496327225304559"
          }
        ],
        "query_text": "sublime text 3 javascript insert semicolon in places with missing semicolon lint"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326872325375"
          }
        ],
        "query_text": "what is ubuntu-gnome-desktop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326805020486"
          }
        ],
        "query_text": "can I remove the ubuntu gnome metapackage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326708606995"
          }
        ],
        "query_text": "gnome how to uninstall default programs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326203082922"
          }
        ],
        "query_text": "how many ram volts should i use"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326184259000"
          }
        ],
        "query_text": "amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326172538152"
          }
        ],
        "query_text": "gnome uninstall default programe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496326029417032"
          }
        ],
        "query_text": "ubuntu gnome free up disk space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496325998981710"
          }
        ],
        "query_text": "ubuntu gnome manage memory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496322705276727"
          }
        ],
        "query_text": "what is btc instruction"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496322667942487"
          }
        ],
        "query_text": "kyle banker blog index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496298079494249"
          }
        ],
        "query_text": "the joy in indexing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496295816077878"
          }
        ],
        "query_text": "youtube optimizing mongo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496295550289170"
          }
        ],
        "query_text": "optimizing mongodb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496294302223888"
          }
        ],
        "query_text": "mongodb comparison"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496294127434377"
          }
        ],
        "query_text": "meteor changing databases"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496289417399384"
          }
        ],
        "query_text": "gideon ally of zendikar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496289271068380"
          },
          {
            "timestamp_usec": "1496289272955748"
          }
        ],
        "query_text": "blightning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496286617349757"
          }
        ],
        "query_text": "jace unraveler of secrets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496286464607509"
          }
        ],
        "query_text": "chandra flamecaller"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496286371671068"
          }
        ],
        "query_text": "aethersphere harvester"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496282870727792"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496282870523882"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496281408495024"
          }
        ],
        "query_text": "default.canBeCopied.mockReturnValueOnce is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496281262587563"
          }
        ],
        "query_text": "jest reset specific module"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496281148096880"
          }
        ],
        "query_text": "jest reset imported modules"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496280828366114"
          }
        ],
        "query_text": "mock return once jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496277951379186"
          },
          {
            "timestamp_usec": "1496278032543189"
          }
        ],
        "query_text": "jest mocking"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496277107070011"
          }
        ],
        "query_text": "jest mock with es6 paths"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496276645910021"
          }
        ],
        "query_text": "complete guide to mocking in jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496272876281577"
          }
        ],
        "query_text": "mongodb query for object with child of list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496266136401970"
          }
        ],
        "query_text": "jest mock non default functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496262256973307"
          }
        ],
        "query_text": "jest test behavior of internal function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496261176552949"
          }
        ],
        "query_text": "mongo get value of a field for all items in a collection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496256275518080"
          }
        ],
        "query_text": "javascript is it bad style to explicitly cast to boolean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496255331970030"
          }
        ],
        "query_text": "sublime text 3 auto semicolon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496246492371731"
          }
        ],
        "query_text": "sublime text 3 auto semicolon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496246373908343"
          }
        ],
        "query_text": "javascript not in syntax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496246110749941"
          }
        ],
        "query_text": "what do brackethighlighter parameters do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245927273465"
          }
        ],
        "query_text": "refresh sublime for packages to take effect"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245915623967"
          }
        ],
        "query_text": "chrome open the last closed page"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245660520442"
          }
        ],
        "query_text": "refresh sublime for packages to take effect"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245608435855"
          }
        ],
        "query_text": "reload sublime shortcut"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245202860634"
          }
        ],
        "query_text": "sublime text 3 javascript smart bracket"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245047386809"
          }
        ],
        "query_text": "speed tester"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496245043446553"
          }
        ],
        "query_text": "sublime text 3 javascript smart bracket"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496244549712940"
          }
        ],
        "query_text": "ubuntu stop showing disk full message"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496242893752174"
          }
        ],
        "query_text": "javascript better unexpected token error methods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496242754154485"
          }
        ],
        "query_text": "pond zond"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496242272396009"
          }
        ],
        "query_text": "jest mock functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496242032571534"
          }
        ],
        "query_text": "slk"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496241540630609"
          }
        ],
        "query_text": "sublime text 3 go to top of file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496199610757359"
          }
        ],
        "query_text": "nykthos mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496199180616037"
          }
        ],
        "query_text": "cranial plating mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496198916802096"
          }
        ],
        "query_text": "blinkmoth nexus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496198661053222"
          }
        ],
        "query_text": "mtg twitch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496198549324892"
          }
        ],
        "query_text": "arcbound ravager"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496198256794424"
          }
        ],
        "query_text": "day's undoing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496195601065912"
          }
        ],
        "query_text": "javascript non mutating delete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496190165470033"
          }
        ],
        "query_text": "how to get allston brighton parking permit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496190013709025"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496189498918009"
          },
          {
            "timestamp_usec": "1496189646204226"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496189496894141"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496180243418390"
          }
        ],
        "query_text": "google drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496178352131731"
          }
        ],
        "query_text": "es6 default imports"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496175957392471"
          }
        ],
        "query_text": "jest mock functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496172287603686"
          }
        ],
        "query_text": "insert key value pair into object javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496171535111659"
          }
        ],
        "query_text": "javascript in keyword"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496171317414856"
          }
        ],
        "query_text": "javascript tell if a property is in an object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496170074555314"
          }
        ],
        "query_text": "mongodb find all schema in a db"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168972270920"
          }
        ],
        "query_text": "chai expect"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168652500163"
          }
        ],
        "query_text": "jest check if function is defined"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168539950593"
          }
        ],
        "query_text": "jasmine check if object has a property"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168096808372"
          }
        ],
        "query_text": "get keys from javascript object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168044820920"
          }
        ],
        "query_text": "jasmine expect to contain"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496168003838069"
          }
        ],
        "query_text": "jasmine expect api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496167932449550"
          }
        ],
        "query_text": "jasmine check if key is in dict"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496167815344069"
          }
        ],
        "query_text": "how to tell if a key in a javascript dict has been deleted"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496162901163295"
          }
        ],
        "query_text": "material theme show where I am in right area without mouseover"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496159419064302"
          }
        ],
        "query_text": "material theme sublime not applying to tabs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496156769855864"
          }
        ],
        "query_text": "gif diff see changes to oen file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496113142056757"
          }
        ],
        "query_text": "watch silicon valley online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496113124269769"
          }
        ],
        "query_text": "silicon valley season 4 episode 6"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496113064182367"
          }
        ],
        "query_text": "blitz the binding of isaac"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496112226926366"
          }
        ],
        "query_text": "twitch mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496105794726536"
          }
        ],
        "query_text": "mtg twitch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496105347860369"
          }
        ],
        "query_text": "cavern of souls"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496105276738898"
          }
        ],
        "query_text": "master of waves"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496103901627596"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496101406933956"
          }
        ],
        "query_text": "shit ask hn says"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496100084995175"
          },
          {
            "timestamp_usec": "1496100109675840"
          },
          {
            "timestamp_usec": "1496100110375023"
          },
          {
            "timestamp_usec": "1496101308912277"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496100082187984"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496099896893848"
          }
        ],
        "query_text": "nick shrock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496098870604996"
          }
        ],
        "query_text": "arc diff"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496096939253453"
          }
        ],
        "query_text": "google analytics debugger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496095478707836"
          }
        ],
        "query_text": "burning wish mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496094493488156"
          }
        ],
        "query_text": "clear slack cookies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496092757471206"
          }
        ],
        "query_text": "batterskull"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496091938386008"
          }
        ],
        "query_text": "umezawa's jitte"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496091216804956"
          }
        ],
        "query_text": "mtg how does delve work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496091212274070"
          }
        ],
        "query_text": "how does delve work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496088376730348"
          }
        ],
        "query_text": "slack loads infinitely scudcloud"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496088360119958"
          }
        ],
        "query_text": "scudcloud breaks slack app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496084732210371"
          }
        ],
        "query_text": "builtwith"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496081966109062"
          }
        ],
        "query_text": "configuring ttf-mscorefonts-installer how to press ok"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496081697092264"
          }
        ],
        "query_text": "best way to use slack on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496081299985691"
          }
        ],
        "query_text": "ubuntu desktop messages for slack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496077513948329"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496033281586768"
          }
        ],
        "query_text": "best sublimetext3 themes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496033078180422"
          }
        ],
        "query_text": "cassiozen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496032363469613"
          }
        ],
        "query_text": "how did javascript become the language of the internet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030825571097"
          }
        ],
        "query_text": "sublimelinter show error popup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030519895636"
          }
        ],
        "query_text": "sublimetext3 underline errors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030519871913"
          }
        ],
        "query_text": "how to change sublime text 3 errors from boxes to underlines"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030315699672"
          }
        ],
        "query_text": "sublime change view of eslint errors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030225166871"
          }
        ],
        "query_text": "prettify eslint error message"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030069623086"
          }
        ],
        "query_text": "sublime prettier error messages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030053232901"
          }
        ],
        "query_text": "sublime prettiererror messages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030052631465"
          }
        ],
        "query_text": "sublime prettiererro messages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496030029782951"
          }
        ],
        "query_text": "sublime prettier eslint messages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496029729158825"
          },
          {
            "timestamp_usec": "1496029816243651"
          },
          {
            "timestamp_usec": "1496029823562192"
          }
        ],
        "query_text": "mobx versus redux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496027613035576"
          }
        ],
        "query_text": "my family's slave"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496026681559774"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496023719684978"
          },
          {
            "timestamp_usec": "1496023723158611"
          }
        ],
        "query_text": "higher order components react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496023582069751"
          }
        ],
        "query_text": "mardu vehicles"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496023494771338"
          }
        ],
        "query_text": "chandra"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496023472110315"
          }
        ],
        "query_text": "Glorybringer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496023333915992"
          }
        ],
        "query_text": "miracle red card"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496022853465919"
          }
        ],
        "query_text": "all energy cards in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496022824718148"
          }
        ],
        "query_text": "mtg search engine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496022793374296"
          }
        ],
        "query_text": "ball lightning standard version with energy magic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496022786255303"
          }
        ],
        "query_text": "ball lightning standard version with energy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496021873111805"
          }
        ],
        "query_text": "mono red standard deck"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496021619999513"
          }
        ],
        "query_text": "insult to injury deck in standard channelfireball"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496021215846302"
          }
        ],
        "query_text": "insult to injury deck in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496021201286759"
          }
        ],
        "query_text": "insult to injury in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496018517337627"
          }
        ],
        "query_text": "magic emrakul"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496018505408366"
          }
        ],
        "query_text": "magic embercal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496018500997178"
          }
        ],
        "query_text": "embercal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496017875452284"
          }
        ],
        "query_text": "siege rhino"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496017842376043"
          }
        ],
        "query_text": "glorybound initiate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016979972347"
          }
        ],
        "query_text": "compiling react jest for faster tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016802570536"
          }
        ],
        "query_text": "compiling react for faster tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016434014197"
          }
        ],
        "query_text": "react patterns youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016100209112"
          }
        ],
        "query_text": "what does branch do with current unstaged changes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016092856731"
          }
        ],
        "query_text": "what does branch do with current commits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496016056770811"
          }
        ],
        "query_text": "move a commit to a new branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015987875335"
          }
        ],
        "query_text": "how to create a new branch git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015966823862"
          }
        ],
        "query_text": "git branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015825616359"
          }
        ],
        "query_text": "react patterns youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015801614712"
          }
        ],
        "query_text": "javascript completions use on jsx files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015680096473"
          },
          {
            "timestamp_usec": "1496015683623291"
          }
        ],
        "query_text": "using javascript completions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496015479035811"
          }
        ],
        "query_text": "sublime text 3 packages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014820619958"
          }
        ],
        "query_text": "jetbrains plugin sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014807846710"
          }
        ],
        "query_text": "intellij plugin sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014792867533"
          }
        ],
        "query_text": "intellij sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014670845014"
          }
        ],
        "query_text": "tern for sublime crashes -ternjs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014664151213"
          }
        ],
        "query_text": "tern_for_sublime crashes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496014219579232"
          }
        ],
        "query_text": "tern for sublime text crashes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496013491424183"
          }
        ],
        "query_text": "zen coding sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496013414855880"
          }
        ],
        "query_text": "emmet sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496012583932190"
          }
        ],
        "query_text": "set up flow for sublime text 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496012576573263"
          }
        ],
        "query_text": "set up flow for js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496012322092639"
          }
        ],
        "query_text": "sublimetext3 javascript better autocomplete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496012125120214"
          }
        ],
        "query_text": "what are my global npm installs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496011232856452"
          }
        ],
        "query_text": "setting up flow with sublimetext3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496008968192852"
          }
        ],
        "query_text": "python write but don't overwrite"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496008560185926"
          }
        ],
        "query_text": "write a list of string to a new file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496007983484818"
          }
        ],
        "query_text": "python get lines of file as list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496006222264772"
          }
        ],
        "query_text": "python see if a list starts with another list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496005391215187"
          }
        ],
        "query_text": "insert list into another list python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496005066860917"
          }
        ],
        "query_text": "python string equals"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496004130025650"
          }
        ],
        "query_text": "python enumerate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496003959352119"
          }
        ],
        "query_text": "python regex"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496003888682845"
          }
        ],
        "query_text": "parse js from python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496003764857248"
          }
        ],
        "query_text": "python check if string contains substring"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496003513002689"
          }
        ],
        "query_text": "python edit a javascript file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496002990788414"
          }
        ],
        "query_text": "parsing json with python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496002876774142"
          }
        ],
        "query_text": "sublime text 3 pretty json viewing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496002424837316"
          }
        ],
        "query_text": "opening a file python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496002206989877"
          }
        ],
        "query_text": "how to parse a file in python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496002188258117"
          }
        ],
        "query_text": "python convert text to json"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496001926733747"
          }
        ],
        "query_text": "how to upgrade an npm package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496001661138359"
          }
        ],
        "query_text": "jest 15 cli options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496001521468019"
          }
        ],
        "query_text": "jest unrecognized option outputFile"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496001108387439"
          }
        ],
        "query_text": "ubuntu chain bash commands"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000758807597"
          }
        ],
        "query_text": "boston calling schedule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000617067383"
          }
        ],
        "query_text": "bash what is 2>&1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000538832886"
          }
        ],
        "query_text": "what is $1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000470425941"
          }
        ],
        "query_text": "bash what is $1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000374232433"
          }
        ],
        "query_text": "what is `tty` bash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000337866065"
          }
        ],
        "query_text": "what is `tty`"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1496000324482422"
          }
        ],
        "query_text": "`tty`\" != \"not a tty\""
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999946246599"
          }
        ],
        "query_text": "jest output names of failed tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999904793352"
          }
        ],
        "query_text": "what is jest-ci -cli"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999883801231"
          }
        ],
        "query_text": "what is jest-ci"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999736326852"
          }
        ],
        "query_text": "jest get a list of all the failed tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999511923292"
          }
        ],
        "query_text": "jest 15"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999389191679"
          }
        ],
        "query_text": "'jest' stop on first failed test -jasmine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999377209534"
          }
        ],
        "query_text": "'jest' stop on first failed test"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495999347422693"
          }
        ],
        "query_text": "jest stop on first failed test"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495998772863398"
          }
        ],
        "query_text": "jest only reset some modules"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495998675716794"
          }
        ],
        "query_text": "jest set files settings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495998626277690"
          }
        ],
        "query_text": "jest can i set settings at top of file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495998608486041"
          }
        ],
        "query_text": "jest can i disable automocking on a specific file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495998226339231"
          }
        ],
        "query_text": "jest cache big libraries for faster tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495997995849363"
          }
        ],
        "query_text": "how to make jest tests faster"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495997629484392"
          }
        ],
        "query_text": "regex denote that a line doesn't have anything after i"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495997425421451"
          }
        ],
        "query_text": "react shallow renderer api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495997417023771"
          }
        ],
        "query_text": "react reuse shallow renderer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495997297221284"
          }
        ],
        "query_text": "react jest is reloading a module before every test necessary?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495996617023757"
          }
        ],
        "query_text": "react jest tests take long to run"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495996022532497"
          }
        ],
        "query_text": "react test jest renderIntoDocument vs shallowRender"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495995729747309"
          }
        ],
        "query_text": "how to unmock react jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495994728185647"
          }
        ],
        "query_text": "git rebase pick vs squash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495994555882740"
          }
        ],
        "query_text": "git how to combine two commits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495994338604312"
          }
        ],
        "query_text": "git how to add a change to the last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495993605384052"
          }
        ],
        "query_text": "git checkout go back to head"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495992267293907"
          }
        ],
        "query_text": "ubuntu remove everything in children directories"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495992191736861"
          }
        ],
        "query_text": "ubuntu remove everything in a subdirectory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495990123285171"
          }
        ],
        "query_text": "Template helpers meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495989643469719"
          }
        ],
        "query_text": "how do meteor templates work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988930399863"
          }
        ],
        "query_text": "dell es5450 user manual"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988846194721"
          }
        ],
        "query_text": "dell es5450"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988840760339"
          }
        ],
        "query_text": "es5450"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988757182122"
          }
        ],
        "query_text": "useful to have a SODIMM and a DIMM slot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988726189508"
          }
        ],
        "query_text": "sodimm ram"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988655650711"
          },
          {
            "timestamp_usec": "1495988662397236"
          }
        ],
        "query_text": "dmidecode find form factor of ram"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988574288442"
          }
        ],
        "query_text": "latitude es5450 which motherboard do i have"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988482240188"
          }
        ],
        "query_text": "how many pins ram do i need to buy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988387927906"
          }
        ],
        "query_text": "is my computer compatible with ddr4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988357994256"
          }
        ],
        "query_text": "how to figure out what ram my computer is compatible with"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988277316933"
          }
        ],
        "query_text": "DDR3 16gb ram amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988269765152"
          }
        ],
        "query_text": "ddr3 16gb ram"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988264138823"
          }
        ],
        "query_text": "DDR3 16gb ram"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495988188116947"
          }
        ],
        "query_text": "ubuntu check what kind of ram I have"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495987537636837"
          }
        ],
        "query_text": "what is a REPL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495987228466716"
          }
        ],
        "query_text": "how to test react components without rendering them"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495986602897719"
          }
        ],
        "query_text": "psychatog"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495986503073633"
          }
        ],
        "query_text": "as foretold"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495985973671104"
          }
        ],
        "query_text": "sensei's divining top"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495985820906233"
          }
        ],
        "query_text": "lightning rift"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495985766250495"
          }
        ],
        "query_text": "eternal witness"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495985323375535"
          }
        ],
        "query_text": "live literate programming"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495950098113815"
          }
        ],
        "query_text": "boston calling sunday schedule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495947472620242"
          }
        ],
        "query_text": "scott allen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495946866639400"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495944679922518"
          }
        ],
        "query_text": "what does research say about effects of squatting on knee health"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495941459428515"
          },
          {
            "timestamp_usec": "1495941465143882"
          }
        ],
        "query_text": "what is .webp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495939110267554"
          },
          {
            "timestamp_usec": "1495939112276845"
          }
        ],
        "query_text": "torx screws"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495935421753949"
          }
        ],
        "query_text": "twitch mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495935201331210"
          }
        ],
        "query_text": "speedtest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495934663036371"
          }
        ],
        "query_text": "meteor template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495934641280294"
          },
          {
            "timestamp_usec": "1495934644017034"
          }
        ],
        "query_text": "javascript Template object"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495934597828645"
          }
        ],
        "query_text": "mdn Template"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495934544922426"
          }
        ],
        "query_text": "what does template do in javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495924379685711"
          }
        ],
        "query_text": "star market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495921745482030"
          },
          {
            "timestamp_usec": "1495922108791007"
          },
          {
            "timestamp_usec": "1495922110080699"
          },
          {
            "timestamp_usec": "1495922337175816"
          },
          {
            "timestamp_usec": "1495922338122544"
          }
        ],
        "query_text": "(Current Location) -> Harvard Stadium, 79 N Harvard St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495921741734889"
          }
        ],
        "query_text": "Harvard Stadium, 79 N Harvard St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495921564601805"
          }
        ],
        "query_text": "where is the boston calling schedule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495921186360305"
          }
        ],
        "query_text": "what time is hannibal buress's set at boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495921118709084"
          }
        ],
        "query_text": "what time is hannibal buress playing at boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495917147160186"
          }
        ],
        "query_text": "bu fitness center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495917127509041"
          }
        ],
        "query_text": "bu athletic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495917115020042"
          }
        ],
        "query_text": "bu athletic center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495913600110424"
          }
        ],
        "query_text": "jest props of children are undefined"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495913514440386"
          }
        ],
        "query_text": "testutils getRenderOutput"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495913448471918"
          }
        ],
        "query_text": "youtube fractal tree"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495912021651555"
          }
        ],
        "query_text": "TestUtils.findRenderedDOMComponentWithTag work with react tags"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495911798392897"
          },
          {
            "timestamp_usec": "1495911801151375"
          },
          {
            "timestamp_usec": "1495911801815105"
          }
        ],
        "query_text": "TestUtils.findRenderedDOMComponentWithTag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495910164364490"
          },
          {
            "timestamp_usec": "1495910170673539"
          }
        ],
        "query_text": "Malden"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495909954544771"
          }
        ],
        "query_text": "what is allston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495909918786145"
          }
        ],
        "query_text": "google maps 102 chester street"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495909262278787"
          }
        ],
        "query_text": "jest unmock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495909212739868"
          }
        ],
        "query_text": "jest setting react element to variable causes test to break"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495908072218190"
          }
        ],
        "query_text": "jest how to unlock react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495908067929272"
          }
        ],
        "query_text": "jest how to unmokc react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906922142371"
          }
        ],
        "query_text": "how to automock with jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906895307499"
          }
        ],
        "query_text": "jest can i disable automocking on a specific file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906876375057"
          }
        ],
        "query_text": "how jest automocking works"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906608109895"
          }
        ],
        "query_text": "what is require default do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906150764509"
          }
        ],
        "query_text": "git how to stash certain files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495906146516994"
          }
        ],
        "query_text": "git how to stash only one file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905566813667"
          }
        ],
        "query_text": "what does double slash mean in regex"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905384416936"
          }
        ],
        "query_text": "jest 15 test Regex option"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905302017371"
          }
        ],
        "query_text": "difference between babel-jest and jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905285437145"
          }
        ],
        "query_text": "how to upgrade jest 14 to 15"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905231788308"
          }
        ],
        "query_text": "how to upgrade to jest 15"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905126982081"
          }
        ],
        "query_text": "what do package.json dependency symbols mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905040981490"
          }
        ],
        "query_text": "setting jest test options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495905033215504"
          }
        ],
        "query_text": "setting test options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495904992944143"
          }
        ],
        "query_text": "how to specify regex for tests in jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495904716438142"
          }
        ],
        "query_text": "jest automock feature how to use well"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495904206634647"
          }
        ],
        "query_text": "does jest unmock automatically mock all dependencies?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495904024947391"
          }
        ],
        "query_text": "jest unmock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903532084995"
          }
        ],
        "query_text": "react-test-renderer/shallow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903376965893"
          }
        ],
        "query_text": "tern_for_sublime keeps failing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903360926020"
          }
        ],
        "query_text": "tern keeps failing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903063882666"
          }
        ],
        "query_text": "sublime text syntax highlighting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903005627143"
          },
          {
            "timestamp_usec": "1495903037438269"
          }
        ],
        "query_text": "get css styling for scss sublime3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495903001004321"
          }
        ],
        "query_text": "get css styling for scss"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495900636674273"
          }
        ],
        "query_text": "boston calling lineup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495853616338583"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495832922539034"
          },
          {
            "timestamp_usec": "1495832943185183"
          }
        ],
        "query_text": "(Current Location) -> Harvard Stadium, 79 N Harvard St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495832920872174"
          }
        ],
        "query_text": "Harvard Stadium, 79 N Harvard St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495832726117566"
          },
          {
            "timestamp_usec": "1495832732062030"
          },
          {
            "timestamp_usec": "1495832733970463"
          }
        ],
        "query_text": "where is boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495832714973043"
          }
        ],
        "query_text": "(Current Location) -> Calling All Crows, 1330 Beacon St, Brookline, MA 02446"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495832708882368"
          }
        ],
        "query_text": "boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495830603252095"
          },
          {
            "timestamp_usec": "1495830605258271"
          },
          {
            "timestamp_usec": "1495830961550910"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495828668543110"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495828062782388"
          },
          {
            "timestamp_usec": "1495828632918133"
          },
          {
            "timestamp_usec": "1495828633011528"
          }
        ],
        "query_text": "(Current Location) -> 50 Union St, Cambridge, MA 02141"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495828061117833"
          }
        ],
        "query_text": "50 Union Street Cambridge MA  United States"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495827444899703"
          }
        ],
        "query_text": "does git stash stash untracked files?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495827161390536"
          }
        ],
        "query_text": "react how to use shallow renderer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495826361575852"
          }
        ],
        "query_text": "git checkout"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495825659776462"
          },
          {
            "timestamp_usec": "1495825689609916"
          }
        ],
        "query_text": "git stash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495821267929352"
          }
        ],
        "query_text": "git see changes at current commit since previous commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495821230731281"
          }
        ],
        "query_text": "git see changes since last commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495820607341784"
          }
        ],
        "query_text": "git revert changes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495819902936238"
          },
          {
            "timestamp_usec": "1495819913955402"
          }
        ],
        "query_text": "mdn drag event"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495819892662310"
          }
        ],
        "query_text": "mdn get event when an element is being dragged"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495819854161533"
          }
        ],
        "query_text": "jest find which tests were skipped"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495819854123788"
          }
        ],
        "query_text": "what is a dragover"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495818937766879"
          }
        ],
        "query_text": "jest find which tests were skipped"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495817978606521"
          }
        ],
        "query_text": "lodash.pick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495817188067642"
          }
        ],
        "query_text": "jquery what is blur"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495816411459016"
          }
        ],
        "query_text": "jquery tell if parent is active element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495815726093662"
          }
        ],
        "query_text": "jquery filter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495815636061770"
          }
        ],
        "query_text": "jquery selector for element except"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495815502604649"
          }
        ],
        "query_text": "jquery get children of an element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495815380246854"
          }
        ],
        "query_text": "jquery find currently selected element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495815015458543"
          }
        ],
        "query_text": "jquery show all elements with a tag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495814655479669"
          }
        ],
        "query_text": "what does event.stopPropagation do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495812858821973"
          }
        ],
        "query_text": "sublime text 3 only show sidebar when in fullscreen mode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495812030857161"
          }
        ],
        "query_text": "what is fiducial tracking"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495811840817544"
          },
          {
            "timestamp_usec": "1495811888039142"
          }
        ],
        "query_text": "boston calling friday schedule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495811682847218"
          }
        ],
        "query_text": "google calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495809022738134"
          },
          {
            "timestamp_usec": "1495809025283264"
          },
          {
            "timestamp_usec": "1495810015208022"
          },
          {
            "timestamp_usec": "1495810015212173"
          },
          {
            "timestamp_usec": "1495810272562016"
          },
          {
            "timestamp_usec": "1495810273474035"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495809019986851"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495768892453121"
          }
        ],
        "query_text": "what is a crud app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495764855643956"
          }
        ],
        "query_text": "crockpot chicken recipes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495764716563819"
          }
        ],
        "query_text": "crock pot cooking times for chicken"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495764701145008"
          }
        ],
        "query_text": "crock pot cooking times"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495762296888825"
          },
          {
            "timestamp_usec": "1495762307325601"
          }
        ],
        "query_text": "best salsa"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495761544761073"
          },
          {
            "timestamp_usec": "1495761870184430"
          },
          {
            "timestamp_usec": "1495761870220669"
          }
        ],
        "query_text": "(Current Location) -> Star Market, Commonwealth Avenue, Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495761313468601"
          },
          {
            "timestamp_usec": "1495761320554961"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495761284950723"
          }
        ],
        "query_text": "(Current Location) -> Star Market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495760432572617"
          }
        ],
        "query_text": "closest t stop to me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495759466395539"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495758946874678"
          },
          {
            "timestamp_usec": "1495758948627860"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495758946607508"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495758902218785"
          }
        ],
        "query_text": "(Current Location) -> Kenmore, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495758891901587"
          }
        ],
        "query_text": "closest t stop to me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495757254142401"
          },
          {
            "timestamp_usec": "1495758221374390"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495755715038475"
          }
        ],
        "query_text": "facebook react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495755709664636"
          }
        ],
        "query_text": "facebook reactions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754797525861"
          }
        ],
        "query_text": "thingiverse shower hanger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754405879782"
          }
        ],
        "query_text": "react draw order"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754376065046"
          }
        ],
        "query_text": "react z index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754373888766"
          }
        ],
        "query_text": "react zinde"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754146585871"
          }
        ],
        "query_text": "react make sure child element renders over parent z index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754135545349"
          }
        ],
        "query_text": "react make sure child element renders over parent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754075288823"
          }
        ],
        "query_text": "mdn onChange"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495754068740216"
          }
        ],
        "query_text": "react onchange"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753986876854"
          }
        ],
        "query_text": "react componentWillReceiveProps"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753966676964"
          }
        ],
        "query_text": "react handleChange"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753953611124"
          }
        ],
        "query_text": "react handlechange"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753753181794"
          }
        ],
        "query_text": "mdn z index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753740073582"
          }
        ],
        "query_text": "react make z score of child depend on parent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753677940839"
          }
        ],
        "query_text": "introduction to mocking with jest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495753271128481"
          }
        ],
        "query_text": "node do i have to export all top level functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495752944539954"
          }
        ],
        "query_text": "js sublime-text parsing error unexpected token expected semicolon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495752548475891"
          },
          {
            "timestamp_usec": "1495752662518194"
          }
        ],
        "query_text": "javascript how to define a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495752386712422"
          }
        ],
        "query_text": "javascript exports functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495752367450579"
          }
        ],
        "query_text": "javascript export a top level function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495751556404514"
          }
        ],
        "query_text": "react set z index to overlap child component"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495751502310411"
          }
        ],
        "query_text": "button z index"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495749822613546"
          }
        ],
        "query_text": "jest unmock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495749675291368"
          }
        ],
        "query_text": "jest.unmock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495748655548052"
          }
        ],
        "query_text": "react shallow renderer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495748052788605"
          }
        ],
        "query_text": "import renderer from 'react-test-renderer/shallow'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495747546238915"
          }
        ],
        "query_text": "react-test-renderer/shallow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495747453189629"
          }
        ],
        "query_text": "react new shallow renderer location"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495747361745572"
          }
        ],
        "query_text": "Shallow renderer has been moved to react-test-renderer/shallow. Update references to remove this warning."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495746910896718"
          }
        ],
        "query_text": "sublime text 3 change autocomplete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495746747009903"
          }
        ],
        "query_text": "Cannot read property '__reactInternalInstance$nex8m3qzkikke29' of undefined'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495746222255965"
          }
        ],
        "query_text": "why don't i need to push to branches"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495746127165599"
          }
        ],
        "query_text": "git diff two branches"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495745840330305"
          }
        ],
        "query_text": "how to undo git stash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495745837707788"
          }
        ],
        "query_text": "how to undo git stash pop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495745768279307"
          }
        ],
        "query_text": "git undo untracked change"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495745417946944"
          }
        ],
        "query_text": "git push to branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495744065472821"
          }
        ],
        "query_text": "html change caret width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495744054388455"
          }
        ],
        "query_text": "html change caret style"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495744042282566"
          }
        ],
        "query_text": "html change cared width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495743989271729"
          }
        ],
        "query_text": "html input caret style"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495743505365177"
          }
        ],
        "query_text": "border style"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495743212564880"
          }
        ],
        "query_text": "stack exchange design indicate that text is currently being edited"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495743190044388"
          }
        ],
        "query_text": "stack exchange design indicate that text is being edited"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495743021723360"
          }
        ],
        "query_text": "mdn border-style default"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495742589401015"
          }
        ],
        "query_text": "mdn html button"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495742527393852"
          }
        ],
        "query_text": "mdn button border color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495741317261794"
          }
        ],
        "query_text": "react button border property"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495741165139069"
          }
        ],
        "query_text": "button border width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495740993930008"
          }
        ],
        "query_text": "mdn button border width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495739761915697"
          }
        ],
        "query_text": "input border style examples"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495739596973333"
          }
        ],
        "query_text": "mdn input"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495738987383209"
          }
        ],
        "query_text": "how to comment something inside a react block"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495738563184078"
          }
        ],
        "query_text": "html input element make text centered"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495738319773799"
          }
        ],
        "query_text": "html input element make centered"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495736234264198"
          }
        ],
        "query_text": "mdn display"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495736226660760"
          }
        ],
        "query_text": "what is display: block"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495724882246556"
          }
        ],
        "query_text": "react dev tools"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495718504687901"
          },
          {
            "timestamp_usec": "1495718505532298"
          },
          {
            "timestamp_usec": "1495719723193143"
          },
          {
            "timestamp_usec": "1495719725114303"
          },
          {
            "timestamp_usec": "1495719753995772"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495718501007082"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495718500405574"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495679747345443"
          }
        ],
        "query_text": "watch silicon valley season 4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495678549067868"
          }
        ],
        "query_text": "silicon valley watch season 4 online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495678355368130"
          },
          {
            "timestamp_usec": "1495678437473500"
          }
        ],
        "query_text": "how many LOC are different codebases"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495670747570500"
          }
        ],
        "query_text": "what is content editable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495669869539265"
          }
        ],
        "query_text": "102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495668854167342"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495668849247735"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495667438011659"
          }
        ],
        "query_text": "div contenteditable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495667326256769"
          }
        ],
        "query_text": "center a div with text inside another div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495666718808368"
          }
        ],
        "query_text": "auto expanding centered text area"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495666356588059"
          }
        ],
        "query_text": "center text horizontally and vertically in div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495666266827700"
          }
        ],
        "query_text": "invisible div that covers another div"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495665844116433"
          }
        ],
        "query_text": "flexbox stretch in both directions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495665027001862"
          }
        ],
        "query_text": "div auto expand html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495664960032439"
          }
        ],
        "query_text": "div auto resize"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495664844178363"
          }
        ],
        "query_text": "div with a smaller div inside a div that resizes -image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495664839976063"
          }
        ],
        "query_text": "div with a smaller div inside it that resizes -image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495664815124982"
          }
        ],
        "query_text": "div with a smaller div inside it that resizes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495664054751321"
          }
        ],
        "query_text": "css set transparency of background color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495663612735139"
          }
        ],
        "query_text": "how to have an html centered in another with padding"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495663436141991"
          }
        ],
        "query_text": "how to set padding html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495663301164999"
          }
        ],
        "query_text": "how to set color of textarea"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495663097714757"
          }
        ],
        "query_text": "css border"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495658337363487"
          }
        ],
        "query_text": "white in hex"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495657756134726"
          }
        ],
        "query_text": "react dblclick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495657700938210"
          }
        ],
        "query_text": "lodash figure out of click is doubleclick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495656657534519"
          }
        ],
        "query_text": "react onDoubleClick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495656610026252"
          }
        ],
        "query_text": "react property for doubleclick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495653894974467"
          }
        ],
        "query_text": "google enable two factor authentication"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495653856458933"
          }
        ],
        "query_text": "what is 2fa?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495651669248804"
          }
        ],
        "query_text": "Cannot read property __reactInternalInstance$gw3197brwrn3ik9 of undefined testutils"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495651582520509"
          }
        ],
        "query_text": "how to stash unstaged changed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495651103315904"
          }
        ],
        "query_text": "how to insert react component"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495649240830993"
          }
        ],
        "query_text": "html what is a tag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495649211684643"
          },
          {
            "timestamp_usec": "1495649234940634"
          }
        ],
        "query_text": "what is a DOM 'tag'?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495648711883619"
          }
        ],
        "query_text": "what is a DOM tag?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495648128021720"
          }
        ],
        "query_text": "default empty react component"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495648000334649"
          }
        ],
        "query_text": "named parameters in javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495647857399630"
          }
        ],
        "query_text": "react add element to to dom on conditional"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495647068412637"
          }
        ],
        "query_text": "git how to stash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495646370542149"
          }
        ],
        "query_text": "how to revert changes in git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495641782573727"
          }
        ],
        "query_text": "pandemonium magic calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495641626888573"
          }
        ],
        "query_text": "boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495641383476639"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495638909776262"
          }
        ],
        "query_text": "what do brackets around meteor jquery selector mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495638902391780"
          }
        ],
        "query_text": "what do brackets around jquery selector mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495638876783659"
          }
        ],
        "query_text": "jquery selection in brackets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495638504473885"
          }
        ],
        "query_text": "google docs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495638216840875"
          }
        ],
        "query_text": "what is the meteor tracker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636912387964"
          }
        ],
        "query_text": "how does chrome source-map work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636792782833"
          }
        ],
        "query_text": "how to debug frontend code"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636284190819"
          }
        ],
        "query_text": "bash setting boolean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636219990554"
          }
        ],
        "query_text": "shell set environment variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636162749844"
          }
        ],
        "query_text": "shell else"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636071519754"
          }
        ],
        "query_text": "shell print something"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636025583694"
          }
        ],
        "query_text": "what does dollar sign mean in shell"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495636006633298"
          }
        ],
        "query_text": "is"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635988152656"
          }
        ],
        "query_text": "shell named arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635959361105"
          }
        ],
        "query_text": "shell how to pass in arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635656684883"
          }
        ],
        "query_text": "slack enable chrome messages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635643653125"
          }
        ],
        "query_text": "slack for ubuntu 14.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635639033552"
          }
        ],
        "query_text": "slack for ubuntu 16.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635327404110"
          }
        ],
        "query_text": "what is kadira"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495635178869244"
          }
        ],
        "query_text": "what is $METEOR _DEBUG"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495634635168225"
          }
        ],
        "query_text": "node set breakpoint"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495634482950697"
          }
        ],
        "query_text": "sublime js how to see all places where a package is imported"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633744176346"
          }
        ],
        "query_text": "how to see calls when a button is pressed on a ui js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633392079405"
          }
        ],
        "query_text": "what does chown do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633078472435"
          }
        ],
        "query_text": ",meteor/meteor is not executable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633052916305"
          }
        ],
        "query_text": "ubuntu .meteor%20exists,%20but%20/.meteor/meteor%20is%20not%20executable."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633035117041"
          }
        ],
        "query_text": "ubuntu home/jspear/.meteor%20exists,%20but%20/home/jspear/.meteor/meteor%20is%20not%20executable."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495633022232738"
          }
        ],
        "query_text": "home/jspear/.meteor%20exists,%20but%20/home/jspear/.meteor/meteor%20is%20not%20 executable."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495632954787842"
          }
        ],
        "query_text": "how to uninstall meteor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495631660873264"
          },
          {
            "timestamp_usec": "1495631660894464"
          },
          {
            "timestamp_usec": "1495631662328782"
          },
          {
            "timestamp_usec": "1495632033566705"
          },
          {
            "timestamp_usec": "1495632033585701"
          },
          {
            "timestamp_usec": "1495632034515495"
          },
          {
            "timestamp_usec": "1495632194430320"
          },
          {
            "timestamp_usec": "1495632295145619"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495631145746607"
          }
        ],
        "query_text": "(Current Location) -> tulip Co"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495594784626090"
          }
        ],
        "query_text": "what is a simmer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495591759128103"
          }
        ],
        "query_text": "how to.shred chicken"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495591552782015"
          }
        ],
        "query_text": "how to make tomato paste"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495591044523568"
          }
        ],
        "query_text": "youtube hiatus kaiyote"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495589421881651"
          }
        ],
        "query_text": "best chicken stock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495588510589776"
          },
          {
            "timestamp_usec": "1495589369753194"
          }
        ],
        "query_text": "(Current Location) -> Star Market, 1065 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495588454129686"
          }
        ],
        "query_text": "(Current Location) -> star market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495588446837499"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495588446021204"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134 -> (Current Location)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495588263364055"
          }
        ],
        "query_text": "substitute for chicken stock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495587534459854"
          }
        ],
        "query_text": "chicken and red lentils"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495585328592086"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495584594606350"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495584594534084"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495582949593033"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495582004533855"
          }
        ],
        "query_text": "youtube meteor js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495581449606319"
          }
        ],
        "query_text": "meteor containers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495581196348178"
          }
        ],
        "query_text": "#616161"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495579075422276"
          }
        ],
        "query_text": "git stash not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495579025150694"
          }
        ],
        "query_text": "git stash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495576906174090"
          }
        ],
        "query_text": "what is node --runInBand"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495576676814862"
          }
        ],
        "query_text": "jest how to set a breakpoint"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495576583714582"
          }
        ],
        "query_text": "chai insert breakpoint"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495575053593881"
          }
        ],
        "query_text": "react test utils documentation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495575039179654"
          }
        ],
        "query_text": "react renderer.isValuePlaceholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495574899734264"
          }
        ],
        "query_text": "is Value Placeholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495573094723251"
          }
        ],
        "query_text": "chai test if an action does nothing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495572853972406"
          }
        ],
        "query_text": "chai check if dom has changed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495572847694297"
          }
        ],
        "query_text": "chai text if dom has changed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495572240773586"
          }
        ],
        "query_text": "linux terminal scroll with mouse wheel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495571830497600"
          }
        ],
        "query_text": "what does git stash do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495571645748034"
          }
        ],
        "query_text": "how to move current changes to a new branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495571635612035"
          }
        ],
        "query_text": "how to move commits from main to a branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495571346375925"
          }
        ],
        "query_text": "git create a branch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495571123342291"
          }
        ],
        "query_text": "TypeError: Cannot read property 'bind' of undefined"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495570220728413"
          }
        ],
        "query_text": "chai-sinon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495570103721800"
          }
        ],
        "query_text": "what is jest.fn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495568162419427"
          }
        ],
        "query_text": "findRenderedDOMComponentWithClass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495567124658652"
          }
        ],
        "query_text": "lodash noop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495567071468993"
          }
        ],
        "query_text": "js what does bind do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495564798236735"
          }
        ],
        "query_text": "what is Template javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495548369536473"
          },
          {
            "timestamp_usec": "1495548612396190"
          },
          {
            "timestamp_usec": "1495549573860235"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495548363685998"
          }
        ],
        "query_text": "Tulip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495548254556066"
          },
          {
            "timestamp_usec": "1495548303539326"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495547972714426"
          }
        ],
        "query_text": "hiatus kaiyote laputa"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495547956207543"
          }
        ],
        "query_text": "hiatus kaiyote miyazaki dream seeker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495547010986721"
          },
          {
            "timestamp_usec": "1495547018132293"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495547009519736"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495508736525550"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495508694278717"
          }
        ],
        "query_text": "life fitness weight plates stack conversion table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495508669018108"
          }
        ],
        "query_text": "selextorize weight plates stack conversion table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495508648005449"
          }
        ],
        "query_text": "selextorize weight plates table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495505330148815"
          },
          {
            "timestamp_usec": "1495505860691309"
          }
        ],
        "query_text": "(Current Location) -> 920 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495505317808532"
          }
        ],
        "query_text": "GymIt Brookline Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495505289433204"
          },
          {
            "timestamp_usec": "1495505292829773"
          },
          {
            "timestamp_usec": "1495505303270584"
          },
          {
            "timestamp_usec": "1495505304264473"
          },
          {
            "timestamp_usec": "1495505309389583"
          },
          {
            "timestamp_usec": "1495505313385077"
          }
        ],
        "query_text": "gyms near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503576085320"
          }
        ],
        "query_text": "(Current Location) -> Boston University Athletic, Commonwealth Avenue, Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503571719148"
          },
          {
            "timestamp_usec": "1495503574736723"
          }
        ],
        "query_text": "Boston University Athletic, Commonwealth Avenue, Boston, MA -> (Current Location)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503563638945"
          }
        ],
        "query_text": "Boston University Athletic, Commonwealth Avenue, Boston, MA -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503551530684"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester Street, Allston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503551400331"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503530152780"
          }
        ],
        "query_text": "(Current Location) -> 50 Union Street, Cambridge, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495503529973202"
          }
        ],
        "query_text": "50 Union St, Cambridge, MA 02141"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495501863990211"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495497403761326"
          }
        ],
        "query_text": "(Current Location) -> 102 Chester St, Allston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495497401388999"
          }
        ],
        "query_text": "102 chester st"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495484511208495"
          }
        ],
        "query_text": "windows how to add a ubuntu partition from unallocated space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495484477724488"
          }
        ],
        "query_text": "windows how to add a ubuntu partition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495475221514648"
          }
        ],
        "query_text": "windows partition shrink has free space but doesn't show any as free"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495474670527242"
          }
        ],
        "query_text": "resize windows partition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495473591136215"
          }
        ],
        "query_text": "ubuntu how to resize windows partitions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495468057655129"
          }
        ],
        "query_text": "how to uninstall steam games"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495467706400217"
          }
        ],
        "query_text": "windows see what's taking up space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495467545140622"
          }
        ],
        "query_text": "latitude es450 ssd slots"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495467228484253"
          }
        ],
        "query_text": "windows easily manage and delete files to free up memory hard drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495467220440032"
          }
        ],
        "query_text": "windows easily manage and delete files to free up memory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495466864774734"
          }
        ],
        "query_text": "windows how to see where memory is being take."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495465606645189"
          }
        ],
        "query_text": "olin it wiki resize partition"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495465328582528"
          }
        ],
        "query_text": "windows how to resize ubuntu partitions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495464128878276"
          }
        ],
        "query_text": "make new ssh key"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495463836741942"
          }
        ],
        "query_text": "slack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495461058496128"
          }
        ],
        "query_text": "natan linder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495461052085282"
          }
        ],
        "query_text": "natan limder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495460965850307"
          }
        ],
        "query_text": "mason glidden"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495460882869457"
          },
          {
            "timestamp_usec": "1495460885959346"
          }
        ],
        "query_text": "tulip co"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495460866707117"
          }
        ],
        "query_text": "ask hn interns what time should you show up to work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495459279242082"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495423015157398"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495423013566107"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495415233304952"
          }
        ],
        "query_text": "swift optional parameters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414991633043"
          }
        ],
        "query_text": "swift how to automatically run unit tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414944495347"
          }
        ],
        "query_text": "xcode test every time you save"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414894882444"
          }
        ],
        "query_text": "xcode automatically run unit test suite"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414654682708"
          }
        ],
        "query_text": "swift fast unit tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414641996995"
          }
        ],
        "query_text": "swift quick unit tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495414042360994"
          }
        ],
        "query_text": "initializer is protected due to internal protection level"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495413896505922"
          }
        ],
        "query_text": "swift not finding code in same package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495413810816529"
          }
        ],
        "query_text": "xctest how to import your code"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495413433248204"
          }
        ],
        "query_text": "swift writing an init method"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495413066474744"
          }
        ],
        "query_text": "way to run xctest without starting up app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412931858360"
          }
        ],
        "query_text": "xctest all test passing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412780067199"
          }
        ],
        "query_text": "how to xctassert work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412737492925"
          }
        ],
        "query_text": "xctassert false not cause tes tto fail"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412609864048"
          }
        ],
        "query_text": "how to use the xcode testing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412391129584"
          }
        ],
        "query_text": "xcode 8 run unit tests"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412256840547"
          }
        ],
        "query_text": "xcode add unit tests to existing project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495412067468068"
          }
        ],
        "query_text": "swift struct not allowing empty initializer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495402379903071"
          }
        ],
        "query_text": "(Current Location) -> 53 Hillside St, Roxbury Crossing, MA 02120"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495402376868960"
          }
        ],
        "query_text": "53 Hillside Street, 02120"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495401171770841"
          }
        ],
        "query_text": "(Current Location) -> 668 Farmington Ave, West Hartford, CT 06119"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495401170424365"
          }
        ],
        "query_text": "668 Farmington Ave, West Hartford, CT 06119"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495401152315778"
          },
          {
            "timestamp_usec": "1495401154976715"
          },
          {
            "timestamp_usec": "1495401156343963"
          }
        ],
        "query_text": "walgreens"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495387164510886"
          }
        ],
        "query_text": "using git with xcode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495386496653723"
          }
        ],
        "query_text": "value type cannot have a stored property that references itself"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495386215292587"
          }
        ],
        "query_text": "swift optional arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495384569763014"
          }
        ],
        "query_text": "view contentmode swift"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495384429741342"
          }
        ],
        "query_text": "xcode set label to certain size"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495383936458890"
          }
        ],
        "query_text": "vmware what is memory swapping"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495383897902986"
          }
        ],
        "query_text": "can i have a vm use all my cores"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495383389554925"
          }
        ],
        "query_text": "how to change the height of a stackview xcode"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495383383187519"
          }
        ],
        "query_text": "how to change the height of a stackview"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495381497920469"
          }
        ],
        "query_text": "swift redux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495381134540374"
          }
        ],
        "query_text": "red burn in standard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495381062787431"
          }
        ],
        "query_text": "lathnu hellion"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495380945515971"
          }
        ],
        "query_text": "red gearhulk"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495380729276654"
          }
        ],
        "query_text": "standard mono red burn 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495380084700836"
          }
        ],
        "query_text": "api way to get mtgo decklists"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495380063732888"
          }
        ],
        "query_text": "wizards mtgo api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495349547813825"
          }
        ],
        "query_text": "glimpse of nature"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495349253059976"
          }
        ],
        "query_text": "greatsable stag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495347004172878"
          }
        ],
        "query_text": "redux for swift"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495346248654831"
          }
        ],
        "query_text": "staywell health care executive compensation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495346131470108"
          }
        ],
        "query_text": "staywell health care nonprofit status"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495346122123663"
          }
        ],
        "query_text": "staywell clinic waterbury ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495343743270176"
          }
        ],
        "query_text": "swift partial functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495342210674916"
          }
        ],
        "query_text": "cs193p youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495342204378399"
          }
        ],
        "query_text": "cs193p"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495335464140474"
          }
        ],
        "query_text": "macOs guest iphone not showing up"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495335340515930"
          }
        ],
        "query_text": "vmware macos guest iphone doesn't show up"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495334378355144"
          }
        ],
        "query_text": "swift ln"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495332417623512"
          }
        ],
        "query_text": "youtube fractal tree strange loop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495329845240358"
          }
        ],
        "query_text": "(Current Location) -> 64 Kingswood Rd, West Hartford, CT 06119"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495329676036197"
          }
        ],
        "query_text": "winter break bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495328393032986"
          },
          {
            "timestamp_usec": "1495328402100571"
          }
        ],
        "query_text": "DSU full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495327321915562"
          }
        ],
        "query_text": "conor ryan bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495326775178654"
          },
          {
            "timestamp_usec": "1495326778952881"
          }
        ],
        "query_text": "grace pailry"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495325277197031"
          }
        ],
        "query_text": "wish you were here tab"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495320872977771"
          }
        ],
        "query_text": "how to cook salmon on the stove"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495320784916320"
          }
        ],
        "query_text": "how to cook salmon on the grill"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495316123461680"
          }
        ],
        "query_text": "my bee gardenfull album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495316110336264"
          }
        ],
        "query_text": "bee garden"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495312174098921"
          },
          {
            "timestamp_usec": "1495312645366817"
          },
          {
            "timestamp_usec": "1495312652315964"
          },
          {
            "timestamp_usec": "1495312692222295"
          }
        ],
        "query_text": "(Current Location) -> 62 Farmington Ave, Farmington, CT 06032"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495312163890795"
          }
        ],
        "query_text": "central wheel west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495310698168980"
          }
        ],
        "query_text": "west hartford bike shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495310685026736"
          },
          {
            "timestamp_usec": "1495310690123571"
          }
        ],
        "query_text": "hartford bike shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495310118507524"
          }
        ],
        "query_text": "xcode make button text superscript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495310095290045"
          }
        ],
        "query_text": "swift make button text superscript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495309568252929"
          }
        ],
        "query_text": "xcode how to delete a stackview"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495309114587079"
          }
        ],
        "query_text": "swift how to add external project from github to xcode app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495309093410008"
          }
        ],
        "query_text": "swift how to add project from github to xcode app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495308954682981"
          }
        ],
        "query_text": "swift add tooltip small textbox"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495308901233370"
          }
        ],
        "query_text": "xcode add tooltip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495308700145716"
          }
        ],
        "query_text": "swift curveeaseout"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495308581935611"
          }
        ],
        "query_text": "swift animate with curveEaseIn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495308071807838"
          }
        ],
        "query_text": "swift fade to color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495307626768628"
          }
        ],
        "query_text": "xcode change name of outlet functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495307577581462"
          }
        ],
        "query_text": "xcode change appearance of button from controller"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495307409105075"
          }
        ],
        "query_text": "swift make button flash to a certain color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495307383735457"
          }
        ],
        "query_text": "swift make button flash a certain color"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495305864640200"
          }
        ],
        "query_text": "swift convert string to character"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495304650972857"
          }
        ],
        "query_text": "melody's echo chamber bee"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495303903216607"
          }
        ],
        "query_text": "litchfield high school"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495303169217243"
          }
        ],
        "query_text": "melody's echo chamber Is That What You Said"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495301137632674"
          }
        ],
        "query_text": "holy ship 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495268260030183"
          }
        ],
        "query_text": "what is the difference between a sea and a lake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495268213723584"
          },
          {
            "timestamp_usec": "1495268220192830"
          }
        ],
        "query_text": "the caspian sea"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495268001669642"
          }
        ],
        "query_text": "what is the AKC"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495267996395653"
          }
        ],
        "query_text": "what is the AKH"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495259680912638"
          }
        ],
        "query_text": "swift use of unresolved identifier"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495258214762303"
          }
        ],
        "query_text": "swift double question mark operator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495258203293820"
          }
        ],
        "query_text": "swift ?? operation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495256727550450"
          }
        ],
        "query_text": "swift how to use lldb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495255851624434"
          }
        ],
        "query_text": "swift not"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495252158590651"
          }
        ],
        "query_text": "swift unlink button action"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495252076303599"
          }
        ],
        "query_text": "mac os how to insert pi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495248851117725"
          }
        ],
        "query_text": "oil change findlay"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495238411706312"
          }
        ],
        "query_text": "pink floyd wish you were here full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495232197000055"
          },
          {
            "timestamp_usec": "1495232207768331"
          },
          {
            "timestamp_usec": "1495232845108849"
          },
          {
            "timestamp_usec": "1495234098662836"
          }
        ],
        "query_text": "(Current Location) -> The Home Depot, 503 New Park Ave, West Hartford, CT 06110"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495232187016128"
          }
        ],
        "query_text": "hardware store"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495229770254160"
          },
          {
            "timestamp_usec": "1495229770328702"
          },
          {
            "timestamp_usec": "1495229771392325"
          }
        ],
        "query_text": "(Current Location) -> 982 Farmington Ave, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495229758180751"
          }
        ],
        "query_text": "Larsen Ace Hardware West Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495229751175485"
          },
          {
            "timestamp_usec": "1495229754452989"
          }
        ],
        "query_text": "hardware store near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227525779796"
          }
        ],
        "query_text": "where to find cheap rollerblade wheels maker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227509482252"
          }
        ],
        "query_text": "where to find cheap rollerblade wheels"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227406179827"
          }
        ],
        "query_text": "West Hartford Recycling Center West Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227398931993"
          }
        ],
        "query_text": "town dump west hartford ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227370439464"
          },
          {
            "timestamp_usec": "1495227373254300"
          },
          {
            "timestamp_usec": "1495227376232948"
          },
          {
            "timestamp_usec": "1495227382154231"
          }
        ],
        "query_text": "junkyard west hartford ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227353515804"
          }
        ],
        "query_text": "junk yard roller blade wheels"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495227289404384"
          }
        ],
        "query_text": "where to get roller blade wheels"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495222113344551"
          },
          {
            "timestamp_usec": "1495222126394415"
          }
        ],
        "query_text": "how to remove a rivet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495221721477466"
          }
        ],
        "query_text": "how to take the wheels off a suitcase"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495220847176455"
          }
        ],
        "query_text": "how to install mac os sierra using vmware player"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495220464130078"
          }
        ],
        "query_text": "what is the latest mac os"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495220419348192"
          }
        ],
        "query_text": "xcode 7 view as iphone5"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495219719190132"
          }
        ],
        "query_text": "1 introduction to xcode 8 and swift 3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495216751228609"
          }
        ],
        "query_text": "swift using protocol in function type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495216728242531"
          }
        ],
        "query_text": "does swift have typelasses"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212955891289"
          }
        ],
        "query_text": "olin it wiki h drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212646568646"
          }
        ],
        "query_text": "olin it wiki connect to your H drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212561466000"
          }
        ],
        "query_text": "olin it wiki connect from off campus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212431239787"
          }
        ],
        "query_text": "google drive 1000 gb plan"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212168903743"
          }
        ],
        "query_text": "ask hn what do you use to backup windows"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495212018192377"
          }
        ],
        "query_text": "ask hn what do you use to backup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495178339148174"
          }
        ],
        "query_text": "beach house full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495178322774607"
          }
        ],
        "query_text": "beach blues full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495177579432898"
          }
        ],
        "query_text": "wikipedia memento"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495170809590772"
          }
        ],
        "query_text": "momento"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495168798721971"
          }
        ],
        "query_text": "shannade o'connor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495162781589592"
          }
        ],
        "query_text": "deadpool"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495155965185032"
          }
        ],
        "query_text": "what is a closed vector field"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495155095205759"
          }
        ],
        "query_text": "how is pog played"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495154113051385"
          }
        ],
        "query_text": "gym"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495141307991808"
          }
        ],
        "query_text": "22 twos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495131710722296"
          },
          {
            "timestamp_usec": "1495131892286332"
          }
        ],
        "query_text": "My Bee's Garden"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495131562860617"
          }
        ],
        "query_text": "melody's echo chamber"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495131042065374"
          }
        ],
        "query_text": "vmware eating hard drive memory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495126942592210"
          }
        ],
        "query_text": "what does exalted do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495125455744606"
          }
        ],
        "query_text": "why is tron called tron"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495125388569471"
          },
          {
            "timestamp_usec": "1495125447684162"
          }
        ],
        "query_text": "what is eldrazi tron"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495125293989389"
          }
        ],
        "query_text": "what does exalted do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495124287870383"
          }
        ],
        "query_text": "what is the hoover institute"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495123315565998"
          }
        ],
        "query_text": "vmware eating hard drive memory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495120982555179"
          }
        ],
        "query_text": "(Current Location) -> Santander Bank ATM, 38 Isham Rd, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495093501046482"
          }
        ],
        "query_text": "beach house full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495089909097140"
          }
        ],
        "query_text": "craigslist hartford ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495087360095894"
          },
          {
            "timestamp_usec": "1495087373786704"
          }
        ],
        "query_text": "The operation on the file \"C:\\Users\\jspear\\MacOS\\OS_X_10.11\\OS X 10.11 El Capitan Retail by TechReviews\\OS X 10.11 El Capitan Retail.vmdk\" failed (There is not enough space on the disk)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495086755632334"
          }
        ],
        "query_text": "debussy youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495086429438199"
          }
        ],
        "query_text": "download el capitan mac vmware"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495078849561039"
          }
        ],
        "query_text": "wikigain install mac capitan vmware tools"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495078145614904"
          }
        ],
        "query_text": "vmware what is guest os"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495078116162124"
          }
        ],
        "query_text": "do.i install vmware tools on host or guest"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495077837901521"
          }
        ],
        "query_text": "what does ware tools do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495077684598886"
          }
        ],
        "query_text": "where did vmware tools install macos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495077669254160"
          }
        ],
        "query_text": "where did vmware tools install to"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495077083922771"
          }
        ],
        "query_text": "how to make vmware less laggy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495076592274698"
          }
        ],
        "query_text": "install VMWare tools"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495076531658359"
          }
        ],
        "query_text": "vmware player mac os change screen resolution"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495076157005810"
          }
        ],
        "query_text": "vmware player macos on pc make screen bigge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495075945291392"
          }
        ],
        "query_text": "vmware player os on pc make screen bigger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495075217972657"
          }
        ],
        "query_text": "vim navigate to end of file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495074961510083"
          },
          {
            "timestamp_usec": "1495074963587293"
          }
        ],
        "query_text": "bash display last line of file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495074840192183"
          }
        ],
        "query_text": "fire waterbury ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495074773002856"
          }
        ],
        "query_text": "append something onto the end of file bash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495074461480113"
          }
        ],
        "query_text": "(Current Location) -> Santander Bank ATM, 38 Isham Rd, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495071415530778"
          }
        ],
        "query_text": "(Current Location) -> Santander Bank ATM, 38 Isham Rd, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495071403957960"
          }
        ],
        "query_text": "santander bank atm west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495071287956803"
          },
          {
            "timestamp_usec": "1495071312996179"
          }
        ],
        "query_text": "nearest atm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495061605581416"
          }
        ],
        "query_text": "how to install mac os using vmware player"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495061500336844"
          }
        ],
        "query_text": "can i trust /techsviewer.com"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495061265070253"
          }
        ],
        "query_text": "VMWare player"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495058464621161"
          }
        ],
        "query_text": "stanford CS139p"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495058079939829"
          }
        ],
        "query_text": "how to use mac os on vmware"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495058030135393"
          }
        ],
        "query_text": "is VM workstation better on pc or linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495058000280092"
          }
        ],
        "query_text": "vm better in linux or pc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057764407073"
          }
        ],
        "query_text": "hacker news app development for windows"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057726270453"
          }
        ],
        "query_text": "xcode on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057712304301"
          }
        ],
        "query_text": "xcode on pc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057621951955"
          }
        ],
        "query_text": "ask hn app development iphone vs android"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057545978933"
          }
        ],
        "query_text": "can i run virtual mac os for free"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057515653062"
          }
        ],
        "query_text": "xcode on linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057451681168"
          }
        ],
        "query_text": "xcode alternatives"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057378907394"
          }
        ],
        "query_text": "ask hn xcode on pc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057319336289"
          }
        ],
        "query_text": "is xcode only available for mac"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495057295366248"
          }
        ],
        "query_text": "xcode for ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495052813871750"
          },
          {
            "timestamp_usec": "1495052886446562"
          },
          {
            "timestamp_usec": "1495052895992925"
          }
        ],
        "query_text": "Stanford CS139p lectures"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495052573688110"
          }
        ],
        "query_text": "ask hn favorite ios development tutorial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495052485135999"
          }
        ],
        "query_text": "app that tells you how much you liked something.at a restaraunt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051835042886"
          }
        ],
        "query_text": "palantir email blog contact me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051778184624"
          }
        ],
        "query_text": "@palantir email me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051768421551"
          }
        ],
        "query_text": "@palantir.com"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051709090297"
          }
        ],
        "query_text": "mike@palantir"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051661607596"
          }
        ],
        "query_text": "palantir contact us"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495051225840591"
          }
        ],
        "query_text": "peter thiel fellowship"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495049539300473"
          },
          {
            "timestamp_usec": "1495049545866829"
          }
        ],
        "query_text": "midas west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495045609024466"
          }
        ],
        "query_text": "Wheeler Regional Family YMCA, 149 Farmington Ave, Plainville, CT 06062"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495042431011068"
          }
        ],
        "query_text": "mtg standard pro tour"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495039676438677"
          }
        ],
        "query_text": "mtg best draft simulator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1495037810604120"
          }
        ],
        "query_text": "alex g hollow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494989825216971"
          }
        ],
        "query_text": "ghost in the shell"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494988674219570"
          }
        ],
        "query_text": "reddit askhistory divergence of american and british accent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494982753681032"
          }
        ],
        "query_text": "reddit askhistory when did we stop having british accents"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494973411368040"
          }
        ],
        "query_text": "rimworld can't get colonist to do research"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494970394100670"
          }
        ],
        "query_text": "rimworld wiki soil"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494970332476465"
          }
        ],
        "query_text": "rimworld rich soil"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494970290995181"
          }
        ],
        "query_text": "rimworld how to tell how fertile soil is"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494963213508588"
          }
        ],
        "query_text": "web"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494962054889174"
          }
        ],
        "query_text": "rimworld what is purpose of vent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494962022944619"
          }
        ],
        "query_text": "rimworld what does vent do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494961391401864"
          }
        ],
        "query_text": "rimworld who does the music"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494961262312684"
          }
        ],
        "query_text": "rimworld yayo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494960618492725"
          }
        ],
        "query_text": "John Blitzkriegsler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494959309695940"
          }
        ],
        "query_text": "rimworld most popular mods"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494959070601670"
          }
        ],
        "query_text": "rimworld what does ding sound mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494959063591234"
          }
        ],
        "query_text": "rimworld what does ding mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494956632655848"
          }
        ],
        "query_text": "rimworld fine meal vs simple meal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494951993211480"
          },
          {
            "timestamp_usec": "1494952023245926"
          }
        ],
        "query_text": "johnny depp playing guitar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494918905860476"
          }
        ],
        "query_text": "rimworld how to make art"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494913588667602"
          }
        ],
        "query_text": "where to place furniture rimworld"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494913582772038"
          }
        ],
        "query_text": "where to place furniture arcworld"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494912683047098"
          }
        ],
        "query_text": "how to milk a muffalo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494912644279747"
          }
        ],
        "query_text": "how do i milk a muffalo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494911422045268"
          }
        ],
        "query_text": "how to build the hi tech research bench"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494911175851203"
          }
        ],
        "query_text": "rimworld research bench"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494910988920559"
          }
        ],
        "query_text": "can't force colonist to tame thrumbo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494910943491157"
          }
        ],
        "query_text": "can't force colonist to tame animal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494910745163604"
          }
        ],
        "query_text": "rimworld can't force someone to tame animal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494909486729211"
          }
        ],
        "query_text": "rimworld wiki cloth"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494906442832381"
          }
        ],
        "query_text": "rimworld see what colonists think of room"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494906163114545"
          }
        ],
        "query_text": "rimworld randomly started beeping"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494904488652449"
          }
        ],
        "query_text": "rimworld target temperature for meat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494904362381329"
          }
        ],
        "query_text": "rimworld how to see temperature in a room"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494903782393516"
          }
        ],
        "query_text": "youtube power conduits rimworld"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494903774520729"
          }
        ],
        "query_text": "youtube power conduits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494903705885791"
          }
        ],
        "query_text": "rimworld power conduit guide"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494900909103223"
          }
        ],
        "query_text": "how do power lines work in rimworld"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494900097574019"
          }
        ],
        "query_text": "rimworld how to expand storage area"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494896832100372"
          }
        ],
        "query_text": "rimworld what kind of action is butchering"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494890841080984"
          }
        ],
        "query_text": "rimworld single colonist how to get treatment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494890305501980"
          }
        ],
        "query_text": "rimworld why does my person cut stuff down rather than hauling it"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494889216204255"
          }
        ],
        "query_text": "rimworld why is my guy wandering"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494885230547440"
          }
        ],
        "query_text": "rimworld how to bring corpse to butcher table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494878246957750"
          }
        ],
        "query_text": "can i trust pirate bay vip's"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494878184619321"
          }
        ],
        "query_text": "thepiratebay"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494877983433301"
          }
        ],
        "query_text": "venmo transfer to paypal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494877930136380"
          }
        ],
        "query_text": "trade amazon gift card for paypal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494875080336479"
          }
        ],
        "query_text": "vittoria rubino tire amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494874961142284"
          }
        ],
        "query_text": "continental ultrasport2"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873808743585"
          }
        ],
        "query_text": "(Current Location) -> Central Wheel, 62 Farmington Ave, Farmington, CT 06032"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873791638476"
          }
        ],
        "query_text": "(Current Location) -> bike shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873770876264"
          }
        ],
        "query_text": "(Current Location) -> 1030 Main St, Newington, CT 06111"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873760384491"
          }
        ],
        "query_text": "newington bike shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873392824816"
          }
        ],
        "query_text": "(Current Location) -> Modern Tire & Auto Service, Raymond Road, West Hartford, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873392529575"
          }
        ],
        "query_text": "Modern Tire & Auto Service, 7 Raymond Rd, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873333095425"
          }
        ],
        "query_text": "(Current Location) -> Modern Tire & Auto Service, 7 Raymond Rd, West Hartford, CT 06107"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494873189369811"
          }
        ],
        "query_text": "auto repair"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494872699616103"
          },
          {
            "timestamp_usec": "1494872705681833"
          },
          {
            "timestamp_usec": "1494872707006486"
          }
        ],
        "query_text": "auto repair west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494872544477479"
          }
        ],
        "query_text": "add bank account steam"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494872322450215"
          },
          {
            "timestamp_usec": "1494872329756935"
          }
        ],
        "query_text": "bike shop newington ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494871986585880"
          }
        ],
        "query_text": "dashboard phone holder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494871816523187"
          },
          {
            "timestamp_usec": "1494871819679769"
          }
        ],
        "query_text": "bike shop west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494869575622021"
          }
        ],
        "query_text": "mint link account with routing and account number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494868876040468"
          }
        ],
        "query_text": "reading a check for routing number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494868641188797"
          }
        ],
        "query_text": "ynab how to use direct import"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494868599052903"
          }
        ],
        "query_text": "connect ynab to bank"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494868577431080"
          }
        ],
        "query_text": "budgeting app that syncs with bank account"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494868561336087"
          }
        ],
        "query_text": "budgeting program that hooks up directly to bank account"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867925730557"
          }
        ],
        "query_text": "how much do you spend on groceries a month"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867647417714"
          }
        ],
        "query_text": "best budgeting app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867348931283"
          },
          {
            "timestamp_usec": "1494867587773634"
          }
        ],
        "query_text": "best money management app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867262127401"
          }
        ],
        "query_text": "webster online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867198764900"
          }
        ],
        "query_text": "how long is a routing number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867180610009"
          }
        ],
        "query_text": "is the 01 part of my routing number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494867077597003"
          }
        ],
        "query_text": "apple keychain"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866903689589"
          }
        ],
        "query_text": "how long does it take for a simple bank application to be accepted"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866899133520"
          }
        ],
        "query_text": "how long does it take for a simple application to be accepted"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866868436569"
          }
        ],
        "query_text": "how does simple application work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866702057846"
          }
        ],
        "query_text": "simple"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866409778010"
          }
        ],
        "query_text": "how is the ally bank app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866369697895"
          }
        ],
        "query_text": "ally bank debit card"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866266889717"
          }
        ],
        "query_text": "capital one 360 experiences?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866197695835"
          }
        ],
        "query_text": "capital one 360 atm locations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494866164295705"
          }
        ],
        "query_text": "capital one 360 app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494865818351971"
          }
        ],
        "query_text": "capital one 360.app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494865463305302"
          }
        ],
        "query_text": "bank with a good app and no fees"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494865419547406"
          }
        ],
        "query_text": "ask hn what bank do you use"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494862906753215"
          }
        ],
        "query_text": "rimworld demo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494862090037876"
          },
          {
            "timestamp_usec": "1494862093886395"
          }
        ],
        "query_text": "irs phone number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494858403858529"
          }
        ],
        "query_text": "the witcher polish version"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494827480652110"
          }
        ],
        "query_text": "christina hendricks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494823724595088"
          },
          {
            "timestamp_usec": "1494823727363078"
          }
        ],
        "query_text": "morty short shorts animatic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494823715680484"
          }
        ],
        "query_text": "morty short shorts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494821435371978"
          }
        ],
        "query_text": "accounting justin roiland"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494821424068581"
          }
        ],
        "query_text": "accounting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494818727591020"
          }
        ],
        "query_text": "blitzkriegsler interview"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494813272302280"
          }
        ],
        "query_text": "felix animation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494807854396469"
          }
        ],
        "query_text": "animal collective tour"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494803929454643"
          }
        ],
        "query_text": "(Current Location) -> The Space, 295 Treadwell St, Hamden, CT 06514"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494803917583076"
          }
        ],
        "query_text": "the space"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494801916145471"
          }
        ],
        "query_text": "Hamden, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494801770483167"
          },
          {
            "timestamp_usec": "1494801773519179"
          }
        ],
        "query_text": "the space ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494796025777417"
          }
        ],
        "query_text": "pond full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494790752676967"
          }
        ],
        "query_text": "felix colgrave"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494730256966895"
          }
        ],
        "query_text": "rimworld"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494728372728383"
          }
        ],
        "query_text": "twitch mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494720885956745"
          }
        ],
        "query_text": "twitch mtg stream"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494719397709859"
          }
        ],
        "query_text": "craigslist sublist boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494714947231436"
          }
        ],
        "query_text": "your friendly neighborhood table west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494714922635198"
          },
          {
            "timestamp_usec": "1494714926030953"
          }
        ],
        "query_text": "your friendly neighborhood tavern west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494714912730278"
          }
        ],
        "query_text": "your friendly neighborhood tavern"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494714153101637"
          }
        ],
        "query_text": "mtg drafts near west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494711913100641"
          }
        ],
        "query_text": "mexican hole in the wall west hartford"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494694879108052"
          },
          {
            "timestamp_usec": "1494694886384917"
          }
        ],
        "query_text": "luis scott vargas"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494647783264462"
          }
        ],
        "query_text": "do stupid people have more kids than smart people"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494646974416020"
          }
        ],
        "query_text": "watch idiocracy online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494635357702925"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494633236493605"
          }
        ],
        "query_text": "when is celtics final game"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494630569243901"
          }
        ],
        "query_text": "why are emr so bad"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494628765769008"
          }
        ],
        "query_text": "time machine hobby"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494628704914709"
          }
        ],
        "query_text": "magic the gathering hartford ct"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494628624409320"
          },
          {
            "timestamp_usec": "1494628630150064"
          }
        ],
        "query_text": "alejandro escovedo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494628610546531"
          },
          {
            "timestamp_usec": "1494628616320596"
          },
          {
            "timestamp_usec": "1494628619083358"
          }
        ],
        "query_text": "alejandro escavara"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494627444599144"
          }
        ],
        "query_text": "reddit benching hurting back"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494626731983494"
          }
        ],
        "query_text": "house of leaves"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494626248597408"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494624211514168"
          }
        ],
        "query_text": "how much was 40,00 in 1950 worth today"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494623358135270"
          }
        ],
        "query_text": "watch psycho online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494622111570669"
          }
        ],
        "query_text": "best hitchcock films"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494621811297746"
          }
        ],
        "query_text": "Moss, Senna, Fangio, Ascari."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494617399607410"
          }
        ],
        "query_text": "phd comics"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494616366707828"
          }
        ],
        "query_text": "Jordan ball fakes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494616070683432"
          }
        ],
        "query_text": "tmac 35 seconds"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494613406167622"
          }
        ],
        "query_text": "how to tell if pimple or tick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494612342307397"
          }
        ],
        "query_text": "standard b/g turbofog"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494558287226284"
          }
        ],
        "query_text": "heath ledger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494556905171031"
          },
          {
            "timestamp_usec": "1494556919936591"
          }
        ],
        "query_text": "what are the 95 theses"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494529900485493"
          }
        ],
        "query_text": "mind rot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494520758193286"
          }
        ],
        "query_text": "slipknot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494518841075629"
          }
        ],
        "query_text": "jim morrison"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494517245070760"
          }
        ],
        "query_text": "john coltrane"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494516799357224"
          }
        ],
        "query_text": "hiroshi yoshimura wikipedia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494516738260428"
          }
        ],
        "query_text": "hiroshi yoshimura"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494516100519429"
          }
        ],
        "query_text": "Clever Girl--No Drum and Bass in the Jazz Room"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494516008423853"
          }
        ],
        "query_text": "clever girl"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494515659934718"
          }
        ],
        "query_text": "paypal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494515654970105"
          }
        ],
        "query_text": "pay"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445656095093"
          }
        ],
        "query_text": "jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445495377522"
          }
        ],
        "query_text": "how to add window keys to global jsdom createElement"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445481508037"
          }
        ],
        "query_text": "how to add window keys to global jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445430039895"
          }
        ],
        "query_text": "document.createElement is not a function jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445424849178"
          }
        ],
        "query_text": "document.createElement is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445112640666"
          }
        ],
        "query_text": "jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445092275931"
          }
        ],
        "query_text": "jsdom.jsdom is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445088562598"
          }
        ],
        "query_text": "jsdom.jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445020491842"
          }
        ],
        "query_text": "_jsdom2.default.jsdom is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494445016581012"
          }
        ],
        "query_text": "_jsdom2.default.jsdom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494444353027178"
          }
        ],
        "query_text": "what port is webpack using"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494444335411051"
          }
        ],
        "query_text": "localhost:"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494443823679713"
          }
        ],
        "query_text": "webpack.validateSchema is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494443669623466"
          }
        ],
        "query_text": "invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema. - configuration.resolve.extensions[0] should not be empty."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494443365479237"
          }
        ],
        "query_text": "what is a jsx file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494443240095390"
          }
        ],
        "query_text": "what is react hotloader"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494441322682640"
          }
        ],
        "query_text": "dispatch.bind"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494441292806030"
          }
        ],
        "query_text": "store.dispatch.bind(store)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494440902212823"
          }
        ],
        "query_text": "socket io server.emit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494439643180509"
          }
        ],
        "query_text": "git commit message examples"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494439610121544"
          }
        ],
        "query_text": "js difference between imports with braces and those without"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494439271722826"
          }
        ],
        "query_text": "will git clone overwrite"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494439239296147"
          }
        ],
        "query_text": "how to clone a repository from github"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494438146858535"
          }
        ],
        "query_text": "sublimetext2 go to end of line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494438016769079"
          }
        ],
        "query_text": "sublimetext2 snippet tab jumps to end"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437952944410"
          }
        ],
        "query_text": "sublimetext2 snippet strange tab behavior"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437718864331"
          }
        ],
        "query_text": "sublimetext2 snippet tab after initial tab"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437583301991"
          }
        ],
        "query_text": "sublimetext2 snippets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437525378225"
          }
        ],
        "query_text": "sublime sublimetext2 snippet tab not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437519630238"
          }
        ],
        "query_text": "sublime snippet tab not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494437383234341"
          }
        ],
        "query_text": "subl snippet captures tab"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494436699774815"
          }
        ],
        "query_text": "subl snippet changes tab autocomplete behavior"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494436270396370"
          }
        ],
        "query_text": "delete All is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494434283221149"
          }
        ],
        "query_text": "javascript dict interpreting name as value"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494434269709181"
          }
        ],
        "query_text": "javascript get value of name rather than name"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494434260979915"
          }
        ],
        "query_text": "javascript get value of variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494434248362346"
          }
        ],
        "query_text": "javascript create map get value of variable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494433680956074"
          }
        ],
        "query_text": "ecmascript6 logical expressions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494433662267060"
          },
          {
            "timestamp_usec": "1494433671837232"
          }
        ],
        "query_text": "ecmascript6 not"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494433011254969"
          }
        ],
        "query_text": "javascript not"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494432846533688"
          }
        ],
        "query_text": "immutable api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494432023578096"
          }
        ],
        "query_text": "sublime snippet scope wildcard"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494432019782057"
          }
        ],
        "query_text": "sublime snippet scope"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431492325285"
          }
        ],
        "query_text": "sublime code snippet generator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431469453614"
          }
        ],
        "query_text": "sublime code macros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431262365312"
          }
        ],
        "query_text": "immutable api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431255454598"
          }
        ],
        "query_text": "js take list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431240016683"
          }
        ],
        "query_text": "immutable skip api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431232432646"
          }
        ],
        "query_text": "immutable take api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431225895755"
          }
        ],
        "query_text": "immutable take"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494431208701530"
          }
        ],
        "query_text": "immutable.take"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494430842038877"
          }
        ],
        "query_text": "subl automatically add semicolons to js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494430401167442"
          }
        ],
        "query_text": "what does npm run test -- --watch do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494430355738413"
          }
        ],
        "query_text": "npm what does test:watch do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429996475836"
          }
        ],
        "query_text": "npm difference between --save and --save-dev"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429857121884"
          }
        ],
        "query_text": "should I use virtualenv with node packages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429678474277"
          }
        ],
        "query_text": "what is a CLI"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429665799403"
          }
        ],
        "query_text": "what is babel core"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429502056448"
          }
        ],
        "query_text": "what does npm install -y do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429171211782"
          }
        ],
        "query_text": "favorite react tutorial hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494429164464828"
          }
        ],
        "query_text": "favorite react tutorial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494389848809002"
          },
          {
            "timestamp_usec": "1494389855740196"
          }
        ],
        "query_text": "christian bale weight"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494385837182319"
          }
        ],
        "query_text": "ok"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494384213240839"
          }
        ],
        "query_text": "your protector.chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494383991224985"
          }
        ],
        "query_text": "fleet foxes chords white winter hymnal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494383976302653"
          }
        ],
        "query_text": "fleet foxes chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494383405703137"
          }
        ],
        "query_text": "baby got back"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494382579945893"
          }
        ],
        "query_text": "bitches aint shit chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494381142292748"
          }
        ],
        "query_text": "viva la vida chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494364688442418"
          }
        ],
        "query_text": "(Current Location) -> U-Haul Neighborhood Dealer, 67 E Central St, Natick, MA 01760"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494364687368477"
          }
        ],
        "query_text": "U-Haul Neighborhood Dealer, 67 E Central St, Natick, MA 01760"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494352448410257"
          }
        ],
        "query_text": "Lexington, Massachusetts -> u haul"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494352398640315"
          }
        ],
        "query_text": "Lexington Mass -> U-Haul Neighborhood Dealer, 38 Ramsdell St, Newton, MA 02461"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494352364449916"
          },
          {
            "timestamp_usec": "1494352367913764"
          }
        ],
        "query_text": "Framingham, MA -> U-Haul Neighborhood Dealer, 38 Ramsdell St, Newton, MA 02461"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494352329079665"
          },
          {
            "timestamp_usec": "1494352350818035"
          }
        ],
        "query_text": "uhaul"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494352298099978"
          },
          {
            "timestamp_usec": "1494352300480815"
          }
        ],
        "query_text": "u haul near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494349674425217"
          }
        ],
        "query_text": "ask hn beet react redux.videos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494349169066013"
          }
        ],
        "query_text": "hacker news elm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494348554824802"
          }
        ],
        "query_text": "what is jwt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494348502791269"
          }
        ],
        "query_text": "words with sweet in them"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494348098983028"
          }
        ],
        "query_text": "phrases sweet in it"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494347225322168"
          }
        ],
        "query_text": "rhymes with suite"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494282194512666"
          }
        ],
        "query_text": "bow shuttle schedule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494265348040861"
          }
        ],
        "query_text": "Boston University Fitness and Recreation Center Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494263423056823"
          },
          {
            "timestamp_usec": "1494263435741154"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134 -> Tulip, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494263400007661"
          }
        ],
        "query_text": "102 Chester St, Allston, MA 02134 -> 915 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494263396124240"
          }
        ],
        "query_text": "102 Chester Street, Boston, MA -> 915 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494263374520913"
          }
        ],
        "query_text": "(Current Location) -> 915 Commonwealth Avenue, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494263324090223"
          }
        ],
        "query_text": "bu athletic center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494261751577290"
          }
        ],
        "query_text": "what is jwt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494260478836448"
          },
          {
            "timestamp_usec": "1494260566259632"
          },
          {
            "timestamp_usec": "1494260574335139"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494260464324116"
          }
        ],
        "query_text": "tulip sommerville"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494201598764465"
          }
        ],
        "query_text": "forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494198430781861"
          },
          {
            "timestamp_usec": "1494198486712424"
          }
        ],
        "query_text": "Tulip, Somerville, MA -> 107 Calumet Street, Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494198210788794"
          }
        ],
        "query_text": "Tulip, Somerville, MA -> Washington Street, Boston, MA 02135"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494198200763504"
          }
        ],
        "query_text": "washington t stop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494198189291415"
          }
        ],
        "query_text": "Tulip, Somerville, MA -> washington t stop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494195678937825"
          }
        ],
        "query_text": "craigslist summer housing boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494188192835964"
          }
        ],
        "query_text": "U-Haul of Natick Natick, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494188183721451"
          }
        ],
        "query_text": "uhaul truck rental"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494188091084621"
          },
          {
            "timestamp_usec": "1494188094074734"
          }
        ],
        "query_text": "rent a moving truck"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494185122878509"
          },
          {
            "timestamp_usec": "1494185131887533"
          },
          {
            "timestamp_usec": "1494185150519223"
          },
          {
            "timestamp_usec": "1494185152697850"
          }
        ],
        "query_text": "Tulip, Somerville, MA -> 155 Bay State Rd, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494185112003756"
          }
        ],
        "query_text": "(Current Location) -> 155 Bay State Rd, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494185110543550"
          }
        ],
        "query_text": "155 Bay State Rd, Boston, MA 02215"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494185078700704"
          }
        ],
        "query_text": "aepi summer housing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494180109648338"
          }
        ],
        "query_text": "react return with parentheses"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494179817843094"
          }
        ],
        "query_text": "react @connect"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494179779286481"
          }
        ],
        "query_text": "react what does decorator do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494178826195971"
          }
        ],
        "query_text": "js export default class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494177364677690"
          }
        ],
        "query_text": "python iter example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494177230109414"
          }
        ],
        "query_text": "what is a sentinel value loop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494138959201390"
          }
        ],
        "query_text": "xkcd"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494138250791152"
          }
        ],
        "query_text": "olin 2017 calendar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494118055689619"
          }
        ],
        "query_text": "jacob collier you and i"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494118034677588"
          }
        ],
        "query_text": "jacob collier grammy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494117690821429"
          }
        ],
        "query_text": "pure seduction victoria's secret"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494117549183675"
          }
        ],
        "query_text": "captain fantastic"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494117459324125"
          }
        ],
        "query_text": "how to make ethernet work computer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494117384852532"
          }
        ],
        "query_text": "windows detect if connected to ethernet command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494117373613049"
          }
        ],
        "query_text": "windows detect if connected to ethernet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494115093805208"
          },
          {
            "timestamp_usec": "1494115097238319"
          }
        ],
        "query_text": "siggraph 2016"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494094764209456"
          }
        ],
        "query_text": "title fight secret society"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494091914450423"
          }
        ],
        "query_text": "ecmascript constant functions"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494091566845376"
          }
        ],
        "query_text": "ecmascript define function as const"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494091124271033"
          }
        ],
        "query_text": "build a redux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090611748321"
          }
        ],
        "query_text": "craigslist musicians"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090599407691"
          }
        ],
        "query_text": "private parking lots boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090592931997"
          }
        ],
        "query_text": "private parking lots who owns"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090580523281"
          }
        ],
        "query_text": "who owns parking lots in boston?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090040487031"
          },
          {
            "timestamp_usec": "1494090085364054"
          }
        ],
        "query_text": "parking garage license plate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090037087824"
          }
        ],
        "query_text": "parking garage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090032998639"
          }
        ],
        "query_text": "driving"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494090022152421"
          }
        ],
        "query_text": "car"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089840296346"
          },
          {
            "timestamp_usec": "1494089846058668"
          }
        ],
        "query_text": "do all cars have license plates"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089776128891"
          }
        ],
        "query_text": "license plate detection opencv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089618661622"
          }
        ],
        "query_text": "why does backscattering happen -email"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089610585553"
          }
        ],
        "query_text": "why does backscattering happen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089285833793"
          }
        ],
        "query_text": "backscatter antenna polarization"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089273979443"
          }
        ],
        "query_text": "backscatter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494089051105892"
          }
        ],
        "query_text": "manchester encoding"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494088920296165"
          }
        ],
        "query_text": "unipolar ASK"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494088762373351"
          }
        ],
        "query_text": "square wave AM"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494088701246514"
          }
        ],
        "query_text": "what is a downlink"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494087987134410"
          }
        ],
        "query_text": "diy ez pass reader"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494087442104322"
          }
        ],
        "query_text": "iDriveThru"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494084199988245"
          }
        ],
        "query_text": "javascript what does parameter in curly braces mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494084150709353"
          }
        ],
        "query_text": "javascript what does parameter in brackets mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494084132507236"
          }
        ],
        "query_text": "macintosh plus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494083455629874"
          }
        ],
        "query_text": "building a redux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494057600259006"
          }
        ],
        "query_text": "youtube beach house"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494047815569361"
          }
        ],
        "query_text": "dean potter soloing heaven"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494047018912180"
          }
        ],
        "query_text": "open bouldering nationals highlights"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494046229897092"
          }
        ],
        "query_text": "olin honor board"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494046224844540"
          }
        ],
        "query_text": "olin honor boar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494031476922197"
          }
        ],
        "query_text": "e zpass plus parking system"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494031193845871"
          }
        ],
        "query_text": "electronic toll parking spots"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494030801250620"
          }
        ],
        "query_text": "ez pass"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494030461697292"
          }
        ],
        "query_text": "ez pass car garage technology"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494030297512906"
          },
          {
            "timestamp_usec": "1494030300010565"
          },
          {
            "timestamp_usec": "1494030437102649"
          }
        ],
        "query_text": "automatic parking garages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494018866439349"
          }
        ],
        "query_text": "vizier of deferment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494015624711780"
          }
        ],
        "query_text": "javascript what does let do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494014652394909"
          }
        ],
        "query_text": "brain cells chance"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494014356958440"
          }
        ],
        "query_text": "redux for ios"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1494013026414446"
          }
        ],
        "query_text": "ubuntu change prefered wifi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493998330507359"
          }
        ],
        "query_text": "automated lawn mowing robot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493997039884987"
          }
        ],
        "query_text": "hacker news how to not lose motivation working on an idea"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493963603616348"
          }
        ],
        "query_text": "beach house full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493961375816269"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493961150658408"
          }
        ],
        "query_text": "spotify play button events"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493959057266125"
          }
        ],
        "query_text": "javascript what is %22"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958725216545"
          }
        ],
        "query_text": "javascript split string on multiple lines"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958294346010"
          }
        ],
        "query_text": "jquery add html element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958159414125"
          }
        ],
        "query_text": "jquery load add html element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958112261268"
          }
        ],
        "query_text": "spotify search api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958077140226"
          }
        ],
        "query_text": "spotify search api get uri"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493958012371801"
          }
        ],
        "query_text": "html to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493957825132842"
          }
        ],
        "query_text": "spotify play api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493957335386004"
          }
        ],
        "query_text": "add double quotes to string javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956875292083"
          }
        ],
        "query_text": "olin honor board"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956799030095"
          }
        ],
        "query_text": "javascript replace spaces with dashes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956623113076"
          }
        ],
        "query_text": "spotify search api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956321109035"
          }
        ],
        "query_text": "jquery autocomplete documentation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956119079557"
          }
        ],
        "query_text": "ajax success"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956037508974"
          }
        ],
        "query_text": "jquery.ajax"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956008277236"
          }
        ],
        "query_text": "jquery what is $"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493956002225314"
          }
        ],
        "query_text": "jquery '$.ajax' what does it do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493955994882053"
          }
        ],
        "query_text": "jquery $.ajax what does it do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493955929914953"
          }
        ],
        "query_text": "what does $.ajax do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493939278520153"
          },
          {
            "timestamp_usec": "1493939283191376"
          }
        ],
        "query_text": "ombre hair"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493939011049268"
          },
          {
            "timestamp_usec": "1493939017039965"
          }
        ],
        "query_text": "pixie cut"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493937392892081"
          }
        ],
        "query_text": "teletubbies ed sheeran"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493928638145129"
          }
        ],
        "query_text": "olin it wiki poster printer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493928629382115"
          }
        ],
        "query_text": "it wiki poster printer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493926469394154"
          }
        ],
        "query_text": "premiere save frame as image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493925468422890"
          }
        ],
        "query_text": "google drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493915527793837"
          }
        ],
        "query_text": "strange loop enter the loop band fractal tree"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493915519868686"
          }
        ],
        "query_text": "strange loop enter the loop band"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493915503432548"
          },
          {
            "timestamp_usec": "1493915507701748"
          }
        ],
        "query_text": "strange loop enter the loop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493914266649401"
          }
        ],
        "query_text": "She's Not There by the Zombies?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493914217059615"
          }
        ],
        "query_text": "the way she talks the way she"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493910547626832"
          }
        ],
        "query_text": "Dan Barracuda"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493907440963550"
          },
          {
            "timestamp_usec": "1493907443406409"
          }
        ],
        "query_text": "craigslist musicians"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493905434482073"
          }
        ],
        "query_text": "craigslist boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493870665989797"
          }
        ],
        "query_text": "spotify search api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493870551950996"
          }
        ],
        "query_text": "spotify autocomplete search api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869588357575"
          }
        ],
        "query_text": "jquery ui"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869386332685"
          }
        ],
        "query_text": "jquery autocomplete min"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869340270328"
          }
        ],
        "query_text": "jquery autocomplete link"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869242960080"
          }
        ],
        "query_text": "jquery autocomplete plugin link"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869240280524"
          }
        ],
        "query_text": "jquery autocomplete plugin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493869160520531"
          }
        ],
        "query_text": "json autocomplete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493868933571693"
          }
        ],
        "query_text": "spotify pretty autocomplete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493868667538377"
          }
        ],
        "query_text": "ui menu item versus autocomplete-suggestion"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493867382604395"
          }
        ],
        "query_text": "html to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493867032773254"
          }
        ],
        "query_text": "jquery make autocomplete more pretty"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866908908444"
          }
        ],
        "query_text": "autocomplete jquery results are available"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866680471717"
          }
        ],
        "query_text": "autocomplete is not a function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866477663836"
          }
        ],
        "query_text": "test if jquery is loaded"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866361096714"
          }
        ],
        "query_text": "jade link  jquery"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866318548113"
          }
        ],
        "query_text": "jade load jquery"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866301033533"
          }
        ],
        "query_text": "$ is not defined(…)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866112862581"
          }
        ],
        "query_text": "html to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493866068291122"
          }
        ],
        "query_text": "ed sheeran in love with the shape of you"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865958270482"
          }
        ],
        "query_text": "spotify search songs with autocomplete"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865863344680"
          },
          {
            "timestamp_usec": "1493865866299513"
          }
        ],
        "query_text": "express app spotify search"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865847092405"
          }
        ],
        "query_text": "create a spotify search bar api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865839386884"
          }
        ],
        "query_text": "create a spotify search bar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865740128185"
          }
        ],
        "query_text": "spotify embedded player search"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865704877293"
          }
        ],
        "query_text": "spotify song search api embed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865624813639"
          }
        ],
        "query_text": "spotify api embed player"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865099612802"
          }
        ],
        "query_text": "add javascript file to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493865063531636"
          }
        ],
        "query_text": "using jquery with jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864974066945"
          }
        ],
        "query_text": "jade embed javascript"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864859133183"
          }
        ],
        "query_text": "express just use html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864721775448"
          }
        ],
        "query_text": "html5 video tag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864719361221"
          }
        ],
        "query_text": "html5 video tag options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864307903932"
          }
        ],
        "query_text": "express with react in frontend"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493864122680385"
          }
        ],
        "query_text": "jade set id"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863940200720"
          }
        ],
        "query_text": "jquery selectors"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863862443961"
          }
        ],
        "query_text": "jquery access html element"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863832860765"
          }
        ],
        "query_text": "convert jade to html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863818768833"
          }
        ],
        "query_text": "jade to html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863606883566"
          }
        ],
        "query_text": "how to reference a javascript file in html"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493863394518920"
          }
        ],
        "query_text": "express view engines"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493862208819560"
          }
        ],
        "query_text": "react app how to access dom"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493862184050975"
          }
        ],
        "query_text": "react app where to make js files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493861699707320"
          }
        ],
        "query_text": "let the bodies hit the floor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493861094605174"
          }
        ],
        "query_text": "html to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493861077880373"
          }
        ],
        "query_text": "html how to play mp3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493861071698054"
          }
        ],
        "query_text": "html how to load audio"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860744222714"
          }
        ],
        "query_text": "youtube to mp3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860650700439"
          }
        ],
        "query_text": "download youtube video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860374266308"
          }
        ],
        "query_text": "what is stylus node"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860367953494"
          }
        ],
        "query_text": "what is stylus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860336302670"
          }
        ],
        "query_text": "react style.css doesn't save"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860323411511"
          }
        ],
        "query_text": "react style.css gets overwritten"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860299213503"
          }
        ],
        "query_text": "can jade do css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860254063534"
          }
        ],
        "query_text": "react where do stylesheets go"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860222626946"
          }
        ],
        "query_text": "html 2 jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860082033252"
          }
        ],
        "query_text": "css automatically resize text"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493860061695803"
          }
        ],
        "query_text": "what is em in css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859992315165"
          }
        ],
        "query_text": "vw compatibility"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859871350992"
          }
        ],
        "query_text": "have text resize based on screen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859843216074"
          }
        ],
        "query_text": "use percentage width on text"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859782204433"
          }
        ],
        "query_text": "how to have text centered on page css"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859626113476"
          }
        ],
        "query_text": "center text in page"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859439564662"
          }
        ],
        "query_text": "jade how to comment out"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859330244172"
          }
        ],
        "query_text": "image fill width"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859172306063"
          }
        ],
        "query_text": "margin auto not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493859015313648"
          }
        ],
        "query_text": "css what does margin do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858832267478"
          }
        ],
        "query_text": "html5 automatically resize element to be centered on screen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858824016047"
          }
        ],
        "query_text": "html5 automatically resize element to fit screen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858662808386"
          }
        ],
        "query_text": "html to jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858633547624"
          }
        ],
        "query_text": "html5 center video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858470923990"
          }
        ],
        "query_text": "html5 video tag options"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858292597358"
          }
        ],
        "query_text": "how to reference public static files in react"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493858153260082"
          }
        ],
        "query_text": "node js how to access public resources"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493857895150353"
          }
        ],
        "query_text": "what does app.use do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493857253478640"
          }
        ],
        "query_text": "how to play a video stored on a server node"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493857246156117"
          }
        ],
        "query_text": "how to play a video stored on a server"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493857050335296"
          }
        ],
        "query_text": "how to use reactplayer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493856956611581"
          }
        ],
        "query_text": "import React, { Component } from 'react' ^^^^^^ SyntaxError: Unexpected token import"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493856494968787"
          }
        ],
        "query_text": "does https://github.com/CookPete/react-player.git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493856288897966"
          }
        ],
        "query_text": "simple react video embedding example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493856147396058"
          }
        ],
        "query_text": "how to embed an image from a resources folder nodejs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493856140521564"
          }
        ],
        "query_text": "how to embed an image from a resources folder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855954637869"
          }
        ],
        "query_text": "html reference relative path for image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855950463524"
          }
        ],
        "query_text": "html reference relative path"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855781396406"
          }
        ],
        "query_text": "jade video tag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855768176314"
          }
        ],
        "query_text": "embedding videos with jade nodejs -youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855758546731"
          }
        ],
        "query_text": "embedding videos with jade -youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855750491466"
          }
        ],
        "query_text": "jade stream video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855736294479"
          }
        ],
        "query_text": "embedding videos with jade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855303669107"
          }
        ],
        "query_text": "which will be smaller mp4 or html5 video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855214144222"
          }
        ],
        "query_text": "in love with the shape of you teletubbies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855182573744"
          }
        ],
        "query_text": "how to download a youtube video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855164221816"
          }
        ],
        "query_text": "how to make a youtube video into an html5 video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855100327591"
          }
        ],
        "query_text": "gfycat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493855094927127"
          }
        ],
        "query_text": "node js play html5 gif"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493854894213495"
          }
        ],
        "query_text": "Failed to lookup view \"contact\" in views directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493854201274994"
          }
        ],
        "query_text": "install node.js linux"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493853766999700"
          }
        ],
        "query_text": "creating a simple node website"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493853704877626"
          }
        ],
        "query_text": "creating a simple node app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493852736486233"
          }
        ],
        "query_text": "creating a simple react app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493849186041341"
          }
        ],
        "query_text": "referenceError: result is not defined at db.collection.insert"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493848539171710"
          }
        ],
        "query_text": "mongoerror server instance pool was destroyed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493847359959465"
          }
        ],
        "query_text": "mongodb should i store data outside of app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493847324360390"
          }
        ],
        "query_text": "mongodb dbpath relative"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493847172452182"
          }
        ],
        "query_text": "set up mongo db node js"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846909560916"
          }
        ],
        "query_text": "what does a post request do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846729892897"
          }
        ],
        "query_text": "install postman with sudo-apt get"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846663874831"
          }
        ],
        "query_text": "postman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846617267982"
          }
        ],
        "query_text": "how to send a post request in bash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846611912695"
          }
        ],
        "query_text": "how to send a post request on the command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493846574260540"
          }
        ],
        "query_text": "how to use postman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493845722594202"
          }
        ],
        "query_text": "making a super simple node project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493845611377303"
          }
        ],
        "query_text": "npm start"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493845573168849"
          }
        ],
        "query_text": "npm simple commands"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493845379706574"
          }
        ],
        "query_text": "you've successfully authenticated, but GitHub does not provide shell access. debug1: channel 0: free: client-session, nchannels 1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493844559946127"
          }
        ],
        "query_text": "git push Permission denied (publickey). fatal: Could not read from remote repository."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493844093353064"
          }
        ],
        "query_text": "getting started with hub git wrapper"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493844088335466"
          }
        ],
        "query_text": "getting started with hub"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843810497262"
          }
        ],
        "query_text": "ubuntu installing hub"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843746003646"
          }
        ],
        "query_text": "what is /usr/bin/env for"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843707699766"
          }
        ],
        "query_text": "what is /usr/bin for"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843568408660"
          }
        ],
        "query_text": "ubuntu add something to your path"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843364532991"
          }
        ],
        "query_text": "ubuntu installing hub on 14.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843272763565"
          }
        ],
        "query_text": "ubuntu installing hub 14.04"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843224495604"
          }
        ],
        "query_text": "ubuntu installing hub"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493843017767209"
          }
        ],
        "query_text": "ubuntu what is make"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842667541110"
          }
        ],
        "query_text": "what does cd !$ do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842584053160"
          }
        ],
        "query_text": "google buy domain name"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842495971792"
          }
        ],
        "query_text": "mkvirtualenv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842473824754"
          }
        ],
        "query_text": "how to create a new node project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842406850598"
          }
        ],
        "query_text": "teletube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842398469358"
          }
        ],
        "query_text": "check if domain name is free"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493842392729328"
          }
        ],
        "query_text": "teletubisie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493826571134580"
          }
        ],
        "query_text": "what does 200 response code do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493826414227578"
          }
        ],
        "query_text": "what does response code do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493826278593012"
          }
        ],
        "query_text": "nodejs what does writehead do?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493825955406106"
          }
        ],
        "query_text": "nodejs intro to socket programming"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493825663172257"
          }
        ],
        "query_text": "nodejs sync audio and video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493825571394201"
          }
        ],
        "query_text": "nodejs play two video files at exactly the same time"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493825516384456"
          }
        ],
        "query_text": "nodejs play two audio files at exactly the same time"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493824629698359"
          }
        ],
        "query_text": "ensure two media files are played simultaneously nodejs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493824522459115"
          }
        ],
        "query_text": "ensure two media files are played simultaneously stack overflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493824507764786"
          }
        ],
        "query_text": "ensure two media files are played simultaneously"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493824387040082"
          }
        ],
        "query_text": "youtube upload api how long does it take"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493824234572064"
          }
        ],
        "query_text": "youtube api to publish videos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493786139615857"
          }
        ],
        "query_text": "dwarf fortress"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493770044492603"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493768631170381"
          }
        ],
        "query_text": "xmage discon. 0:20) is pending to join the game"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493765036462034"
          },
          {
            "timestamp_usec": "1493765042923742"
          }
        ],
        "query_text": "ask hn favorite youtube videos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493764856270837"
          }
        ],
        "query_text": "ask hn favorite programming videos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493744438808747"
          }
        ],
        "query_text": "syncing video with songs youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493744431347313"
          }
        ],
        "query_text": "syncing video with song"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493744409633305"
          }
        ],
        "query_text": "api to publish videos to youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493744310015827"
          }
        ],
        "query_text": "gif but with sound"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493744234785630"
          }
        ],
        "query_text": "magic the gathering online api"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493737837762161"
          }
        ],
        "query_text": "swiss ball rollout"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493737783320706"
          }
        ],
        "query_text": "swiss ball pike"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493737780059549"
          }
        ],
        "query_text": "coltrane albums"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493737574726190"
          }
        ],
        "query_text": "greg nuckols best ab exercises for core activation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493737502010304"
          }
        ],
        "query_text": "greg nuckols best ab exercises"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493735676674124"
          }
        ],
        "query_text": "kendrick lamar damn full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493732781002183"
          }
        ],
        "query_text": "craigslist boston musicians"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493732566563332"
          }
        ],
        "query_text": "making an okcupid clone"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493732394123915"
          }
        ],
        "query_text": "find band website"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493731591473558"
          }
        ],
        "query_text": "how do roombas work?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493731441841728"
          }
        ],
        "query_text": "roomba for outside"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493731433278144"
          }
        ],
        "query_text": "big green egg for sale"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493731427825662"
          }
        ],
        "query_text": "room a for outside"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493730811007761"
          }
        ],
        "query_text": "small street cleaners"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493730178589407"
          }
        ],
        "query_text": "hacker news startups with high costs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493729521545986"
          }
        ],
        "query_text": "what is an fpga"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696950421729"
          }
        ],
        "query_text": "richard kohler uncc"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696946198919"
          }
        ],
        "query_text": "richard kholer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696714101506"
          }
        ],
        "query_text": "shlohmo bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696579366719"
          },
          {
            "timestamp_usec": "1493696628194994"
          }
        ],
        "query_text": "father of emily kohler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696367947719"
          },
          {
            "timestamp_usec": "1493696388811183"
          }
        ],
        "query_text": "kohler cleaning philadelphia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696327187595"
          }
        ],
        "query_text": "shlohmo bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696127734855"
          }
        ],
        "query_text": "furcast bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696114753310"
          },
          {
            "timestamp_usec": "1493696121101046"
          }
        ],
        "query_text": "furcast"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696086301738"
          }
        ],
        "query_text": "precision cleaning industrial kohler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696075660551"
          }
        ],
        "query_text": "precision cleaning kohler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696021036224"
          }
        ],
        "query_text": "precision cleaning philadelphia pennsylvania kohler"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493696013739333"
          }
        ],
        "query_text": "precision cleaning philadelphia pennsylvania"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493695977851313"
          }
        ],
        "query_text": "precision cleaning philadelphia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493695939663330"
          }
        ],
        "query_text": "kohler precision cleaning philadelphia"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493695932055763"
          }
        ],
        "query_text": "kohler precision cleaning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493695475355312"
          }
        ],
        "query_text": "important vidz"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493690879110488"
          }
        ],
        "query_text": "franklin the flirt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493689089870006"
          }
        ],
        "query_text": "animals"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493688277441921"
          }
        ],
        "query_text": "riemann zeta function band"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493687470725907"
          },
          {
            "timestamp_usec": "1493687491021445"
          },
          {
            "timestamp_usec": "1493687506142030"
          }
        ],
        "query_text": "shlohmo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493678935235216"
          }
        ],
        "query_text": "what is 40 mm video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493675849215897"
          }
        ],
        "query_text": "where the top 1 % go to college"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493667461811935"
          },
          {
            "timestamp_usec": "1493667469060124"
          }
        ],
        "query_text": "guy with 31 biceps"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493666435766738"
          }
        ],
        "query_text": "awesome clay pigeon shooting"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493666421143967"
          },
          {
            "timestamp_usec": "1493666424364977"
          }
        ],
        "query_text": "sick skeet shooters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493663714011266"
          }
        ],
        "query_text": "what is a transcendental number"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493657095883989"
          }
        ],
        "query_text": "James Simons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493610025560267"
          }
        ],
        "query_text": "kendrick lamar full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493609607903129"
          }
        ],
        "query_text": "despacito"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493609593082488"
          }
        ],
        "query_text": "despecito"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493609248207187"
          },
          {
            "timestamp_usec": "1493609253735529"
          }
        ],
        "query_text": "american teen khalid"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493608988736171"
          }
        ],
        "query_text": "it wasn't me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493608858314104"
          }
        ],
        "query_text": "despacito"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493608810558036"
          }
        ],
        "query_text": "billboard top 40"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493601077734585"
          }
        ],
        "query_text": "this is the end full movie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493601003019802"
          }
        ],
        "query_text": "blue mountain state pocket pussy episode watch online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493600986729052"
          }
        ],
        "query_text": "blue mountain state pocket pussy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493600971170971"
          }
        ],
        "query_text": "bms pocket pussy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493599986688337"
          }
        ],
        "query_text": "dna kendrick lamar"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597983860538"
          }
        ],
        "query_text": "imdb live at pompeii"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597936323455"
          }
        ],
        "query_text": "amazon live at pompeii watch"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597751778134"
          }
        ],
        "query_text": "live at pompeii full movie watch free online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597746902176"
          }
        ],
        "query_text": "live at pompeii full movie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597717126489"
          }
        ],
        "query_text": "live at pompeii"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597653385616"
          }
        ],
        "query_text": "live at pompeii watch free online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597616104829"
          }
        ],
        "query_text": "live at pompeii full movie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597606244541"
          }
        ],
        "query_text": "live at pompeii"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597577378153"
          }
        ],
        "query_text": "windows sound out of hdmi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493597116859972"
          },
          {
            "timestamp_usec": "1493597154820893"
          }
        ],
        "query_text": "live at pompeii"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493591043520276"
          }
        ],
        "query_text": "felidar guardian"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493590012585390"
          }
        ],
        "query_text": "chocolate ice cream recipe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493590000705626"
          }
        ],
        "query_text": "ice cream recipe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584801151138"
          }
        ],
        "query_text": "Olin college, Olin Way, Needham, MA -> Singh's Cafe, Wellesley, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584793373355"
          }
        ],
        "query_text": "Olin college, Olin Way, Needham, MA -> Masala Art, 990 Great Plain Ave, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584768420805"
          },
          {
            "timestamp_usec": "1493584783056985"
          }
        ],
        "query_text": "masala art needham"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584760727687"
          }
        ],
        "query_text": "Olin college, Olin Way, Needham, MA -> Mela Indian Restaurant"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584626182205"
          },
          {
            "timestamp_usec": "1493584740659410"
          },
          {
            "timestamp_usec": "1493584742045753"
          },
          {
            "timestamp_usec": "1493584742765459"
          },
          {
            "timestamp_usec": "1493584744493045"
          }
        ],
        "query_text": "indian food in boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584605012281"
          }
        ],
        "query_text": "Mela Indian Restaurant Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493584575304247"
          },
          {
            "timestamp_usec": "1493584581649039"
          }
        ],
        "query_text": "indian food in boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493576707848346"
          }
        ],
        "query_text": "pandemonium games boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493567437765400"
          }
        ],
        "query_text": "mit rugby prom dress tournament"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493565730608897"
          },
          {
            "timestamp_usec": "1493565749713342"
          }
        ],
        "query_text": "WCTI - Worcester CleanTech Incubator, Worcester, MA -> 1 Mt Hope Terrace, Worcester, MA 01602"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493565725840941"
          }
        ],
        "query_text": "WCTI - Worcester CleanTech Incubator, Worcester, MA -> 1 Mt Hope Terrace, Worcester, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493565700392877"
          }
        ],
        "query_text": "google maps"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493499998390801"
          }
        ],
        "query_text": "Vashti Bunyan"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493479253737225"
          }
        ],
        "query_text": "volleyball highlights"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493396106759592"
          }
        ],
        "query_text": "street cleaning simulator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493395674572956"
          }
        ],
        "query_text": "highway street sweepers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493395473793308"
          }
        ],
        "query_text": "automated garbage truck"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393672822847"
          }
        ],
        "query_text": "street cleaning services"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393628215000"
          }
        ],
        "query_text": "street cleaning boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393494762122"
          }
        ],
        "query_text": "self driving garbage trucks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393438930932"
          }
        ],
        "query_text": "automatic garbage trucks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393013194140"
          }
        ],
        "query_text": "city sidewalk trash pickup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493393004422945"
          }
        ],
        "query_text": "city sidewalk trash removal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493392987384435"
          }
        ],
        "query_text": "park trash removal services"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493392865048399"
          }
        ],
        "query_text": "municipal waste removal services"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493392441147289"
          }
        ],
        "query_text": "Northcam services"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391824183788"
          }
        ],
        "query_text": "municipal street sweepers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391816425045"
          }
        ],
        "query_text": "municipal street cleaners"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391805513123"
          }
        ],
        "query_text": "municipal waste removal services"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391757321355"
          }
        ],
        "query_text": "town waste removal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391524089755"
          }
        ],
        "query_text": "highway side waste removal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391503242504"
          }
        ],
        "query_text": "highway waste side removal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391223531812"
          }
        ],
        "query_text": "litter vacs"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391220141301"
          }
        ],
        "query_text": "litter vacuum"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391146530175"
          }
        ],
        "query_text": "street sweepers trash cleanup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391140829592"
          }
        ],
        "query_text": "street sweepers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493391077006593"
          }
        ],
        "query_text": "trash cleaning robot"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493356429623832"
          }
        ],
        "query_text": "dark side or the moon full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493351420820541"
          }
        ],
        "query_text": "ruby spring portfolio"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493348993009024"
          }
        ],
        "query_text": "lcd soundsystem full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337119925213"
          }
        ],
        "query_text": "(Current Location) -> 555 Washington St, Wellesley, MA 02482"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337109862189"
          }
        ],
        "query_text": "Haircuts, Ltd. Wellesley, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337057648450"
          }
        ],
        "query_text": "Jesamondo Salon & Spa Natick, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337038342689"
          },
          {
            "timestamp_usec": "1493337040392554"
          },
          {
            "timestamp_usec": "1493337048871101"
          }
        ],
        "query_text": "cheap haircuts near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337024635659"
          }
        ],
        "query_text": "Haircuts, Ltd. Wellesley, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493337007267803"
          },
          {
            "timestamp_usec": "1493337011104805"
          }
        ],
        "query_text": "cheap haircuts near me"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493334170621293"
          }
        ],
        "query_text": "james benning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493326804015747"
          }
        ],
        "query_text": "ubuntu screen recorder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493325261504702"
          }
        ],
        "query_text": "ros adding c++ file to launch file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493319011673649"
          }
        ],
        "query_text": "how to revert a commit in git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493314277388544"
          }
        ],
        "query_text": "numpy hstack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493311832158459"
          }
        ],
        "query_text": "ros defining a custom message type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493311646694386"
          }
        ],
        "query_text": "std_msgs MultiArray"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493311612844672"
          }
        ],
        "query_text": "invalid field: Currently only support 1-dimensional array type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493311576990806"
          }
        ],
        "query_text": "rosmsg list of list of points"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493310772348627"
          }
        ],
        "query_text": "package_dir generate distutils setup specify inside folder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493310659949932"
          }
        ],
        "query_text": "setting up package_dir for setup.py ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493310049846549"
          }
        ],
        "query_text": "generate distutils setup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493310045727424"
          }
        ],
        "query_text": "generate_distutils_setup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493308181595477"
          }
        ],
        "query_text": "CMake Error at /catkin_generated/safe_execute_install.cmake:4 package directory does not exist"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493308165057450"
          }
        ],
        "query_text": "CMake Error at /catkin_generated/safe_execute_install.cmake:4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493308156897572"
          }
        ],
        "query_text": "CMake Error at drawbot/catkin_generated/safe_execute_install.cmake:4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493308148737613"
          }
        ],
        "query_text": "catkin_make install package directory does not exist src/ CMake Error at drawbot/catkin_generated/safe_execute_install.cmake:4"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307972776637"
          }
        ],
        "query_text": "catkin_make install package directory does not exist src/"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307956835964"
          }
        ],
        "query_text": "catkin_make install package directory does not exist"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307873802629"
          }
        ],
        "query_text": "ubuntu rename a directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307868822501"
          }
        ],
        "query_text": "python rename a directory"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307747250701"
          }
        ],
        "query_text": "ros defining a new service"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307637667024"
          }
        ],
        "query_text": "how to see source code of a python file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307563077577"
          }
        ],
        "query_text": "Ros server response with two returns"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493307532164423"
          }
        ],
        "query_text": "ros making a server"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493306393484333"
          }
        ],
        "query_text": "python assert"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493305982573391"
          }
        ],
        "query_text": "add vector to each row of matrix numpy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493305930583266"
          }
        ],
        "query_text": "matrix multiplication"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493305926152148"
          }
        ],
        "query_text": "m * n matrix"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493305088355222"
          }
        ],
        "query_text": "rospy.spin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493302553351129"
          }
        ],
        "query_text": "machine learning guess the body fat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493263547975325"
          }
        ],
        "query_text": "pilate jesus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493263123447917"
          }
        ],
        "query_text": "define apostasy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493251387806254"
          }
        ],
        "query_text": "chance brain cells"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493251201330414"
          }
        ],
        "query_text": "xmage keeps asking me to redownload images"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493239094463646"
          }
        ],
        "query_text": "forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493236547829193"
          }
        ],
        "query_text": "zoom h5 format sd card error"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493236509536560"
          }
        ],
        "query_text": "zoom format sd card error"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493232104028722"
          }
        ],
        "query_text": "gh4 how to increase shutter speed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493230325333474"
          }
        ],
        "query_text": "(Current Location) -> Rosemary Lake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493230324391315"
          }
        ],
        "query_text": "Rosemary Lake, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493229833743954"
          }
        ],
        "query_text": "death grips full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493228516052263"
          }
        ],
        "query_text": "zoom h5 no project"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493228502164695"
          }
        ],
        "query_text": "Cassini Spacecraft"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493228452940153"
          }
        ],
        "query_text": "zoom h5 not able to play recordings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493228425597653"
          }
        ],
        "query_text": "zoom not able to play recordings"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493226577109178"
          }
        ],
        "query_text": "how to shoot film in the rain"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493223914419747"
          }
        ],
        "query_text": "get body fat from picture"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493223844292591"
          }
        ],
        "query_text": "us navy body fat calculator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493223649253664"
          },
          {
            "timestamp_usec": "1493223653949617"
          }
        ],
        "query_text": "navy body fat calculator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493219093993573"
          }
        ],
        "query_text": "weezer full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493219031601508"
          }
        ],
        "query_text": "pinkerton full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493218968489178"
          },
          {
            "timestamp_usec": "1493218975475799"
          },
          {
            "timestamp_usec": "1493219020880682"
          }
        ],
        "query_text": "pinkerton"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493177170960066"
          }
        ],
        "query_text": "youtube sick beat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168867046908"
          }
        ],
        "query_text": "Curtis St & Sunset Rd, Massachusetts -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168861932478"
          }
        ],
        "query_text": "Curtis Street at Sunset Ave -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168813889336"
          }
        ],
        "query_text": "South Station, 700 Atlantic Ave, Boston, MA 02110 -> Tulip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168795073630"
          },
          {
            "timestamp_usec": "1493168798131009"
          },
          {
            "timestamp_usec": "1493168801000714"
          }
        ],
        "query_text": "South Station, 700 Atlantic Ave, Boston, MA 02110 -> Curtis St & Sunset Rd, Medford, MA 02155"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168791821213"
          }
        ],
        "query_text": "south station -> Curtis St & Sunset Rd, Medford, MA 02155"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168776379581"
          }
        ],
        "query_text": "Curtis Street at Sunset Ave"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168543469755"
          }
        ],
        "query_text": "aepi mit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168535311029"
          }
        ],
        "query_text": "aepi frat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168380523233"
          },
          {
            "timestamp_usec": "1493168385984340"
          }
        ],
        "query_text": "South Station, Atlantic Avenue, Boston, MA -> Allston, Boston, MA 02134"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168367745219"
          },
          {
            "timestamp_usec": "1493168372715206"
          }
        ],
        "query_text": "allston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493168267710356"
          },
          {
            "timestamp_usec": "1493168270667100"
          }
        ],
        "query_text": "south station"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493167277021348"
          }
        ],
        "query_text": "macintosh plus full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493165795102513"
          }
        ],
        "query_text": "how to build a python package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493165598792959"
          }
        ],
        "query_text": "making a service ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493158785262286"
          }
        ],
        "query_text": "carriage return"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493158782012142"
          }
        ],
        "query_text": "carriage return python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493158268399995"
          }
        ],
        "query_text": "from operator import subtract"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493158003022420"
          }
        ],
        "query_text": "sum each element of two python lists"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493157780018944"
          }
        ],
        "query_text": "append 0 to numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493156333103995"
          }
        ],
        "query_text": "python string %d"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493155705804943"
          }
        ],
        "query_text": "get params from script call python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493155687550325"
          }
        ],
        "query_text": "python execute different actions based on arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493152132617340"
          }
        ],
        "query_text": "python string %d"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493152068954579"
          }
        ],
        "query_text": "iterate through python list with indices"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493151064241216"
          }
        ],
        "query_text": "sublime delete to whitespace"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150926372886"
          }
        ],
        "query_text": "sequence help sequence container examples ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150915063952"
          }
        ],
        "query_text": "sequence container examples ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150904476670"
          }
        ],
        "query_text": "sequence container example ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150672866787"
          }
        ],
        "query_text": "elf._connector_outcome not in self._transitions[last_label]\\ TypeError: unhashable type: 'list' ros sequence"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150658814721"
          }
        ],
        "query_text": "elf._connector_outcome not in self._transitions[last_label]\\ TypeError: unhashable type: 'list'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150128900411"
          }
        ],
        "query_text": "what is a connector outcome smach"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493150123024475"
          }
        ],
        "query_text": "what is a connector outcome"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493142850909342"
          }
        ],
        "query_text": "cofounder equity agreement worksheet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493142165317886"
          }
        ],
        "query_text": "how to move tab down to different workscreen on ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493141543466843"
          }
        ],
        "query_text": "reading from SMACH userdata key but the only keys that were declared as input to this state were: (). This key needs to be declared as input to this state."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493140707462776"
          }
        ],
        "query_text": "simpleactionserver"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493140487108167"
          }
        ],
        "query_text": "creating an action ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493140415085082"
          }
        ],
        "query_text": "how to create an action ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493139851116576"
          }
        ],
        "query_text": "ros float type"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493139488380872"
          }
        ],
        "query_text": "how to create a branch in git"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493139091086745"
          }
        ],
        "query_text": "how to create a sequence in smach"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493139085936552"
          }
        ],
        "query_text": "how to create a sequence in smash"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493138672525714"
          }
        ],
        "query_text": "python detect bpm of music"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493132092268843"
          }
        ],
        "query_text": "leek"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493131696351083"
          }
        ],
        "query_text": "gabriela y rodrigo tamacun"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493131686396581"
          }
        ],
        "query_text": "gabriela y rodrigo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493103845725207"
          }
        ],
        "query_text": "depression cherry full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493102988564349"
          }
        ],
        "query_text": "smolov jr bench program"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493102946416268"
          }
        ],
        "query_text": "reddit fitness upper body only routine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493098540221654"
          },
          {
            "timestamp_usec": "1493098545541770"
          }
        ],
        "query_text": "Oak Square, Boston, MA -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096866696925"
          }
        ],
        "query_text": "1 Cambridge Terrace, Boston, MA 02134 -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096861621858"
          }
        ],
        "query_text": "(1 Cambridge Terrace, Allston MA -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096845894517"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096844691734"
          }
        ],
        "query_text": "Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096664642389"
          },
          {
            "timestamp_usec": "1493096671276048"
          }
        ],
        "query_text": "Medford, MA -> Tulip, Somerville, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096657040583"
          }
        ],
        "query_text": "Medford, MA -> Rosemary Lake, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096653496007"
          }
        ],
        "query_text": "(Current Location) -> Rosemary Lake, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096331495886"
          },
          {
            "timestamp_usec": "1493096334043754"
          }
        ],
        "query_text": "craigslist summer housing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493096323067341"
          }
        ],
        "query_text": "craigslist summer blushing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493093482797264"
          },
          {
            "timestamp_usec": "1493093485697294"
          }
        ],
        "query_text": "craigslist summer housing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493083713768405"
          }
        ],
        "query_text": "craigslist housing boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493083376482557"
          }
        ],
        "query_text": "olin webmail"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493073231933433"
          },
          {
            "timestamp_usec": "1493073686852579"
          }
        ],
        "query_text": "(Current Location) -> Rosemary Lake, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493073210585093"
          },
          {
            "timestamp_usec": "1493073229535838"
          }
        ],
        "query_text": "rosemary lake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493066957635911"
          }
        ],
        "query_text": "smach sequence"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493066952216441"
          }
        ],
        "query_text": "utorial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493066945043412"
          }
        ],
        "query_text": "ros smach sequence tutorial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493066823273934"
          }
        ],
        "query_text": "ros what is an action state"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493065809223180"
          }
        ],
        "query_text": "smach execute a state a certain amount of times ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493065795220459"
          }
        ],
        "query_text": "smach execute a state n times ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493065787977995"
          }
        ],
        "query_text": "smach execute a state n times"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493064275892801"
          }
        ],
        "query_text": "python get list to end"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493063609611541"
          }
        ],
        "query_text": "opencv threshold filtering"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493059856459321"
          }
        ],
        "query_text": "how to make sky look less washed out when filming"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493058508014549"
          }
        ],
        "query_text": "Bosch 3 Piece Bistro Set amazon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493054353515948"
          }
        ],
        "query_text": "gh4 display blinks off and on"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493054236157312"
          }
        ],
        "query_text": "what write speed for hd video"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493053340233064"
          }
        ],
        "query_text": "gh4 eye sensor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493053303666078"
          }
        ],
        "query_text": "gh4 display blinks off and on"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1493053194337956"
          }
        ],
        "query_text": "motion recording was cancelled due to the limitation of the writing speed of the card gh4 help"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492984036832826"
          }
        ],
        "query_text": "Franklin W. Olin College of Engineering, 1000 Olin Way, Needham, MA 02492"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492798595785142"
          }
        ],
        "query_text": "two kinds of left handed people"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492721729893604"
          }
        ],
        "query_text": "diy airlock in room"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492721727675998"
          }
        ],
        "query_text": "diy airlock in romo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492721720474982"
          }
        ],
        "query_text": "diy airlock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492721713651189"
          }
        ],
        "query_text": "two stage airlock in room"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492720424067688"
          }
        ],
        "query_text": "add image to github markdown"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492719328170608"
          }
        ],
        "query_text": "gnome video editor"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492719129779144"
          }
        ],
        "query_text": "\"qgifer\" speed up gif"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492719119081303"
          }
        ],
        "query_text": "qgifer speed up gif"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492718897255962"
          }
        ],
        "query_text": "video to gif ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492718661727250"
          }
        ],
        "query_text": "ubuntu gif maker from movie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492718647435848"
          }
        ],
        "query_text": "ubuntu gif maker"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492715720904179"
          }
        ],
        "query_text": "ubuntu snipping tool"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492714984084393"
          }
        ],
        "query_text": "Data Insight Systems"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492714921864540"
          }
        ],
        "query_text": "larry genevisi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492709372313510"
          }
        ],
        "query_text": "rtj 1 full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492709362910787"
          },
          {
            "timestamp_usec": "1492709365542798"
          },
          {
            "timestamp_usec": "1492709367849220"
          }
        ],
        "query_text": "rtj 1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492705928260880"
          }
        ],
        "query_text": "15^3gm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492704841018233"
          }
        ],
        "query_text": "wolfram alpha"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492704643608582"
          }
        ],
        "query_text": "ln(240*((14/15)^14) * 1/15)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492704235109989"
          }
        ],
        "query_text": "14^2="
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492704184037680"
          }
        ],
        "query_text": "(14/15)^2 as fraction"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492704172434274"
          }
        ],
        "query_text": "(14/15)^2"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492703987130499"
          }
        ],
        "query_text": "division rule"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699812660712"
          }
        ],
        "query_text": "Wyman St, Jamaica Plain, MA 02130 -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699808325437"
          }
        ],
        "query_text": "1000 Wyman St, Jamaica Plain, MA 02130 -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699617123072"
          }
        ],
        "query_text": "10 Wyman St, Jamaica Plain, MA 02130 -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699611607736"
          }
        ],
        "query_text": "10 Wyman Street, Boston, MA -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699598142770"
          }
        ],
        "query_text": "(Current Location) -> Tulip, 561 Windsor St., B402, Somerville, MA 02143"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492699581055656"
          },
          {
            "timestamp_usec": "1492699584543026"
          }
        ],
        "query_text": "tulip co sommerville"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492696951157785"
          }
        ],
        "query_text": "jacob collier interview"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492696791674113"
          },
          {
            "timestamp_usec": "1492696796235468"
          }
        ],
        "query_text": "jacob collier"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492696781139828"
          }
        ],
        "query_text": "elliot piano vocoder multi instrumentalist"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492652223466730"
          }
        ],
        "query_text": "jacob collier interview"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492650943740920"
          }
        ],
        "query_text": "jacob collier jerusalem"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492650795167992"
          }
        ],
        "query_text": "jacob collier"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492648618266263"
          },
          {
            "timestamp_usec": "1492648622309327"
          }
        ],
        "query_text": "harmonic recontextualization"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492647876040215"
          },
          {
            "timestamp_usec": "1492647881464983"
          }
        ],
        "query_text": "cory henry improv jam"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492646354300921"
          }
        ],
        "query_text": "colostomy"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492641470892275"
          }
        ],
        "query_text": "can you counter a hexproof spell"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492638248025582"
          }
        ],
        "query_text": "xmage adding lands not working"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492637027423422"
          }
        ],
        "query_text": "hacksaw ridge"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492634897709316"
          }
        ],
        "query_text": "facebook"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492634193562242"
          }
        ],
        "query_text": "reddit xmage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492634189546138"
          }
        ],
        "query_text": "xmage unable to update recent date"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492634115529304"
          }
        ],
        "query_text": "xmage 1_4_23V1 unable to download"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492634060652959"
          }
        ],
        "query_text": "xmage unable to update"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492633956911657"
          }
        ],
        "query_text": "download xmage 1.4.23V1"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492633784572695"
          }
        ],
        "query_text": "failed to download Xmage from"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492633763379960"
          }
        ],
        "query_text": "failed to download Xmage from http://bit.ly/cmage_1_4_23V1o"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492633594856114"
          }
        ],
        "query_text": "xmage how to update client"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492627619046899"
          }
        ],
        "query_text": "amonkhet best commons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492627456484907"
          }
        ],
        "query_text": "Visualiser"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492627452704284"
          }
        ],
        "query_text": "Visualizer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626837033027"
          }
        ],
        "query_text": "python read arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626788018279"
          }
        ],
        "query_text": "roslaunch xml node args"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626729994595"
          }
        ],
        "query_text": "roslaunch arg tag"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626656567785"
          }
        ],
        "query_text": "ros launch file pass param example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626323839389"
          }
        ],
        "query_text": "ros launch file pass argument to python function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626315334626"
          }
        ],
        "query_text": "launch file pass argument to python function"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626277288403"
          }
        ],
        "query_text": "launch file remap"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492626010621998"
          }
        ],
        "query_text": "ros passing parameters with launch files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492625862243049"
          }
        ],
        "query_text": "passing parameters with rospy launch script"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492625802943828"
          }
        ],
        "query_text": "how ros params work"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492623441920952"
          },
          {
            "timestamp_usec": "1492623444654465"
          }
        ],
        "query_text": "ros create service server"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492623210180286"
          }
        ],
        "query_text": "amonkhet best commons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492623089654914"
          }
        ],
        "query_text": "is amonkhet out"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492623069207645"
          }
        ],
        "query_text": "mtg set spoilers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492618901627428"
          }
        ],
        "query_text": "catkin_make install src/ does not exist"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492618374894140"
          }
        ],
        "query_text": "ros defining a service python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492618254884026"
          }
        ],
        "query_text": "catkin making a setup.py file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492614125545638"
          }
        ],
        "query_text": "fhd all-i what does it mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492614023216323"
          }
        ],
        "query_text": "gh4 focus peaking wont show"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492613684111272"
          }
        ],
        "query_text": "canon gh4 how to see focusing blue dots"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492613669662812"
          }
        ],
        "query_text": "canon gh4 how to see focusing dots"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492612489688145"
          }
        ],
        "query_text": "(Current Location) -> 90-92 Dover Rd, Wellesley, MA 02482"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492612377614132"
          }
        ],
        "query_text": "Wellesley College, 106 Central St, Wellesley, MA 02481"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492570605632199"
          }
        ],
        "query_text": "how to find pipes in bathroom walls"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492570404413332"
          }
        ],
        "query_text": "how can you tell if a wall is hollow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492554314178064"
          }
        ],
        "query_text": "\"Variation\" textbook"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492554302385560"
          }
        ],
        "query_text": "Textbook Variation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492554293559683"
          }
        ],
        "query_text": "Variation textbook"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492554077015914"
          }
        ],
        "query_text": "navy body fat calculator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492546233357915"
          },
          {
            "timestamp_usec": "1492546265901308"
          }
        ],
        "query_text": "danny brown full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492543503861566"
          }
        ],
        "query_text": "google drive"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492542188777846"
          }
        ],
        "query_text": "yyaxis right function not found"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492541707349344"
          }
        ],
        "query_text": "phantom superchargers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492541688231889"
          }
        ],
        "query_text": "electric supercharger kit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492540536704073"
          }
        ],
        "query_text": "how do I install wordpress plugins"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492539659300922"
          }
        ],
        "query_text": "add extra administrator to wordpress account"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492539516660414"
          }
        ],
        "query_text": "how to move a wordpress site to a new account"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492537383340899"
          }
        ],
        "query_text": "electric supercharger cars reddit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492537180315237"
          }
        ],
        "query_text": "wordpress form to google spreadsheet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492536287298815"
          }
        ],
        "query_text": "aftermarket turbos sold in the usa this year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492536252110205"
          }
        ],
        "query_text": "turbos sold in the usa this year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535955287880"
          }
        ],
        "query_text": "revenue - expenses"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535384823684"
          }
        ],
        "query_text": "biggest cities in the usa"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535169035940"
          }
        ],
        "query_text": "DNA Performance Inc. Hialeah, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535160620567"
          }
        ],
        "query_text": "Active Autowerke Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535037376922"
          }
        ],
        "query_text": "Miami AutoWorks Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492535034867125"
          }
        ],
        "query_text": "Performance ATV Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534936149118"
          }
        ],
        "query_text": "Precision Auto Werks Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534840059606"
          }
        ],
        "query_text": "Novitech Tuning Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534831565360"
          }
        ],
        "query_text": "Pro Performance Doral, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534823941831"
          }
        ],
        "query_text": "Xtreme Autowerks Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534773501617"
          }
        ],
        "query_text": "Pro Performance Doral, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534682821073"
          }
        ],
        "query_text": "RS Auto Specialties Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534626185258"
          }
        ],
        "query_text": "All Out Performance Inc Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534608230751"
          }
        ],
        "query_text": "Premiere Performance Turbo Specialist of Miami Miami Gardens, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534526942095"
          }
        ],
        "query_text": "Miami JDM Performance Hialeah Gardens, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534526099350"
          }
        ],
        "query_text": "Performance shops miami"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534496902276"
          }
        ],
        "query_text": "Miami JDM Performance Hialeah Gardens, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534495482890"
          }
        ],
        "query_text": "Performance shops miami"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534432490792"
          }
        ],
        "query_text": "Miami JDM Performance Hialeah Gardens, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534334252494"
          }
        ],
        "query_text": "how many performance car shops are there in the usa"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534209922187"
          },
          {
            "timestamp_usec": "1492534210787739"
          }
        ],
        "query_text": "Performance shops miami"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534117496717"
          }
        ],
        "query_text": "Quick Tricks Automotive Performance Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492534104044972"
          }
        ],
        "query_text": "Buggods Performance and Body Shop Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533961363066"
          }
        ],
        "query_text": "Quick Tricks Automotive Performance Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533793396023"
          }
        ],
        "query_text": "S S Performance Automotive Inc South Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533767777338"
          }
        ],
        "query_text": "Miami Performance Inc. BMW Service Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533644112224"
          }
        ],
        "query_text": "S S Performance Automotive Inc South Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533596611631"
          }
        ],
        "query_text": "Wheels Performance Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533532407964"
          }
        ],
        "query_text": "Buggods Performance and Body Shop Miami, FL"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492533520860754"
          },
          {
            "timestamp_usec": "1492533529892834"
          }
        ],
        "query_text": "Performance shops miami"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492521991865886"
          }
        ],
        "query_text": "anco tickets brooklyn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492520177478514"
          }
        ],
        "query_text": "boston calling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492488463456460"
          },
          {
            "timestamp_usec": "1492488466281937"
          }
        ],
        "query_text": "car shop"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492487116646698"
          }
        ],
        "query_text": "wordpress buttons"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492486914652711"
          }
        ],
        "query_text": "css button class wordpress change target"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492486704624761"
          }
        ],
        "query_text": "css class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492486697359667"
          }
        ],
        "query_text": "how to make something a css class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492486227501394"
          }
        ],
        "query_text": "WYSIWYG"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492485798399623"
          }
        ],
        "query_text": "wordpress change behavior of image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492485174868246"
          }
        ],
        "query_text": "how to add an email form to a wordpress"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492484962081512"
          }
        ],
        "query_text": "how to generate a license for selling something"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492484957020575"
          }
        ],
        "query_text": "how to generate a license"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492484950329581"
          }
        ],
        "query_text": "how to generate a limited liability license"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492482710053442"
          }
        ],
        "query_text": "hollow youtube alex g"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492482702900545"
          }
        ],
        "query_text": "hollow youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492477413621890"
          }
        ],
        "query_text": "mojito cake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492477082990123"
          }
        ],
        "query_text": "Takanoyama"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492475394247164"
          }
        ],
        "query_text": "when are MIT finals done"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492393018654819"
          }
        ],
        "query_text": "define: specious"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492372416968499"
          }
        ],
        "query_text": "whole foods flourless chocolate cake"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492364888183148"
          }
        ],
        "query_text": "race track car wide angle"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492364884033547"
          }
        ],
        "query_text": "race track wide angle"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492364841484254"
          }
        ],
        "query_text": "electric supercharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492364690280621"
          },
          {
            "timestamp_usec": "1492364693881058"
          }
        ],
        "query_text": "car pictures"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492363964263885"
          }
        ],
        "query_text": "wordpress how to change site title"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492363510097585"
          }
        ],
        "query_text": "Mazerati"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492362647736791"
          }
        ],
        "query_text": "electric supercharger reddit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492362527741807"
          }
        ],
        "query_text": "electric supercharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492362450117045"
          }
        ],
        "query_text": "how to make an additional website on wordpress"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492357699806702"
          }
        ],
        "query_text": "hardware startups y combinator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492352184995523"
          }
        ],
        "query_text": "cvs putnam"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492351452005730"
          }
        ],
        "query_text": "Putnam, CT"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492316656906828"
          }
        ],
        "query_text": "kendrick full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492297241183201"
          }
        ],
        "query_text": "diggity dogs massachusetts reviews"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492297136937521"
          }
        ],
        "query_text": "diggity dogs reviews"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492297129713659"
          }
        ],
        "query_text": "psychiatric service dog"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492297040385047"
          }
        ],
        "query_text": "service dog youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492296923331609"
          }
        ],
        "query_text": "get regular dog registered as service dog"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492285747792546"
          }
        ],
        "query_text": "youtube the missing pizza mattb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492285733557287"
          }
        ],
        "query_text": "youtube the missing pizza mattyb"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492285723785347"
          }
        ],
        "query_text": "youtube the missing pizza"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492283033304754"
          }
        ],
        "query_text": "what is vintage cube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492223213006306"
          }
        ],
        "query_text": "macintosh plus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492217772149849"
          }
        ],
        "query_text": "bread pilot bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492217697857329"
          }
        ],
        "query_text": "pond new album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492200224214701"
          }
        ],
        "query_text": "macintosh plus full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492200068704152"
          },
          {
            "timestamp_usec": "1492200136286783"
          }
        ],
        "query_text": "secret society song title fight"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492194115566772"
          }
        ],
        "query_text": "supercharger sales north america"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193914701355"
          }
        ],
        "query_text": "South Boston Auto Tech, Inc. Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193895104664"
          }
        ],
        "query_text": "Extra Performance Dorchester, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193817652552"
          }
        ],
        "query_text": "Automotive Services of Boston Medford, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193717378921"
          }
        ],
        "query_text": "Bavarian Performance Group Winchester, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193653197283"
          }
        ],
        "query_text": "Seymour Performance Racing Marlborough, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193639504076"
          },
          {
            "timestamp_usec": "1492193645224281"
          }
        ],
        "query_text": "performance car shops boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193559509079"
          }
        ],
        "query_text": "German Performance Service, Inc Brighton, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193480455394"
          }
        ],
        "query_text": "J T Motoring Boston, MA"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492193467720000"
          },
          {
            "timestamp_usec": "1492193470975460"
          }
        ],
        "query_text": "performance car shops boston"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492191062889515"
          }
        ],
        "query_text": "eastside motoring"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492191049290124"
          }
        ],
        "query_text": "performance shops massachusetts"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492190990339640"
          }
        ],
        "query_text": "KandN air filters sales 2016 investors pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492190983425806"
          }
        ],
        "query_text": "KandN air filters sales 2016 pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492190968802467"
          }
        ],
        "query_text": "KandN air filters sales 2016"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189521324915"
          }
        ],
        "query_text": "sex terms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189328883939"
          },
          {
            "timestamp_usec": "1492189345776572"
          }
        ],
        "query_text": "what aftermarket accessories do people buy breakdown pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189302612856"
          }
        ],
        "query_text": "what aftermarket accessories to people buy pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189152616308"
          }
        ],
        "query_text": "holley performance parts market report pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189136751820"
          }
        ],
        "query_text": "holley performance parts market report"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189122974755"
          }
        ],
        "query_text": "WEIAND SUPERCHARGER market report"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189070020214"
          }
        ],
        "query_text": "aftermarket car accessories market breakdown  pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492189062697403"
          }
        ],
        "query_text": "aftermarket car accessories market breakdown"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188991304883"
          }
        ],
        "query_text": "what percentage of people buy superchargers for their car? -tesla pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188947698566"
          },
          {
            "timestamp_usec": "1492188973348643"
          }
        ],
        "query_text": "what percentage of people buy superchargers for their car? -tesla"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188942475955"
          }
        ],
        "query_text": "what percentage of people buy superchargers for their car?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188812144213"
          }
        ],
        "query_text": "most common sports vehicle accessories market pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188806750790"
          }
        ],
        "query_text": "most common sports vehicle accessories market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188795390149"
          }
        ],
        "query_text": "most common sports vehicle accessories"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188762590855"
          }
        ],
        "query_text": "aftermarket supercharger market research"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188756594587"
          }
        ],
        "query_text": "aftermarket supercharger market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188680883954"
          }
        ],
        "query_text": "SEMA supercharger market pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188556438023"
          }
        ],
        "query_text": "Wards Yearbook 2008 *2007 Model Year Installation Rates pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188525701265"
          }
        ],
        "query_text": "Wards Yearbook 2008 *2007 Model Year Installation Rates"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188308694126"
          }
        ],
        "query_text": "SEMA turbocharger market pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188298838573"
          }
        ],
        "query_text": "SEMA turbocharger market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188234133302"
          }
        ],
        "query_text": "Tier 2 turbocharger manufacturers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188154419535"
          }
        ],
        "query_text": "Research and Markets - Global Turbocharger Market for Commercial Vehicles 2016-2020 pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188112729546"
          }
        ],
        "query_text": "gfk global turbocharger market"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492188100860424"
          }
        ],
        "query_text": "gfk research global turbocharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492187987773232"
          }
        ],
        "query_text": "how to get free market research reports"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492140776630617"
          }
        ],
        "query_text": "killer mike outkast"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492140769315188"
          },
          {
            "timestamp_usec": "1492140772237158"
          }
        ],
        "query_text": "killer mike old photos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492137202628474"
          }
        ],
        "query_text": "something guitar chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492136548940288"
          }
        ],
        "query_text": "a day in the life chords"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492121045009101"
          }
        ],
        "query_text": "the global aftermarket market for automotive turbochargers pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492120541112644"
          }
        ],
        "query_text": "reddit electric supercharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492120491475510"
          }
        ],
        "query_text": "the global aftermarket market for automotive turbochargers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492120393769287"
          }
        ],
        "query_text": "the global market for automotive turbochargers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492120039187056"
          }
        ],
        "query_text": "The global market for automotive turbochargers Forecasts and trends for passenger cars and commercial vehicles to 2020"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119952971811"
          }
        ],
        "query_text": "THE LANG AFTERMARKET ANNUAL pdf turbocharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119946014903"
          }
        ],
        "query_text": "THE LANG AFTERMARKET ANNUAL pdf superchargers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119824246685"
          }
        ],
        "query_text": "THE LANG AFTERMARKET ANNUAL pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119708880402"
          }
        ],
        "query_text": "lang research aftermarket part sales"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119706500756"
          }
        ],
        "query_text": "lang research aftermarket part"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119696280741"
          }
        ],
        "query_text": "Source: Lang Research"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119261373887"
          }
        ],
        "query_text": "what is most common aftermarket car upgrade pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492119247977319"
          }
        ],
        "query_text": "what is most common aftermarket car upgrade"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492115788013548"
          }
        ],
        "query_text": "ros message point cloud"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492115785249177"
          }
        ],
        "query_text": "ros message point"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492115485887147"
          }
        ],
        "query_text": "ros service types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492115301248902"
          }
        ],
        "query_text": "AddTwoIntsResponse"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492114072969758"
          }
        ],
        "query_text": "how to define your own service class ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492114068442683"
          }
        ],
        "query_text": "how to define your own service class"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492113806057920"
          }
        ],
        "query_text": "ros service"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492111096317215"
          }
        ],
        "query_text": "how many superchargers are sold in the us a year -tesla"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492111090472395"
          }
        ],
        "query_text": "how many superchargers are sold in the us a year"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492110973621161"
          }
        ],
        "query_text": "how many turbochargers wer esold"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492110970555228"
          }
        ],
        "query_text": "how many turbochargers are there in the us"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492109153203331"
          }
        ],
        "query_text": "what type of car is an ng miata"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492108787178823"
          }
        ],
        "query_text": "The SEMA Market Report pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492108662712445"
          }
        ],
        "query_text": "how many turbochargers are there in the us"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492108654953722"
          }
        ],
        "query_text": "how many superchargers are there in the us"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492108192596151"
          }
        ],
        "query_text": "Specialty Equipment Market Association (SEMA)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492107547671360"
          }
        ],
        "query_text": "what is OEM"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492107509587638"
          }
        ],
        "query_text": "how many people buy aftermarket modifications to their cars?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492107366967067"
          }
        ],
        "query_text": "how to estimate how many units you will sell"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492106782184116"
          }
        ],
        "query_text": "how to calculate expected revenue for a business"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492106695583444"
          },
          {
            "timestamp_usec": "1492106769342100"
          }
        ],
        "query_text": "how to calculate expected revenue"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492104594651242"
          }
        ],
        "query_text": "olin webmail"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492103827437316"
          }
        ],
        "query_text": "5 guys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492103783564308"
          }
        ],
        "query_text": "the blank center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492103117651596"
          }
        ],
        "query_text": "can we capture enough value startup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492101617204601"
          }
        ],
        "query_text": "do i have a gpu ubuntu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492101389820254"
          }
        ],
        "query_text": "why does bash install-deps require sudo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492099991903875"
          }
        ],
        "query_text": "what is GRU ml"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492099906976351"
          }
        ],
        "query_text": "linux what does source do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492099461689729"
          }
        ],
        "query_text": "luarocks install nngraph no matching query were found"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492098596610360"
          }
        ],
        "query_text": "generating magic the gathering cards using deep convolutional neural nets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492094638799245"
          }
        ],
        "query_text": "dataset magic the gathering games"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492056542053317"
          }
        ],
        "query_text": "macintosh plus"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492056496678020"
          }
        ],
        "query_text": "macintosh 2000 bandcamp"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492056485837126"
          }
        ],
        "query_text": "macintosh 2000"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492048004273445"
          }
        ],
        "query_text": "tequila mixed drinks"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492046867136273"
          },
          {
            "timestamp_usec": "1492046893311275"
          }
        ],
        "query_text": "durian"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492036640413380"
          }
        ],
        "query_text": "xmage cards are blue"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492035767232828"
          }
        ],
        "query_text": "neural nets for non computer scientists hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492035733137523"
          }
        ],
        "query_text": "neural nets for non computer scientists ask hn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492035681320394"
          }
        ],
        "query_text": "hacker news techniques to try with neural nets"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492031065104357"
          }
        ],
        "query_text": "texas method variations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492028774133359"
          }
        ],
        "query_text": "reddit upper body only routine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492028663863319"
          }
        ],
        "query_text": "reddit 3x per week upper body only routine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492027339074860"
          }
        ],
        "query_text": "ros Point to numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492027319194680"
          }
        ],
        "query_text": "ros Points to numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1492021783576367"
          }
        ],
        "query_text": "what size screw to screw into servo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491970065078222"
          },
          {
            "timestamp_usec": "1491970072681645"
          }
        ],
        "query_text": "rugby line out"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491961213401763"
          },
          {
            "timestamp_usec": "1491961215711617"
          }
        ],
        "query_text": "frank rat"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491950775289124"
          }
        ],
        "query_text": "mtg spoilers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491944247982939"
          }
        ],
        "query_text": "engineering explained butterfly valve"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491944122366129"
          }
        ],
        "query_text": "car MAP"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491944094487935"
          }
        ],
        "query_text": "car lean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491944052204383"
          }
        ],
        "query_text": "cars that is a maf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491943025076804"
          }
        ],
        "query_text": "engineering explained what is a throttle body"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491942991563624"
          }
        ],
        "query_text": "fuel injection engineering explained"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491942973829121"
          }
        ],
        "query_text": "what is fuel injection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491942882462877"
          }
        ],
        "query_text": "IMA battery"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491942066248488"
          }
        ],
        "query_text": "blank center antonnette"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491942033503865"
          }
        ],
        "query_text": "the blank center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941906906027"
          }
        ],
        "query_text": "chassis dyno"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941522552921"
          }
        ],
        "query_text": "Diane Covello"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941404791578"
          }
        ],
        "query_text": "anti-lag device"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941312258081"
          }
        ],
        "query_text": "E90 325i"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941128722400"
          }
        ],
        "query_text": "what is a n/a car"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491941000185981"
          }
        ],
        "query_text": "NA 3L engine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940963552792"
          }
        ],
        "query_text": "Pressure ratio vs. Non-dimensional flow rate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940383247030"
          }
        ],
        "query_text": "car flywheel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940340625057"
          }
        ],
        "query_text": "boost potential car"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940335008803"
          }
        ],
        "query_text": "boost potential"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940290981428"
          }
        ],
        "query_text": "scrolls card -elder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940282467127"
          }
        ],
        "query_text": "scrolls car"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940157620296"
          }
        ],
        "query_text": "what is an alternator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491940082959135"
          }
        ],
        "query_text": "CFM flow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491939917924330"
          }
        ],
        "query_text": "what is engine capacity"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491939803908290"
          }
        ],
        "query_text": "pounds of boost"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491937912482700"
          }
        ],
        "query_text": "phantom superchargers"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491936274030005"
          }
        ],
        "query_text": "the blank center antonette"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491936159611960"
          }
        ],
        "query_text": "Antoinette at the blank center"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491934368118317"
          },
          {
            "timestamp_usec": "1491935445901079"
          }
        ],
        "query_text": "phantom supercharger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491932880569419"
          }
        ],
        "query_text": "foldable bike rack"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491931376089960"
          }
        ],
        "query_text": "United airlines stock"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491931296398279"
          }
        ],
        "query_text": "peter pan trading app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491931278218132"
          }
        ],
        "query_text": "united airlines"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491931277603166"
          }
        ],
        "query_text": "BOS     BOS   "
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930711493252"
          }
        ],
        "query_text": "folding mesh table veralaine"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930685614829"
          }
        ],
        "query_text": "folding mesh table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930583624791"
          }
        ],
        "query_text": "comfortable outdoor bistro set"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930431787915"
          }
        ],
        "query_text": "Jordan Manufacturing Metal Bistro Set, Red"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930361379067"
          }
        ],
        "query_text": "mesh patio bistro table foldable"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930348657408"
          },
          {
            "timestamp_usec": "1491930352032413"
          }
        ],
        "query_text": "mesh patio bistro table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930339105732"
          }
        ],
        "query_text": "bistro mesh patio table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930335600491"
          }
        ],
        "query_text": "mesh patio table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491930287973091"
          }
        ],
        "query_text": "cute bistro table mesh"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491923107987613"
          }
        ],
        "query_text": "BALCONY TABLE 77 X 57 CM fermob"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491923071075957"
          }
        ],
        "query_text": "bistro mesh folding table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491923065915133"
          }
        ],
        "query_text": "bistro mesh table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491922363988950"
          }
        ],
        "query_text": "mesh bistro patio table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491922347779727"
          }
        ],
        "query_text": "patio table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491918543252494"
          }
        ],
        "query_text": "Olin College of Engineering West Hall, Needham, MA -> 318 Elm St"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491918240845520"
          }
        ],
        "query_text": "fermob mesh bistro table"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491918238028158"
          }
        ],
        "query_text": "fermob mesh bistro chair"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491913286519115"
          }
        ],
        "query_text": "trelll"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491881222812557"
          }
        ],
        "query_text": "make a bingo card"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491880100252502"
          }
        ],
        "query_text": "bingo card generator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491875656909634"
          }
        ],
        "query_text": "baraka full movie"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491875440093419"
          }
        ],
        "query_text": "baraka"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491875422431190"
          }
        ],
        "query_text": "samsara"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491871049475947"
          }
        ],
        "query_text": "google forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491869285665452"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491868272867756"
          },
          {
            "timestamp_usec": "1491868287065754"
          }
        ],
        "query_text": "congratulations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491855146847942"
          }
        ],
        "query_text": "smach composable states"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491854904284116"
          }
        ],
        "query_text": "src refspec master does not match any."
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491853776607886"
          }
        ],
        "query_text": "cv2 resize"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491853519904496"
          }
        ],
        "query_text": "cv2 downsample image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491853487162354"
          }
        ],
        "query_text": "downsample cv2"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491853187014524"
          }
        ],
        "query_text": "cv2 adaptivethreshold"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491852804378698"
          },
          {
            "timestamp_usec": "1491852807156906"
          }
        ],
        "query_text": "heart"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491852465519895"
          }
        ],
        "query_text": "threshold image cv2"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491852455441833"
          }
        ],
        "query_text": "turn image into binary image"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491851938426668"
          }
        ],
        "query_text": "python state machine run states in parallel"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491846963701332"
          }
        ],
        "query_text": "mit delta tau delta summer housing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491843284868475"
          }
        ],
        "query_text": "coltrane albums"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491843252657419"
          }
        ],
        "query_text": "coltrane favorite things 1 hour"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491843221307846"
          },
          {
            "timestamp_usec": "1491843246097818"
          }
        ],
        "query_text": "coltrane favorite things"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837166715354"
          }
        ],
        "query_text": "19/240"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837130068825"
          }
        ],
        "query_text": "19*5/(100*12)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837124274999"
          }
        ],
        "query_text": "19*5"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837124024219"
          }
        ],
        "query_text": "19*5/"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837070229698"
          }
        ],
        "query_text": "0.95/12 as fraction"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491837065301980"
          }
        ],
        "query_text": "0.95/12"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491789318259581"
          }
        ],
        "query_text": "wolfram alpha"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491786245750771"
          }
        ],
        "query_text": "15*14/2)*2^(-15) + 15*2^(-15)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491784798996920"
          }
        ],
        "query_text": "(14/15)!"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491784723676822"
          }
        ],
        "query_text": "(1/15)!"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491781352762791"
          }
        ],
        "query_text": "convert numpy array of integers to floats"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491781222599773"
          }
        ],
        "query_text": "get max of np array along columns"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491780493918247"
          }
        ],
        "query_text": "numpy iterate over columns"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491780464856673"
          }
        ],
        "query_text": "iterate through numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491780227499554"
          }
        ],
        "query_text": "ros list of points from numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491779938668086"
          }
        ],
        "query_text": "np append column of zeros to array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491779827584751"
          }
        ],
        "query_text": "python get coordinates of each point of numpy array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491779415360482"
          }
        ],
        "query_text": "ros visualization marker types"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491779392491884"
          }
        ],
        "query_text": "rospy marker point array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491762065867123"
          }
        ],
        "query_text": "prusa not sticking to bed"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491761014263561"
          }
        ],
        "query_text": "controlling servo with raspberry pi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491760854337141"
          }
        ],
        "query_text": "communicating with a raspberry pi servo with ros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491758112729189"
          }
        ],
        "query_text": "cura 3d print software"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491756950684356"
          }
        ],
        "query_text": "how to export stl from fusion 360"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491756582959595"
          }
        ],
        "query_text": "fusion 360 edit fillet locations"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491756559295007"
          }
        ],
        "query_text": "fusion 360 how to edit the feature set"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491755063334800"
          },
          {
            "timestamp_usec": "1491755066435612"
          }
        ],
        "query_text": "servo horn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491754924648992"
          },
          {
            "timestamp_usec": "1491754926954389"
          }
        ],
        "query_text": "dovetail"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491754870470532"
          }
        ],
        "query_text": "messenger"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491752934951371"
          },
          {
            "timestamp_usec": "1491753060108497"
          }
        ],
        "query_text": "block diagram symbols"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491752180074843"
          }
        ],
        "query_text": "what is lstm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491747621613057"
          }
        ],
        "query_text": "computational robotics 2017"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491747149306321"
          }
        ],
        "query_text": "ml what is an ensemble"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491711389579710"
          }
        ],
        "query_text": "hacker new"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491711150100672"
          }
        ],
        "query_text": "mgmt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491694619864438"
          }
        ],
        "query_text": "300 violin orchestra"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491694534086796"
          }
        ],
        "query_text": "most hype sports song"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491691684165103"
          }
        ],
        "query_text": "goodhertz"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491689734958013"
          }
        ],
        "query_text": "james jamerson"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491672653582192"
          }
        ],
        "query_text": "who is the p-bruins enforcer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491672583656177"
          }
        ],
        "query_text": "goon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491672328753893"
          }
        ],
        "query_text": "P-bruins goon"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491672005730040"
          }
        ],
        "query_text": "tommy cross"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671953650505"
          }
        ],
        "query_text": "hungary on map"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671901445569"
          }
        ],
        "query_text": "what is eastern europe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671652503840"
          }
        ],
        "query_text": "Colby Cave"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671489881419"
          }
        ],
        "query_text": "anton khudobin website"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671442409040"
          },
          {
            "timestamp_usec": "1491671454766345"
          }
        ],
        "query_text": "anton khudobin contact"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671315299702"
          }
        ],
        "query_text": "Anton Khudobin"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671238767528"
          }
        ],
        "query_text": "providence bruins lineup"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491671022058585"
          }
        ],
        "query_text": "providence bruins"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491670856502684"
          }
        ],
        "query_text": "peter cehlarik contact"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491670808992093"
          }
        ],
        "query_text": "peter cehlarik agent"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491670709501985"
          }
        ],
        "query_text": "peter cehlarik"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491669909090597"
          }
        ],
        "query_text": "melania trump speaking"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491625101153481"
          }
        ],
        "query_text": "sexual healing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491617300445847"
          }
        ],
        "query_text": "venmo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491617041349146"
          },
          {
            "timestamp_usec": "1491617044465972"
          }
        ],
        "query_text": "jp licks wellesley hours"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491607140381250"
          }
        ],
        "query_text": "xmage popup won't go away"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491604055230423"
          },
          {
            "timestamp_usec": "1491604075316573"
          }
        ],
        "query_text": "dot art"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491597170508806"
          }
        ],
        "query_text": "how to make a loud whip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491596856114148"
          }
        ],
        "query_text": "how to make a fake whip"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491596706072472"
          }
        ],
        "query_text": "a tribe called red"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491594875907158"
          }
        ],
        "query_text": "1 in to meters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491594336440390"
          }
        ],
        "query_text": "rospy.time"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491593987484865"
          }
        ],
        "query_text": "1 inch to meters"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491593673736644"
          }
        ],
        "query_text": "smach pass userdata"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491592250399613"
          }
        ],
        "query_text": "sublime text replace string"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491592239401358"
          }
        ],
        "query_text": "sublime text 2 replace tabs with spaces"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491591571668444"
          }
        ],
        "query_text": "rospy.sleep"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491585526929440"
          }
        ],
        "query_text": "ros catkin create package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491582392519586"
          }
        ],
        "query_text": "fusion 360"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491582129493790"
          }
        ],
        "query_text": "thingiverse"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491527727376463"
          }
        ],
        "query_text": "a tribe called red"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491523601460092"
          }
        ],
        "query_text": "chance the rapper windows down"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491523056596137"
          }
        ],
        "query_text": "is borax skin safe"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491517728744407"
          }
        ],
        "query_text": "kalman filter"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491517708049075"
          }
        ],
        "query_text": "sub inch positioning sensor with imu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491514913042898"
          }
        ],
        "query_text": "sub inch positioning sensor with imu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491514568984511"
          }
        ],
        "query_text": "positioning with an imu"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491505205766093"
          }
        ],
        "query_text": "tf.summary_image example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491504262640629"
          }
        ],
        "query_text": "nn.dropout tensorflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491504257944061"
          }
        ],
        "query_text": "nn.dropout"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491501821610476"
          }
        ],
        "query_text": "what does a convolutional layer do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491500231757386"
          }
        ],
        "query_text": "tf variable attributes"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491500203093580"
          }
        ],
        "query_text": "tf variable to np array"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491499885573177"
          }
        ],
        "query_text": "add element to end of list python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491499521462002"
          }
        ],
        "query_text": "python what does star mean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491499020441709"
          }
        ],
        "query_text": "python flatten list"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491497197994003"
          }
        ],
        "query_text": "tensorflow tensorboard simple example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491492555618012"
          }
        ],
        "query_text": "coursera machine learning"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491492506392391"
          }
        ],
        "query_text": "neural network projects"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491489987270855"
          }
        ],
        "query_text": "tensorboard help"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488920166773"
          }
        ],
        "query_text": "tf.global_variables_initializer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488906741673"
          }
        ],
        "query_text": "what is tf.initialize_all_variables"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488745358466"
          }
        ],
        "query_text": "tf session.run"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488736356298"
          }
        ],
        "query_text": "what is max pooling session.run"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488543000594"
          }
        ],
        "query_text": "tf placeholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488510665193"
          }
        ],
        "query_text": "*** Error in `python': double free or corruption (!prev): 0x000000000145fc90 ***"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488498203858"
          }
        ],
        "query_text": "y_ = tf.placeholder(tf.float32, shape=[None, 10])"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488275344306"
          }
        ],
        "query_text": "tf.reshape"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491488214932103"
          }
        ],
        "query_text": "tf.placeholder"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491487522397323"
          }
        ],
        "query_text": "python string formatting code"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491487144353846"
          }
        ],
        "query_text": "tensorflow tutorial"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491480124508155"
          }
        ],
        "query_text": "0.001/pi"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491479886963744"
          }
        ],
        "query_text": "wolfram alpha"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491438949099357"
          }
        ],
        "query_text": "loveless full album"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491429566399478"
          }
        ],
        "query_text": "mtg theros"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491426748653730"
          }
        ],
        "query_text": "boston d league team"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491423559636684"
          }
        ],
        "query_text": "xmage how to set up a limited match"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491422696465800"
          }
        ],
        "query_text": "kaladesh sealed event"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491422044841675"
          }
        ],
        "query_text": "aether revolt sealed generator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491422000683030"
          }
        ],
        "query_text": "modern masters 2017 sealed generator -draft"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491421846141289"
          }
        ],
        "query_text": "modern masters 2017 sealed generator"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491416479061203"
          },
          {
            "timestamp_usec": "1491417027834578"
          }
        ],
        "query_text": "google forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491409615298106"
          }
        ],
        "query_text": "how to come up with learning goals"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491409122727892"
          }
        ],
        "query_text": "how to view a photosphere online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491409097750582"
          }
        ],
        "query_text": "google street view app"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491409028967389"
          }
        ],
        "query_text": "google photos"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491408961811084"
          }
        ],
        "query_text": "view photosphere online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491408736188379"
          }
        ],
        "query_text": "how to view a photosphere"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491401380131972"
          }
        ],
        "query_text": "what is max pooling"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491401266509082"
          }
        ],
        "query_text": "tensorflow convolution what is stride"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491400701110910"
          }
        ],
        "query_text": "tf Segmentation fault (core dumped)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491400606058907"
          }
        ],
        "query_text": "with tf.InteractiveSession() as ses"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491400080612557"
          }
        ],
        "query_text": "tf.nn.softmax_cross_entropy_with_logits"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491399841350657"
          }
        ],
        "query_text": "cross entropy simple explanation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491362898725637"
          }
        ],
        "query_text": "processing vimeo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491361135855072"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491356247819043"
          }
        ],
        "query_text": "how much do d league players make"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491346249418197"
          }
        ],
        "query_text": "how much does it cost to phantom draft in mtgo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491340020607675"
          }
        ],
        "query_text": "5 guys needham"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491339978285665"
          },
          {
            "timestamp_usec": "1491339990479650"
          }
        ],
        "query_text": "5 guys"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491336896131068"
          }
        ],
        "query_text": "shows in boston on friday songkick"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491336886020116"
          }
        ],
        "query_text": "shows in boston on friday"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491333489773107"
          }
        ],
        "query_text": "boros charm"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491330314836345"
          }
        ],
        "query_text": "how much do mtg artists get paid"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491327727258313"
          }
        ],
        "query_text": "how much does it cost to phantom draft in mtgo"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491273927672904"
          }
        ],
        "query_text": "how to add co host on facebook event"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491273028793758"
          },
          {
            "timestamp_usec": "1491273031585993"
          }
        ],
        "query_text": "zoolander file in the computer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491272992717017"
          },
          {
            "timestamp_usec": "1491272995993748"
          }
        ],
        "query_text": "caveman"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491268346284781"
          }
        ],
        "query_text": "google forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491263199097446"
          },
          {
            "timestamp_usec": "1491263203574436"
          },
          {
            "timestamp_usec": "1491263206659254"
          },
          {
            "timestamp_usec": "1491263209926634"
          }
        ],
        "query_text": "samsara"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491263194519623"
          }
        ],
        "query_text": "sasara"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491262870447634"
          },
          {
            "timestamp_usec": "1491262876457148"
          }
        ],
        "query_text": "barry"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491257529002848"
          }
        ],
        "query_text": "alex g hollow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491244374938990"
          }
        ],
        "query_text": "creating a neural net in tensorflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491244110228390"
          }
        ],
        "query_text": "tf.add_n example"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491244027019243"
          }
        ],
        "query_text": "tf.add that takes multiple  tensorflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491244023108298"
          }
        ],
        "query_text": "tf.add that takes multiple"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491244018108640"
          }
        ],
        "query_text": "tf.add that takes multiple arguments"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243980540791"
          }
        ],
        "query_text": "tf.add"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243678025946"
          }
        ],
        "query_text": "tutorial ml problems"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243644128169"
          }
        ],
        "query_text": "progressively harder machine learning challenges"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243638287088"
          }
        ],
        "query_text": "progressively harder machine learning problems"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243620977069"
          }
        ],
        "query_text": "progressively harder machine learning puzzles"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243578154161"
          }
        ],
        "query_text": "simple machine learning problems"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491243362109019"
          }
        ],
        "query_text": "Unsuccessful TensorSliceReader constructor: Failed to find any matching files for"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491242469596896"
          }
        ],
        "query_text": "tf has no attribute 'mul'"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491242122487570"
          }
        ],
        "query_text": "what is the adam optimization method"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491240577882123"
          }
        ],
        "query_text": "building a simple model with tensorflow"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491164257137307"
          }
        ],
        "query_text": "olin web mail"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491162990792330"
          }
        ],
        "query_text": "mike glozier"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491157459671411"
          }
        ],
        "query_text": "google forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491152408568534"
          },
          {
            "timestamp_usec": "1491152411704384"
          }
        ],
        "query_text": "the senate"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491152349062986"
          }
        ],
        "query_text": "dinrova horror"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491151069135081"
          }
        ],
        "query_text": "teleportal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491150056465093"
          }
        ],
        "query_text": "dinrova horror"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491149522569003"
          }
        ],
        "query_text": "channel fireball aethervolt draft youtube"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491149376074158"
          }
        ],
        "query_text": "channel fireball aethervolt draft"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491145385816329"
          }
        ],
        "query_text": "cv2 imsave"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491144508322015"
          }
        ],
        "query_text": "hacker news"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491144088058207"
          }
        ],
        "query_text": "Automatic Detection of Dining Plates for Image-Based Dietary Evaluation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491143851359796"
          }
        ],
        "query_text": "deepfood"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491101438893717"
          }
        ],
        "query_text": "how much does harvey mudda presofent earn"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491094724861183"
          }
        ],
        "query_text": "xmage"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491093727917372"
          },
          {
            "timestamp_usec": "1491093735313093"
          }
        ],
        "query_text": "is inspiring sanctuary good?"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491093213607847"
          }
        ],
        "query_text": "best magic draft online"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491093204581709"
          }
        ],
        "query_text": "best magic draft"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491093201670842"
          }
        ],
        "query_text": "best magic draft formats"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491090274776122"
          }
        ],
        "query_text": "lsv aether revolt draft #3"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491088811691474"
          }
        ],
        "query_text": "mtg what does prowess do"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491081004699454"
          }
        ],
        "query_text": "mtg what is improvise"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080724927094"
          }
        ],
        "query_text": "aether revolt removal mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080717223174"
          }
        ],
        "query_text": "aethervolt removal mtg"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080672352070"
          }
        ],
        "query_text": "aethervolt removal"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080270092491"
          },
          {
            "timestamp_usec": "1491080654837034"
          }
        ],
        "query_text": "lsv aether revolt draft"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080085077704"
          }
        ],
        "query_text": "plate detection food"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080077281303"
          }
        ],
        "query_text": "plate detection"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080065506168"
          }
        ],
        "query_text": "Saliency-aware food image segmentation for personal dietary assessment using a wearable computer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080022754267"
          }
        ],
        "query_text": "Hsin-Chen Chen et al 2015 plate isolation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491080016423170"
          }
        ],
        "query_text": "Hsin-Chen Chen et al 2015"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491079838804737"
          }
        ],
        "query_text": "deep food pdf"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491079834986719"
          }
        ],
        "query_text": "deepfood"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491079294743187"
          }
        ],
        "query_text": "github readme cheat sheet"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491079123342553"
          }
        ],
        "query_text": "git undo commit"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491078823310755"
          }
        ],
        "query_text": "ubuntu snipping tool"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491077786911219"
          }
        ],
        "query_text": "how to install a sublime package"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491077738421653"
          }
        ],
        "query_text": "subl prettify json file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491077695886327"
          }
        ],
        "query_text": "open image ubuntu command line"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491076884733011"
          }
        ],
        "query_text": "could not find any downloads that satisfy the requirement opencv-python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491076825592666"
          }
        ],
        "query_text": "pip install opencv"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491076647283019"
          }
        ],
        "query_text": "how to make a virtual environment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491076155190170"
          }
        ],
        "query_text": "json files"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075657919223"
          }
        ],
        "query_text": "create empty virtual environment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075524658569"
          }
        ],
        "query_text": "python virtualenv has unnecessary packages"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075471357775"
          }
        ],
        "query_text": "new virtualenv is not clean"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075417793245"
          }
        ],
        "query_text": "virtualenvwrapper"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075216642616"
          }
        ],
        "query_text": "uninstall all pip modules not used on virtual environment"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075161218572"
          }
        ],
        "query_text": "pip freeze requirements.txt"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491075072979251"
          },
          {
            "timestamp_usec": "1491075076283864"
          }
        ],
        "query_text": "food"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491073524160694"
          }
        ],
        "query_text": "python load data from json"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491068346323690"
          }
        ],
        "query_text": "delta tau delta summer housing"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491065403430261"
          }
        ],
        "query_text": "google sheets n choose k"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491063204960409"
          }
        ],
        "query_text": "(2!*21!/24!)/(((1/2)^2)(1/2)^21)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491063194138810"
          }
        ],
        "query_text": "(2!*21!/4!)/(((1/2)^2)(1/2)^21)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491063154405051"
          }
        ],
        "query_text": "(2!*23!/26!)/(((1/2)^2)(1/2)^23)"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491063086794594"
          }
        ],
        "query_text": "2!*23!/26!="
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491062503626985"
          }
        ],
        "query_text": "why is it warmer in the summer"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491062012627167"
          }
        ],
        "query_text": "29/32"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491058988881459"
          }
        ],
        "query_text": "0.00429553265/0.01463585402"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491058954779109"
          }
        ],
        "query_text": "0.00429553265"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491058754907777"
          }
        ],
        "query_text": "sqrt(587*577/(1165^3))"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491058521757526"
          }
        ],
        "query_text": "what is a standard deviation"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491057267181742"
          }
        ],
        "query_text": "1/5"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491057082269847"
          }
        ],
        "query_text": "wolfram alpha"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491056403509115"
          }
        ],
        "query_text": "ubuntu how to move stuff down a screen"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491055170964666"
          }
        ],
        "query_text": "(5!)/(26*25*24*23*22*21)="
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491055156498727"
          }
        ],
        "query_text": "5!"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491052787213821"
          }
        ],
        "query_text": "taylor series formula"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491052460859360"
          }
        ],
        "query_text": "python save json to a file"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491052392963405"
          }
        ],
        "query_text": "difference between json.dump and json.dumps"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491052086643586"
          }
        ],
        "query_text": "json.dump"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051993216605"
          }
        ],
        "query_text": "python json file write"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051953969923"
          }
        ],
        "query_text": "pickle python"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051943273494"
          }
        ],
        "query_text": "python preserving information"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051940900943"
          }
        ],
        "query_text": "python pass function as argument"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051929860615"
          }
        ],
        "query_text": "subsisting information"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051842672416"
          }
        ],
        "query_text": "readline.parse_and_bind( tab complete )"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491051776214966"
          }
        ],
        "query_text": "google forms"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491050705195990"
          }
        ],
        "query_text": "what is an interop call"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491049789863053"
          }
        ],
        "query_text": "what is an fpga"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491014537540340"
          }
        ],
        "query_text": "yesmovies"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491014258329720"
          }
        ],
        "query_text": "tribal arm piece"
      }
    },
    {
      "query": {
        "id": [
          {
            "timestamp_usec": "1491014137743418"
          },
          {
            "timestamp_usec": "1491014141263612"
          }
        ],
        "query_text": "arm piece"
      }
    }
  ]
}
